import * as classes from './classes';

type AbstractArrow = typeof classes.AbstractArrow;
type AbstractArrow$PickupRule = typeof classes.AbstractArrow$PickupRule;
type AbstractArrow$PickupStatus = typeof classes.AbstractArrow$PickupStatus;
type AbstractHorse = typeof classes.AbstractHorse;
type AbstractHorseInventory = typeof classes.AbstractHorseInventory;
type AbstractVillager = typeof classes.AbstractVillager;
type Action = typeof classes.Action;
type Advancement = typeof classes.Advancement;
type AdvancementProgress = typeof classes.AdvancementProgress;
type Ageable = typeof classes.Ageable;
type Ageable = typeof classes.Ageable;
type Ambient = typeof classes.Ambient;
type AnaloguePowerable = typeof classes.AnaloguePowerable;
type Animals = typeof classes.Animals;
type AnimalTamer = typeof classes.AnimalTamer;
type AnvilDamagedEvent = typeof classes.AnvilDamagedEvent;
type AnvilDamagedEvent$DamageState = typeof classes.AnvilDamagedEvent$DamageState;
type AnvilInventory = typeof classes.AnvilInventory;
type AreaEffectCloud = typeof classes.AreaEffectCloud;
type AreaEffectCloudApplyEvent = typeof classes.AreaEffectCloudApplyEvent;
type ArmoredHorseInventory = typeof classes.ArmoredHorseInventory;
type ArmorStand = typeof classes.ArmorStand;
type ArmorStandMeta = typeof classes.ArmorStandMeta;
type Arrow = typeof classes.Arrow;
type Art = typeof classes.Art;
type ASMEventExecutorGenerator = typeof classes.ASMEventExecutorGenerator;
type AsyncPlayerChatEvent = typeof classes.AsyncPlayerChatEvent;
type AsyncPlayerPreLoginEvent = typeof classes.AsyncPlayerPreLoginEvent;
type AsyncPlayerPreLoginEvent$Result = typeof classes.AsyncPlayerPreLoginEvent$Result;
type AsyncTabCompleteEvent = typeof classes.AsyncTabCompleteEvent;
type Attachable = typeof classes.Attachable;
type Attachable = typeof classes.Attachable;
type Attributable = typeof classes.Attributable;
type Attribute = typeof classes.Attribute;
type AttributeInstance = typeof classes.AttributeInstance;
type AttributeModifier = typeof classes.AttributeModifier;
type AttributeModifier$Operation = typeof classes.AttributeModifier$Operation;
type AuthorNagException = typeof classes.AuthorNagException;
type Axis = typeof classes.Axis;
type Bamboo = typeof classes.Bamboo;
type Bamboo$Leaves = typeof classes.Bamboo$Leaves;
type BanEntry = typeof classes.BanEntry;
type BanList = typeof classes.BanList;
type BanList$Type = typeof classes.BanList$Type;
type Banner = typeof classes.Banner;
type Banner = typeof classes.Banner;
type BannerMeta = typeof classes.BannerMeta;
type BarColor = typeof classes.BarColor;
type BarFlag = typeof classes.BarFlag;
type Barrel = typeof classes.Barrel;
type BarStyle = typeof classes.BarStyle;
type Bat = typeof classes.Bat;
type BatToggleSleepEvent = typeof classes.BatToggleSleepEvent;
type Beacon = typeof classes.Beacon;
type BeaconEffectEvent = typeof classes.BeaconEffectEvent;
type BeaconInventory = typeof classes.BeaconInventory;
type Bed = typeof classes.Bed;
type Bed = typeof classes.Bed;
type Bed = typeof classes.Bed;
type Bed$Part = typeof classes.Bed$Part;
type Bee = typeof classes.Bee;
type Beehive = typeof classes.Beehive;
type Beehive = typeof classes.Beehive;
type Bell = typeof classes.Bell;
type Bell = typeof classes.Bell;
type Bell$Attachment = typeof classes.Bell$Attachment;
type Biome = typeof classes.Biome;
type Bisected = typeof classes.Bisected;
type Bisected$Half = typeof classes.Bisected$Half;
type BlastFurnace = typeof classes.BlastFurnace;
type BlastingRecipe = typeof classes.BlastingRecipe;
type Blaze = typeof classes.Blaze;
type Block = typeof classes.Block;
type BlockBreakEvent = typeof classes.BlockBreakEvent;
type BlockBurnEvent = typeof classes.BlockBurnEvent;
type BlockCanBuildEvent = typeof classes.BlockCanBuildEvent;
type BlockChangeDelegate = typeof classes.BlockChangeDelegate;
type BlockCommandSender = typeof classes.BlockCommandSender;
type BlockCookEvent = typeof classes.BlockCookEvent;
type BlockDamageEvent = typeof classes.BlockDamageEvent;
type BlockData = typeof classes.BlockData;
type BlockDataMeta = typeof classes.BlockDataMeta;
type BlockDestroyEvent = typeof classes.BlockDestroyEvent;
type BlockDispenseArmorEvent = typeof classes.BlockDispenseArmorEvent;
type BlockDispenseEvent = typeof classes.BlockDispenseEvent;
type BlockDropItemEvent = typeof classes.BlockDropItemEvent;
type BlockEvent = typeof classes.BlockEvent;
type BlockExpEvent = typeof classes.BlockExpEvent;
type BlockExplodeEvent = typeof classes.BlockExplodeEvent;
type BlockFace = typeof classes.BlockFace;
type BlockFadeEvent = typeof classes.BlockFadeEvent;
type BlockFertilizeEvent = typeof classes.BlockFertilizeEvent;
type BlockFormEvent = typeof classes.BlockFormEvent;
type BlockFromToEvent = typeof classes.BlockFromToEvent;
type BlockGrowEvent = typeof classes.BlockGrowEvent;
type BlockIgniteEvent = typeof classes.BlockIgniteEvent;
type BlockIgniteEvent$IgniteCause = typeof classes.BlockIgniteEvent$IgniteCause;
type BlockInventoryHolder = typeof classes.BlockInventoryHolder;
type BlockIterator = typeof classes.BlockIterator;
type BlockMultiPlaceEvent = typeof classes.BlockMultiPlaceEvent;
type BlockPhysicsEvent = typeof classes.BlockPhysicsEvent;
type BlockPistonEvent = typeof classes.BlockPistonEvent;
type BlockPistonExtendEvent = typeof classes.BlockPistonExtendEvent;
type BlockPistonRetractEvent = typeof classes.BlockPistonRetractEvent;
type BlockPlaceEvent = typeof classes.BlockPlaceEvent;
type BlockPopulator = typeof classes.BlockPopulator;
type BlockProjectileSource = typeof classes.BlockProjectileSource;
type BlockRedstoneEvent = typeof classes.BlockRedstoneEvent;
type BlockShearEntityEvent = typeof classes.BlockShearEntityEvent;
type BlockSoundGroup = typeof classes.BlockSoundGroup;
type BlockSpreadEvent = typeof classes.BlockSpreadEvent;
type BlockState = typeof classes.BlockState;
type BlockStateMeta = typeof classes.BlockStateMeta;
type BlockVector = typeof classes.BlockVector;
type Boat = typeof classes.Boat;
type BookMeta = typeof classes.BookMeta;
type BookMeta$Generation = typeof classes.BookMeta$Generation;
type BookMeta$Spigot = typeof classes.BookMeta$Spigot;
type BooleanPrompt = typeof classes.BooleanPrompt;
type Boss = typeof classes.Boss;
type BossBar = typeof classes.BossBar;
type BoundingBox = typeof classes.BoundingBox;
type BrewerInventory = typeof classes.BrewerInventory;
type BrewEvent = typeof classes.BrewEvent;
type BrewingStand = typeof classes.BrewingStand;
type BrewingStand = typeof classes.BrewingStand;
type BrewingStandFuelEvent = typeof classes.BrewingStandFuelEvent;
type BroadcastMessageEvent = typeof classes.BroadcastMessageEvent;
type BroadcastPermissions = typeof classes.BroadcastPermissions;
type BubbleColumn = typeof classes.BubbleColumn;
type BufferedCommandSender = typeof classes.BufferedCommandSender;
type Bukkit = typeof classes.Bukkit;
type BukkitCommand = typeof classes.BukkitCommand;
type BukkitObjectInputStream = typeof classes.BukkitObjectInputStream;
type BukkitObjectOutputStream = typeof classes.BukkitObjectOutputStream;
type BukkitRunnable = typeof classes.BukkitRunnable;
type BukkitScheduler = typeof classes.BukkitScheduler;
type BukkitTask = typeof classes.BukkitTask;
type BukkitWorker = typeof classes.BukkitWorker;
type Button = typeof classes.Button;
type CachedServerIcon = typeof classes.CachedServerIcon;
type CachedSizeConcurrentLinkedQueue = typeof classes.CachedSizeConcurrentLinkedQueue;
type Cake = typeof classes.Cake;
type Cake = typeof classes.Cake;
type Campfire = typeof classes.Campfire;
type Campfire = typeof classes.Campfire;
type CampfireRecipe = typeof classes.CampfireRecipe;
type Cancellable = typeof classes.Cancellable;
type CartographyInventory = typeof classes.CartographyInventory;
type Cat = typeof classes.Cat;
type Cat$Type = typeof classes.Cat$Type;
type Cauldron = typeof classes.Cauldron;
type CauldronLevelChangeEvent = typeof classes.CauldronLevelChangeEvent;
type CauldronLevelChangeEvent$ChangeReason = typeof classes.CauldronLevelChangeEvent$ChangeReason;
type CaveSpider = typeof classes.CaveSpider;
type ChannelNameTooLongException = typeof classes.ChannelNameTooLongException;
type ChannelNotRegisteredException = typeof classes.ChannelNotRegisteredException;
type ChatColor = typeof classes.ChatColor;
type ChatPaginator = typeof classes.ChatPaginator;
type ChatPaginator$ChatPage = typeof classes.ChatPaginator$ChatPage;
type Chest = typeof classes.Chest;
type Chest = typeof classes.Chest;
type Chest = typeof classes.Chest;
type Chest$Type = typeof classes.Chest$Type;
type ChestedHorse = typeof classes.ChestedHorse;
type Chicken = typeof classes.Chicken;
type Chunk = typeof classes.Chunk;
type ChunkEvent = typeof classes.ChunkEvent;
type ChunkGenerator = typeof classes.ChunkGenerator;
type ChunkGenerator$BiomeGrid = typeof classes.ChunkGenerator$BiomeGrid;
type ChunkGenerator$ChunkData = typeof classes.ChunkGenerator$ChunkData;
type ChunkLoadEvent = typeof classes.ChunkLoadEvent;
type ChunkPopulateEvent = typeof classes.ChunkPopulateEvent;
type ChunkSnapshot = typeof classes.ChunkSnapshot;
type ChunkUnloadEvent = typeof classes.ChunkUnloadEvent;
type ClassDefiner = typeof classes.ClassDefiner;
type ClickType = typeof classes.ClickType;
type ClientOption = typeof classes.ClientOption;
type ClientOption$ChatVisibility = typeof classes.ClientOption$ChatVisibility;
type Coal = typeof classes.Coal;
type CoalType = typeof classes.CoalType;
type Cocoa = typeof classes.Cocoa;
type CocoaPlant = typeof classes.CocoaPlant;
type CocoaPlant$CocoaPlantSize = typeof classes.CocoaPlant$CocoaPlantSize;
type Cod = typeof classes.Cod;
type Color = typeof classes.Color;
type Colorable = typeof classes.Colorable;
type Command = typeof classes.Command;
type Command = typeof classes.Command;
type CommandBlock = typeof classes.CommandBlock;
type CommandBlock = typeof classes.CommandBlock;
type CommandException = typeof classes.CommandException;
type CommandExecutor = typeof classes.CommandExecutor;
type CommandMap = typeof classes.CommandMap;
type CommandMinecart = typeof classes.CommandMinecart;
type CommandPermissions = typeof classes.CommandPermissions;
type CommandSender = typeof classes.CommandSender;
type CommandSender$Spigot = typeof classes.CommandSender$Spigot;
type Comparator = typeof classes.Comparator;
type Comparator = typeof classes.Comparator;
type Comparator = typeof classes.Comparator;
type Comparator$Mode = typeof classes.Comparator$Mode;
type CompassMeta = typeof classes.CompassMeta;
type ComplexEntityPart = typeof classes.ComplexEntityPart;
type ComplexLivingEntity = typeof classes.ComplexLivingEntity;
type ComplexRecipe = typeof classes.ComplexRecipe;
type Conduit = typeof classes.Conduit;
type Configuration = typeof classes.Configuration;
type ConfigurationOptions = typeof classes.ConfigurationOptions;
type ConfigurationSection = typeof classes.ConfigurationSection;
type ConfigurationSerializable = typeof classes.ConfigurationSerializable;
type ConfigurationSerialization = typeof classes.ConfigurationSerialization;
type ConsoleCommandSender = typeof classes.ConsoleCommandSender;
type Consumer = typeof classes.Consumer;
type Container = typeof classes.Container;
type Conversable = typeof classes.Conversable;
type Conversation = typeof classes.Conversation;
type Conversation$ConversationState = typeof classes.Conversation$ConversationState;
type ConversationAbandonedEvent = typeof classes.ConversationAbandonedEvent;
type ConversationAbandonedListener = typeof classes.ConversationAbandonedListener;
type ConversationCanceller = typeof classes.ConversationCanceller;
type ConversationContext = typeof classes.ConversationContext;
type ConversationFactory = typeof classes.ConversationFactory;
type ConversationPrefix = typeof classes.ConversationPrefix;
type CookingRecipe = typeof classes.CookingRecipe;
type CoralWallFan = typeof classes.CoralWallFan;
type Counter = typeof classes.Counter;
type Cow = typeof classes.Cow;
type CraftingInventory = typeof classes.CraftingInventory;
type CraftItemEvent = typeof classes.CraftItemEvent;
type Creature = typeof classes.Creature;
type CreatureSpawner = typeof classes.CreatureSpawner;
type CreatureSpawnEvent = typeof classes.CreatureSpawnEvent;
type CreatureSpawnEvent$SpawnReason = typeof classes.CreatureSpawnEvent$SpawnReason;
type Creeper = typeof classes.Creeper;
type CreeperIgniteEvent = typeof classes.CreeperIgniteEvent;
type CreeperPowerEvent = typeof classes.CreeperPowerEvent;
type CreeperPowerEvent$PowerCause = typeof classes.CreeperPowerEvent$PowerCause;
type Criterias = typeof classes.Criterias;
type Crops = typeof classes.Crops;
type CropState = typeof classes.CropState;
type CrossbowMeta = typeof classes.CrossbowMeta;
type CustomItemTagContainer = typeof classes.CustomItemTagContainer;
type CustomTimingsHandler = typeof classes.CustomTimingsHandler;
type Damageable = typeof classes.Damageable;
type Damageable = typeof classes.Damageable;
type DaylightDetector = typeof classes.DaylightDetector;
type DaylightDetector = typeof classes.DaylightDetector;
type DefaultPermissions = typeof classes.DefaultPermissions;
type DelegateDeserialization = typeof classes.DelegateDeserialization;
type DetectorRail = typeof classes.DetectorRail;
type Difficulty = typeof classes.Difficulty;
type Diode = typeof classes.Diode;
type Directional = typeof classes.Directional;
type Directional = typeof classes.Directional;
type DirectionalContainer = typeof classes.DirectionalContainer;
type Dispenser = typeof classes.Dispenser;
type Dispenser = typeof classes.Dispenser;
type Dispenser = typeof classes.Dispenser;
type DisplaySlot = typeof classes.DisplaySlot;
type Dolphin = typeof classes.Dolphin;
type Donkey = typeof classes.Donkey;
type Door = typeof classes.Door;
type Door = typeof classes.Door;
type Door$Hinge = typeof classes.Door$Hinge;
type DoubleChest = typeof classes.DoubleChest;
type DoubleChestInventory = typeof classes.DoubleChestInventory;
type DragonBattle = typeof classes.DragonBattle;
type DragonBattle$RespawnPhase = typeof classes.DragonBattle$RespawnPhase;
type DragonFireball = typeof classes.DragonFireball;
type DragType = typeof classes.DragType;
type Dropper = typeof classes.Dropper;
type Drowned = typeof classes.Drowned;
type Dye = typeof classes.Dye;
type DyeColor = typeof classes.DyeColor;
type Effect = typeof classes.Effect;
type Effect$Type = typeof classes.Effect$Type;
type Egg = typeof classes.Egg;
type ElderGuardian = typeof classes.ElderGuardian;
type EnchantingInventory = typeof classes.EnchantingInventory;
type EnchantingTable = typeof classes.EnchantingTable;
type EnchantItemEvent = typeof classes.EnchantItemEvent;
type Enchantment = typeof classes.Enchantment;
type EnchantmentOffer = typeof classes.EnchantmentOffer;
type EnchantmentStorageMeta = typeof classes.EnchantmentStorageMeta;
type EnchantmentTarget = typeof classes.EnchantmentTarget;
type EnchantmentWrapper = typeof classes.EnchantmentWrapper;
type EnderChest = typeof classes.EnderChest;
type EnderChest = typeof classes.EnderChest;
type EnderChest = typeof classes.EnderChest;
type EnderCrystal = typeof classes.EnderCrystal;
type EnderDragon = typeof classes.EnderDragon;
type EnderDragon$Phase = typeof classes.EnderDragon$Phase;
type EnderDragonChangePhaseEvent = typeof classes.EnderDragonChangePhaseEvent;
type EnderDragonFireballHitEvent = typeof classes.EnderDragonFireballHitEvent;
type EnderDragonFlameEvent = typeof classes.EnderDragonFlameEvent;
type EnderDragonPart = typeof classes.EnderDragonPart;
type EnderDragonShootFireballEvent = typeof classes.EnderDragonShootFireballEvent;
type Enderman = typeof classes.Enderman;
type EndermanAttackPlayerEvent = typeof classes.EndermanAttackPlayerEvent;
type EndermanEscapeEvent = typeof classes.EndermanEscapeEvent;
type EndermanEscapeEvent$Reason = typeof classes.EndermanEscapeEvent$Reason;
type Endermite = typeof classes.Endermite;
type EnderPearl = typeof classes.EnderPearl;
type EnderSignal = typeof classes.EnderSignal;
type EndGateway = typeof classes.EndGateway;
type EndPortalFrame = typeof classes.EndPortalFrame;
type Entity = typeof classes.Entity;
type Entity$Spigot = typeof classes.Entity$Spigot;
type EntityAddToWorldEvent = typeof classes.EntityAddToWorldEvent;
type EntityAirChangeEvent = typeof classes.EntityAirChangeEvent;
type EntityBlockFormEvent = typeof classes.EntityBlockFormEvent;
type EntityBlockStorage = typeof classes.EntityBlockStorage;
type EntityBreakDoorEvent = typeof classes.EntityBreakDoorEvent;
type EntityBreedEvent = typeof classes.EntityBreedEvent;
type EntityChangeBlockEvent = typeof classes.EntityChangeBlockEvent;
type EntityCombustByBlockEvent = typeof classes.EntityCombustByBlockEvent;
type EntityCombustByEntityEvent = typeof classes.EntityCombustByEntityEvent;
type EntityCombustEvent = typeof classes.EntityCombustEvent;
type EntityCreatePortalEvent = typeof classes.EntityCreatePortalEvent;
type EntityDamageByBlockEvent = typeof classes.EntityDamageByBlockEvent;
type EntityDamageByEntityEvent = typeof classes.EntityDamageByEntityEvent;
type EntityDamageEvent = typeof classes.EntityDamageEvent;
type EntityDamageEvent$DamageCause = typeof classes.EntityDamageEvent$DamageCause;
type EntityDamageEvent$DamageModifier = typeof classes.EntityDamageEvent$DamageModifier;
type EntityDeathEvent = typeof classes.EntityDeathEvent;
type EntityDismountEvent = typeof classes.EntityDismountEvent;
type EntityDropItemEvent = typeof classes.EntityDropItemEvent;
type EntityEffect = typeof classes.EntityEffect;
type EntityEnterBlockEvent = typeof classes.EntityEnterBlockEvent;
type EntityEnterLoveModeEvent = typeof classes.EntityEnterLoveModeEvent;
type EntityEquipment = typeof classes.EntityEquipment;
type EntityEvent = typeof classes.EntityEvent;
type EntityExplodeEvent = typeof classes.EntityExplodeEvent;
type EntityInteractEvent = typeof classes.EntityInteractEvent;
type EntityJumpEvent = typeof classes.EntityJumpEvent;
type EntityKnockbackByEntityEvent = typeof classes.EntityKnockbackByEntityEvent;
type EntityMountEvent = typeof classes.EntityMountEvent;
type EntityPathfindEvent = typeof classes.EntityPathfindEvent;
type EntityPickupItemEvent = typeof classes.EntityPickupItemEvent;
type EntityPlaceEvent = typeof classes.EntityPlaceEvent;
type EntityPortalEnterEvent = typeof classes.EntityPortalEnterEvent;
type EntityPortalEvent = typeof classes.EntityPortalEvent;
type EntityPortalExitEvent = typeof classes.EntityPortalExitEvent;
type EntityPoseChangeEvent = typeof classes.EntityPoseChangeEvent;
type EntityPotionEffectEvent = typeof classes.EntityPotionEffectEvent;
type EntityPotionEffectEvent$Action = typeof classes.EntityPotionEffectEvent$Action;
type EntityPotionEffectEvent$Cause = typeof classes.EntityPotionEffectEvent$Cause;
type EntityRegainHealthEvent = typeof classes.EntityRegainHealthEvent;
type EntityRegainHealthEvent$RegainReason = typeof classes.EntityRegainHealthEvent$RegainReason;
type EntityRemoveFromWorldEvent = typeof classes.EntityRemoveFromWorldEvent;
type EntityResurrectEvent = typeof classes.EntityResurrectEvent;
type EntityShootBowEvent = typeof classes.EntityShootBowEvent;
type EntitySpawnEvent = typeof classes.EntitySpawnEvent;
type EntityTameEvent = typeof classes.EntityTameEvent;
type EntityTargetEvent = typeof classes.EntityTargetEvent;
type EntityTargetEvent$TargetReason = typeof classes.EntityTargetEvent$TargetReason;
type EntityTargetLivingEntityEvent = typeof classes.EntityTargetLivingEntityEvent;
type EntityTeleportEndGatewayEvent = typeof classes.EntityTeleportEndGatewayEvent;
type EntityTeleportEvent = typeof classes.EntityTeleportEvent;
type EntityToggleGlideEvent = typeof classes.EntityToggleGlideEvent;
type EntityToggleSwimEvent = typeof classes.EntityToggleSwimEvent;
type EntityTransformedEvent = typeof classes.EntityTransformedEvent;
type EntityTransformedEvent$TransformedReason = typeof classes.EntityTransformedEvent$TransformedReason;
type EntityTransformEvent = typeof classes.EntityTransformEvent;
type EntityTransformEvent$TransformReason = typeof classes.EntityTransformEvent$TransformReason;
type EntityType = typeof classes.EntityType;
type EntityUnleashEvent = typeof classes.EntityUnleashEvent;
type EntityUnleashEvent$UnleashReason = typeof classes.EntityUnleashEvent$UnleashReason;
type EntityZapEvent = typeof classes.EntityZapEvent;
type EquipmentSlot = typeof classes.EquipmentSlot;
type EulerAngle = typeof classes.EulerAngle;
type Event = typeof classes.Event;
type Event$Result = typeof classes.Event$Result;
type EventException = typeof classes.EventException;
type EventExecutor = typeof classes.EventExecutor;
type EventHandler = typeof classes.EventHandler;
type EventPriority = typeof classes.EventPriority;
type Evoker = typeof classes.Evoker;
type Evoker$Spell = typeof classes.Evoker$Spell;
type EvokerFangs = typeof classes.EvokerFangs;
type ExactMatchConversationCanceller = typeof classes.ExactMatchConversationCanceller;
type ExpBottleEvent = typeof classes.ExpBottleEvent;
type ExperienceOrb = typeof classes.ExperienceOrb;
type ExperienceOrb$SpawnReason = typeof classes.ExperienceOrb$SpawnReason;
type ExperienceOrbMergeEvent = typeof classes.ExperienceOrbMergeEvent;
type ExplosionPrimeEvent = typeof classes.ExplosionPrimeEvent;
type Explosive = typeof classes.Explosive;
type ExplosiveMinecart = typeof classes.ExplosiveMinecart;
type ExtendedRails = typeof classes.ExtendedRails;
type FaceAttachable = typeof classes.FaceAttachable;
type FaceAttachable$AttachedFace = typeof classes.FaceAttachable$AttachedFace;
type FallingBlock = typeof classes.FallingBlock;
type Farmland = typeof classes.Farmland;
type Fence = typeof classes.Fence;
type FileConfiguration = typeof classes.FileConfiguration;
type FileConfigurationOptions = typeof classes.FileConfigurationOptions;
type FileUtil = typeof classes.FileUtil;
type FillProfileEvent = typeof classes.FillProfileEvent;
type Fire = typeof classes.Fire;
type Fireball = typeof classes.Fireball;
type Firework = typeof classes.Firework;
type FireworkEffect = typeof classes.FireworkEffect;
type FireworkEffect$Builder = typeof classes.FireworkEffect$Builder;
type FireworkEffect$Type = typeof classes.FireworkEffect$Type;
type FireworkEffectMeta = typeof classes.FireworkEffectMeta;
type FireworkExplodeEvent = typeof classes.FireworkExplodeEvent;
type FireworkMeta = typeof classes.FireworkMeta;
type Fish = typeof classes.Fish;
type FishHook = typeof classes.FishHook;
type FixedMetadataValue = typeof classes.FixedMetadataValue;
type FixedSetPrompt = typeof classes.FixedSetPrompt;
type FlowerPot = typeof classes.FlowerPot;
type FluidCollisionMode = typeof classes.FluidCollisionMode;
type FluidLevelChangeEvent = typeof classes.FluidLevelChangeEvent;
type Flying = typeof classes.Flying;
type FoodLevelChangeEvent = typeof classes.FoodLevelChangeEvent;
type FormattedCommandAlias = typeof classes.FormattedCommandAlias;
type Fox = typeof classes.Fox;
type Fox$Type = typeof classes.Fox$Type;
type FullServerTickHandler = typeof classes.FullServerTickHandler;
type Furnace = typeof classes.Furnace;
type Furnace = typeof classes.Furnace;
type Furnace = typeof classes.Furnace;
type FurnaceAndDispenser = typeof classes.FurnaceAndDispenser;
type FurnaceBurnEvent = typeof classes.FurnaceBurnEvent;
type FurnaceExtractEvent = typeof classes.FurnaceExtractEvent;
type FurnaceInventory = typeof classes.FurnaceInventory;
type FurnaceRecipe = typeof classes.FurnaceRecipe;
type FurnaceSmeltEvent = typeof classes.FurnaceSmeltEvent;
type GameMode = typeof classes.GameMode;
type GameRule = typeof classes.GameRule;
type Gate = typeof classes.Gate;
type Gate = typeof classes.Gate;
type GenericCommandHelpTopic = typeof classes.GenericCommandHelpTopic;
type Ghast = typeof classes.Ghast;
type Giant = typeof classes.Giant;
type GlassPane = typeof classes.GlassPane;
type Goal = typeof classes.Goal;
type GoalKey = typeof classes.GoalKey;
type GoalType = typeof classes.GoalType;
type Golem = typeof classes.Golem;
type GrassSpecies = typeof classes.GrassSpecies;
type Grindstone = typeof classes.Grindstone;
type GrindstoneInventory = typeof classes.GrindstoneInventory;
type GS4QueryEvent = typeof classes.GS4QueryEvent;
type GS4QueryEvent$QueryResponse = typeof classes.GS4QueryEvent$QueryResponse;
type GS4QueryEvent$QueryResponse$Builder = typeof classes.GS4QueryEvent$QueryResponse$Builder;
type GS4QueryEvent$QueryResponse$PluginInformation = typeof classes.GS4QueryEvent$QueryResponse$PluginInformation;
type GS4QueryEvent$QueryType = typeof classes.GS4QueryEvent$QueryType;
type Guardian = typeof classes.Guardian;
type HandlerList = typeof classes.HandlerList;
type Hanging = typeof classes.Hanging;
type HangingBreakByEntityEvent = typeof classes.HangingBreakByEntityEvent;
type HangingBreakEvent = typeof classes.HangingBreakEvent;
type HangingBreakEvent$RemoveCause = typeof classes.HangingBreakEvent$RemoveCause;
type HangingEvent = typeof classes.HangingEvent;
type HangingPlaceEvent = typeof classes.HangingPlaceEvent;
type HeightMap = typeof classes.HeightMap;
type HeightmapType = typeof classes.HeightmapType;
type HelpCommand = typeof classes.HelpCommand;
type HelpMap = typeof classes.HelpMap;
type HelpTopic = typeof classes.HelpTopic;
type HelpTopicComparator = typeof classes.HelpTopicComparator;
type HelpTopicComparator$TopicNameComparator = typeof classes.HelpTopicComparator$TopicNameComparator;
type HelpTopicFactory = typeof classes.HelpTopicFactory;
type Hoglin = typeof classes.Hoglin;
type Hopper = typeof classes.Hopper;
type Hopper = typeof classes.Hopper;
type Hopper = typeof classes.Hopper;
type HopperMinecart = typeof classes.HopperMinecart;
type Horse = typeof classes.Horse;
type Horse$Color = typeof classes.Horse$Color;
type Horse$Style = typeof classes.Horse$Style;
type Horse$Variant = typeof classes.Horse$Variant;
type HorseInventory = typeof classes.HorseInventory;
type HorseJumpEvent = typeof classes.HorseJumpEvent;
type HumanEntity = typeof classes.HumanEntity;
type Husk = typeof classes.Husk;
type Illager = typeof classes.Illager;
type IllegalPacketEvent = typeof classes.IllegalPacketEvent;
type IllegalPluginAccessException = typeof classes.IllegalPluginAccessException;
type Illusioner = typeof classes.Illusioner;
type InactivityConversationCanceller = typeof classes.InactivityConversationCanceller;
type IndexHelpTopic = typeof classes.IndexHelpTopic;
type Instrument = typeof classes.Instrument;
type InvalidConfigurationException = typeof classes.InvalidConfigurationException;
type InvalidDescriptionException = typeof classes.InvalidDescriptionException;
type InvalidPluginException = typeof classes.InvalidPluginException;
type Inventory = typeof classes.Inventory;
type InventoryAction = typeof classes.InventoryAction;
type InventoryClickEvent = typeof classes.InventoryClickEvent;
type InventoryCloseEvent = typeof classes.InventoryCloseEvent;
type InventoryCloseEvent$Reason = typeof classes.InventoryCloseEvent$Reason;
type InventoryCreativeEvent = typeof classes.InventoryCreativeEvent;
type InventoryDragEvent = typeof classes.InventoryDragEvent;
type InventoryEvent = typeof classes.InventoryEvent;
type InventoryHolder = typeof classes.InventoryHolder;
type InventoryInteractEvent = typeof classes.InventoryInteractEvent;
type InventoryMoveItemEvent = typeof classes.InventoryMoveItemEvent;
type InventoryOpenEvent = typeof classes.InventoryOpenEvent;
type InventoryPickupItemEvent = typeof classes.InventoryPickupItemEvent;
type InventoryType = typeof classes.InventoryType;
type InventoryType$SlotType = typeof classes.InventoryType$SlotType;
type InventoryView = typeof classes.InventoryView;
type InventoryView$Property = typeof classes.InventoryView$Property;
type IronGolem = typeof classes.IronGolem;
type Item = typeof classes.Item;
type ItemDespawnEvent = typeof classes.ItemDespawnEvent;
type ItemFactory = typeof classes.ItemFactory;
type ItemFlag = typeof classes.ItemFlag;
type ItemFrame = typeof classes.ItemFrame;
type ItemMergeEvent = typeof classes.ItemMergeEvent;
type ItemMeta = typeof classes.ItemMeta;
type ItemSpawnEvent = typeof classes.ItemSpawnEvent;
type ItemStack = typeof classes.ItemStack;
type ItemStackRecipeChoice = typeof classes.ItemStackRecipeChoice;
type ItemTagAdapterContext = typeof classes.ItemTagAdapterContext;
type ItemTagType = typeof classes.ItemTagType;
type ItemTagType$PrimitiveTagType = typeof classes.ItemTagType$PrimitiveTagType;
type JavaPlugin = typeof classes.JavaPlugin;
type JavaPluginLoader = typeof classes.JavaPluginLoader;
type Jigsaw = typeof classes.Jigsaw;
type Jigsaw = typeof classes.Jigsaw;
type Jigsaw$Orientation = typeof classes.Jigsaw$Orientation;
type JSONUtil = typeof classes.JSONUtil;
type JSONUtil$JSONPair = typeof classes.JSONUtil$JSONPair;
type Jukebox = typeof classes.Jukebox;
type Jukebox = typeof classes.Jukebox;
type Keyed = typeof classes.Keyed;
type KeyedBossBar = typeof classes.KeyedBossBar;
type KnowledgeBookMeta = typeof classes.KnowledgeBookMeta;
type Ladder = typeof classes.Ladder;
type Ladder = typeof classes.Ladder;
type Lantern = typeof classes.Lantern;
type LargeFireball = typeof classes.LargeFireball;
type LazyMetadataValue = typeof classes.LazyMetadataValue;
type LazyMetadataValue$CacheStrategy = typeof classes.LazyMetadataValue$CacheStrategy;
type LeashHitch = typeof classes.LeashHitch;
type LeatherArmorMeta = typeof classes.LeatherArmorMeta;
type Leaves = typeof classes.Leaves;
type Leaves = typeof classes.Leaves;
type LeavesDecayEvent = typeof classes.LeavesDecayEvent;
type Lectern = typeof classes.Lectern;
type Lectern = typeof classes.Lectern;
type LecternInventory = typeof classes.LecternInventory;
type Levelled = typeof classes.Levelled;
type Lever = typeof classes.Lever;
type Lidded = typeof classes.Lidded;
type Lightable = typeof classes.Lightable;
type LightningStrike = typeof classes.LightningStrike;
type LightningStrike$Spigot = typeof classes.LightningStrike$Spigot;
type LightningStrikeEvent = typeof classes.LightningStrikeEvent;
type LightningStrikeEvent$Cause = typeof classes.LightningStrikeEvent$Cause;
type LingeringPotion = typeof classes.LingeringPotion;
type LingeringPotionSplashEvent = typeof classes.LingeringPotionSplashEvent;
type Listener = typeof classes.Listener;
type LivingEntity = typeof classes.LivingEntity;
type Llama = typeof classes.Llama;
type Llama$Color = typeof classes.Llama$Color;
type LlamaInventory = typeof classes.LlamaInventory;
type LlamaSpit = typeof classes.LlamaSpit;
type LoadingIntMap = typeof classes.LoadingIntMap;
type LoadingIntMap$Feeder = typeof classes.LoadingIntMap$Feeder;
type LoadingMap = typeof classes.LoadingMap;
type LoadingMap$Feeder = typeof classes.LoadingMap$Feeder;
type Location = typeof classes.Location;
type Lockable = typeof classes.Lockable;
type LongGrass = typeof classes.LongGrass;
type LookupProfileEvent = typeof classes.LookupProfileEvent;
type LoomInventory = typeof classes.LoomInventory;
type Lootable = typeof classes.Lootable;
type LootableBlockInventory = typeof classes.LootableBlockInventory;
type LootableEntityInventory = typeof classes.LootableEntityInventory;
type LootableInventory = typeof classes.LootableInventory;
type LootableInventoryReplenishEvent = typeof classes.LootableInventoryReplenishEvent;
type LootContext = typeof classes.LootContext;
type LootContext$Builder = typeof classes.LootContext$Builder;
type LootGenerateEvent = typeof classes.LootGenerateEvent;
type LootTable = typeof classes.LootTable;
type LootTables = typeof classes.LootTables;
type MagmaCube = typeof classes.MagmaCube;
type MainHand = typeof classes.MainHand;
type ManuallyAbandonedConversationCanceller = typeof classes.ManuallyAbandonedConversationCanceller;
type MapCanvas = typeof classes.MapCanvas;
type MapCursor = typeof classes.MapCursor;
type MapCursor$Type = typeof classes.MapCursor$Type;
type MapCursorCollection = typeof classes.MapCursorCollection;
type MapFont = typeof classes.MapFont;
type MapFont$CharacterSprite = typeof classes.MapFont$CharacterSprite;
type MapInitializeEvent = typeof classes.MapInitializeEvent;
type MapMeta = typeof classes.MapMeta;
type MapPalette = typeof classes.MapPalette;
type MapRenderer = typeof classes.MapRenderer;
type MapView = typeof classes.MapView;
type MapView$Scale = typeof classes.MapView$Scale;
type Material = typeof classes.Material;
type MaterialData = typeof classes.MaterialData;
type MaterialSetTag = typeof classes.MaterialSetTag;
type MaterialTags = typeof classes.MaterialTags;
type MemoryConfiguration = typeof classes.MemoryConfiguration;
type MemoryConfigurationOptions = typeof classes.MemoryConfigurationOptions;
type MemoryKey = typeof classes.MemoryKey;
type MemorySection = typeof classes.MemorySection;
type Merchant = typeof classes.Merchant;
type MerchantInventory = typeof classes.MerchantInventory;
type MerchantRecipe = typeof classes.MerchantRecipe;
type MessageCommandSender = typeof classes.MessageCommandSender;
type MessagePrompt = typeof classes.MessagePrompt;
type MessageTooLargeException = typeof classes.MessageTooLargeException;
type Messenger = typeof classes.Messenger;
type Metadatable = typeof classes.Metadatable;
type MetadataConversionException = typeof classes.MetadataConversionException;
type MetadataEvaluationException = typeof classes.MetadataEvaluationException;
type MetadataStore = typeof classes.MetadataStore;
type MetadataStoreBase = typeof classes.MetadataStoreBase;
type MetadataValue = typeof classes.MetadataValue;
type MetadataValueAdapter = typeof classes.MetadataValueAdapter;
type MethodHandleEventExecutor = typeof classes.MethodHandleEventExecutor;
type Minecart = typeof classes.Minecart;
type MinecraftFont = typeof classes.MinecraftFont;
type Mirror = typeof classes.Mirror;
type Mob = typeof classes.Mob;
type MobGoals = typeof classes.MobGoals;
type MoistureChangeEvent = typeof classes.MoistureChangeEvent;
type Monster = typeof classes.Monster;
type MonsterEggs = typeof classes.MonsterEggs;
type MRUMapCache = typeof classes.MRUMapCache;
type Mule = typeof classes.Mule;
type MultipleCommandAlias = typeof classes.MultipleCommandAlias;
type MultipleFacing = typeof classes.MultipleFacing;
type Mushroom = typeof classes.Mushroom;
type MushroomBlockTexture = typeof classes.MushroomBlockTexture;
type MushroomCow = typeof classes.MushroomCow;
type MushroomCow$Variant = typeof classes.MushroomCow$Variant;
type Nameable = typeof classes.Nameable;
type Namespaced = typeof classes.Namespaced;
type NamespacedKey = typeof classes.NamespacedKey;
type NamespacedTag = typeof classes.NamespacedTag;
type NameTagVisibility = typeof classes.NameTagVisibility;
type NetherWarts = typeof classes.NetherWarts;
type NetherWartsState = typeof classes.NetherWartsState;
type NetworkClient = typeof classes.NetworkClient;
type NoiseGenerator = typeof classes.NoiseGenerator;
type Note = typeof classes.Note;
type Note$Tone = typeof classes.Note$Tone;
type NoteBlock = typeof classes.NoteBlock;
type NotePlayEvent = typeof classes.NotePlayEvent;
type NPC = typeof classes.NPC;
type NullConversationPrefix = typeof classes.NullConversationPrefix;
type NullTimingHandler = typeof classes.NullTimingHandler;
type NumberConversions = typeof classes.NumberConversions;
type NumericPrompt = typeof classes.NumericPrompt;
type Objective = typeof classes.Objective;
type Observer = typeof classes.Observer;
type Observer = typeof classes.Observer;
type Ocelot = typeof classes.Ocelot;
type Ocelot$Type = typeof classes.Ocelot$Type;
type OctaveGenerator = typeof classes.OctaveGenerator;
type OfflinePlayer = typeof classes.OfflinePlayer;
type Openable = typeof classes.Openable;
type Openable = typeof classes.Openable;
type Orientable = typeof classes.Orientable;
type Painting = typeof classes.Painting;
type Panda = typeof classes.Panda;
type Panda$Gene = typeof classes.Panda$Gene;
type PaperPluginLogger = typeof classes.PaperPluginLogger;
type PaperServerListPingEvent = typeof classes.PaperServerListPingEvent;
type Parrot = typeof classes.Parrot;
type Parrot$Variant = typeof classes.Parrot$Variant;
type Particle = typeof classes.Particle;
type Particle$DustOptions = typeof classes.Particle$DustOptions;
type ParticleBuilder = typeof classes.ParticleBuilder;
type Pathfinder = typeof classes.Pathfinder;
type Pathfinder$PathResult = typeof classes.Pathfinder$PathResult;
type Pattern = typeof classes.Pattern;
type PatternType = typeof classes.PatternType;
type PerlinNoiseGenerator = typeof classes.PerlinNoiseGenerator;
type PerlinOctaveGenerator = typeof classes.PerlinOctaveGenerator;
type Permissible = typeof classes.Permissible;
type PermissibleBase = typeof classes.PermissibleBase;
type Permission = typeof classes.Permission;
type PermissionAttachment = typeof classes.PermissionAttachment;
type PermissionAttachmentInfo = typeof classes.PermissionAttachmentInfo;
type PermissionDefault = typeof classes.PermissionDefault;
type PermissionRemovedExecutor = typeof classes.PermissionRemovedExecutor;
type PersistentDataAdapterContext = typeof classes.PersistentDataAdapterContext;
type PersistentDataContainer = typeof classes.PersistentDataContainer;
type PersistentDataHolder = typeof classes.PersistentDataHolder;
type PersistentDataType = typeof classes.PersistentDataType;
type PersistentDataType$PrimitivePersistentDataType = typeof classes.PersistentDataType$PrimitivePersistentDataType;
type Phantom = typeof classes.Phantom;
type PhantomPreSpawnEvent = typeof classes.PhantomPreSpawnEvent;
type Pig = typeof classes.Pig;
type Piglin = typeof classes.Piglin;
type PigZapEvent = typeof classes.PigZapEvent;
type PigZombie = typeof classes.PigZombie;
type PigZombieAngerEvent = typeof classes.PigZombieAngerEvent;
type Pillager = typeof classes.Pillager;
type Piston = typeof classes.Piston;
type PistonBaseMaterial = typeof classes.PistonBaseMaterial;
type PistonExtensionMaterial = typeof classes.PistonExtensionMaterial;
type PistonHead = typeof classes.PistonHead;
type PistonMoveReaction = typeof classes.PistonMoveReaction;
type Player = typeof classes.Player;
type Player$Spigot = typeof classes.Player$Spigot;
type PlayerAdvancementCriterionGrantEvent = typeof classes.PlayerAdvancementCriterionGrantEvent;
type PlayerAdvancementDoneEvent = typeof classes.PlayerAdvancementDoneEvent;
type PlayerAnimationEvent = typeof classes.PlayerAnimationEvent;
type PlayerAnimationType = typeof classes.PlayerAnimationType;
type PlayerArmorChangeEvent = typeof classes.PlayerArmorChangeEvent;
type PlayerArmorChangeEvent$SlotType = typeof classes.PlayerArmorChangeEvent$SlotType;
type PlayerArmorStandManipulateEvent = typeof classes.PlayerArmorStandManipulateEvent;
type PlayerAttackEntityCooldownResetEvent = typeof classes.PlayerAttackEntityCooldownResetEvent;
type PlayerAttemptPickupItemEvent = typeof classes.PlayerAttemptPickupItemEvent;
type PlayerBedEnterEvent = typeof classes.PlayerBedEnterEvent;
type PlayerBedEnterEvent$BedEnterResult = typeof classes.PlayerBedEnterEvent$BedEnterResult;
type PlayerBedLeaveEvent = typeof classes.PlayerBedLeaveEvent;
type PlayerBucketEmptyEvent = typeof classes.PlayerBucketEmptyEvent;
type PlayerBucketEvent = typeof classes.PlayerBucketEvent;
type PlayerBucketFillEvent = typeof classes.PlayerBucketFillEvent;
type PlayerChangedMainHandEvent = typeof classes.PlayerChangedMainHandEvent;
type PlayerChangedWorldEvent = typeof classes.PlayerChangedWorldEvent;
type PlayerChannelEvent = typeof classes.PlayerChannelEvent;
type PlayerChatEvent = typeof classes.PlayerChatEvent;
type PlayerChatTabCompleteEvent = typeof classes.PlayerChatTabCompleteEvent;
type PlayerClientOptionsChangeEvent = typeof classes.PlayerClientOptionsChangeEvent;
type PlayerCommandPreprocessEvent = typeof classes.PlayerCommandPreprocessEvent;
type PlayerCommandSendEvent = typeof classes.PlayerCommandSendEvent;
type PlayerConnectionCloseEvent = typeof classes.PlayerConnectionCloseEvent;
type PlayerDeathEvent = typeof classes.PlayerDeathEvent;
type PlayerDropItemEvent = typeof classes.PlayerDropItemEvent;
type PlayerEditBookEvent = typeof classes.PlayerEditBookEvent;
type PlayerEggThrowEvent = typeof classes.PlayerEggThrowEvent;
type PlayerElytraBoostEvent = typeof classes.PlayerElytraBoostEvent;
type PlayerEvent = typeof classes.PlayerEvent;
type PlayerExpChangeEvent = typeof classes.PlayerExpChangeEvent;
type PlayerFishEvent = typeof classes.PlayerFishEvent;
type PlayerFishEvent$State = typeof classes.PlayerFishEvent$State;
type PlayerGameModeChangeEvent = typeof classes.PlayerGameModeChangeEvent;
type PlayerHandshakeEvent = typeof classes.PlayerHandshakeEvent;
type PlayerHarvestBlockEvent = typeof classes.PlayerHarvestBlockEvent;
type PlayerInitialSpawnEvent = typeof classes.PlayerInitialSpawnEvent;
type PlayerInteractAtEntityEvent = typeof classes.PlayerInteractAtEntityEvent;
type PlayerInteractEntityEvent = typeof classes.PlayerInteractEntityEvent;
type PlayerInteractEvent = typeof classes.PlayerInteractEvent;
type PlayerInventory = typeof classes.PlayerInventory;
type PlayerItemBreakEvent = typeof classes.PlayerItemBreakEvent;
type PlayerItemConsumeEvent = typeof classes.PlayerItemConsumeEvent;
type PlayerItemDamageEvent = typeof classes.PlayerItemDamageEvent;
type PlayerItemHeldEvent = typeof classes.PlayerItemHeldEvent;
type PlayerItemMendEvent = typeof classes.PlayerItemMendEvent;
type PlayerJoinEvent = typeof classes.PlayerJoinEvent;
type PlayerJumpEvent = typeof classes.PlayerJumpEvent;
type PlayerKickEvent = typeof classes.PlayerKickEvent;
type PlayerLaunchProjectileEvent = typeof classes.PlayerLaunchProjectileEvent;
type PlayerLeashEntityEvent = typeof classes.PlayerLeashEntityEvent;
type PlayerLevelChangeEvent = typeof classes.PlayerLevelChangeEvent;
type PlayerLocaleChangeEvent = typeof classes.PlayerLocaleChangeEvent;
type PlayerLocaleChangeEvent = typeof classes.PlayerLocaleChangeEvent;
type PlayerLoginEvent = typeof classes.PlayerLoginEvent;
type PlayerLoginEvent$Result = typeof classes.PlayerLoginEvent$Result;
type PlayerMoveEvent = typeof classes.PlayerMoveEvent;
type PlayerNamePrompt = typeof classes.PlayerNamePrompt;
type PlayerNaturallySpawnCreaturesEvent = typeof classes.PlayerNaturallySpawnCreaturesEvent;
type PlayerPickupArrowEvent = typeof classes.PlayerPickupArrowEvent;
type PlayerPickupExperienceEvent = typeof classes.PlayerPickupExperienceEvent;
type PlayerPickupItemEvent = typeof classes.PlayerPickupItemEvent;
type PlayerPortalEvent = typeof classes.PlayerPortalEvent;
type PlayerPostRespawnEvent = typeof classes.PlayerPostRespawnEvent;
type PlayerPreLoginEvent = typeof classes.PlayerPreLoginEvent;
type PlayerPreLoginEvent$Result = typeof classes.PlayerPreLoginEvent$Result;
type PlayerProfile = typeof classes.PlayerProfile;
type PlayerQuitEvent = typeof classes.PlayerQuitEvent;
type PlayerReadyArrowEvent = typeof classes.PlayerReadyArrowEvent;
type PlayerRecipeBookClickEvent = typeof classes.PlayerRecipeBookClickEvent;
type PlayerRecipeDiscoverEvent = typeof classes.PlayerRecipeDiscoverEvent;
type PlayerRegisterChannelEvent = typeof classes.PlayerRegisterChannelEvent;
type PlayerResourcePackStatusEvent = typeof classes.PlayerResourcePackStatusEvent;
type PlayerResourcePackStatusEvent$Status = typeof classes.PlayerResourcePackStatusEvent$Status;
type PlayerRespawnEvent = typeof classes.PlayerRespawnEvent;
type PlayerRiptideEvent = typeof classes.PlayerRiptideEvent;
type PlayerShearEntityEvent = typeof classes.PlayerShearEntityEvent;
type PlayerSpawnLocationEvent = typeof classes.PlayerSpawnLocationEvent;
type PlayerStartSpectatingEntityEvent = typeof classes.PlayerStartSpectatingEntityEvent;
type PlayerStatisticIncrementEvent = typeof classes.PlayerStatisticIncrementEvent;
type PlayerStopSpectatingEntityEvent = typeof classes.PlayerStopSpectatingEntityEvent;
type PlayerSwapHandItemsEvent = typeof classes.PlayerSwapHandItemsEvent;
type PlayerTakeLecternBookEvent = typeof classes.PlayerTakeLecternBookEvent;
type PlayerTeleportEndGatewayEvent = typeof classes.PlayerTeleportEndGatewayEvent;
type PlayerTeleportEvent = typeof classes.PlayerTeleportEvent;
type PlayerTeleportEvent$TeleportCause = typeof classes.PlayerTeleportEvent$TeleportCause;
type PlayerToggleFlightEvent = typeof classes.PlayerToggleFlightEvent;
type PlayerToggleSneakEvent = typeof classes.PlayerToggleSneakEvent;
type PlayerToggleSprintEvent = typeof classes.PlayerToggleSprintEvent;
type PlayerUnleashEntityEvent = typeof classes.PlayerUnleashEntityEvent;
type PlayerUnregisterChannelEvent = typeof classes.PlayerUnregisterChannelEvent;
type PlayerUseUnknownEntityEvent = typeof classes.PlayerUseUnknownEntityEvent;
type PlayerVelocityEvent = typeof classes.PlayerVelocityEvent;
type Plugin = typeof classes.Plugin;
type PluginAwareness = typeof classes.PluginAwareness;
type PluginAwareness$Flags = typeof classes.PluginAwareness$Flags;
type PluginBase = typeof classes.PluginBase;
type PluginChannelDirection = typeof classes.PluginChannelDirection;
type PluginClassLoader = typeof classes.PluginClassLoader;
type PluginCommand = typeof classes.PluginCommand;
type PluginCommandYamlParser = typeof classes.PluginCommandYamlParser;
type PluginDescriptionFile = typeof classes.PluginDescriptionFile;
type PluginDisableEvent = typeof classes.PluginDisableEvent;
type PluginEnableEvent = typeof classes.PluginEnableEvent;
type PluginEvent = typeof classes.PluginEvent;
type PluginIdentifiableCommand = typeof classes.PluginIdentifiableCommand;
type PluginLoader = typeof classes.PluginLoader;
type PluginLoadOrder = typeof classes.PluginLoadOrder;
type PluginLogger = typeof classes.PluginLogger;
type PluginManager = typeof classes.PluginManager;
type PluginMessageListener = typeof classes.PluginMessageListener;
type PluginMessageListenerRegistration = typeof classes.PluginMessageListenerRegistration;
type PluginMessageRecipient = typeof classes.PluginMessageRecipient;
type PluginNameConversationPrefix = typeof classes.PluginNameConversationPrefix;
type PluginsCommand = typeof classes.PluginsCommand;
type PolarBear = typeof classes.PolarBear;
type PortalCreateEvent = typeof classes.PortalCreateEvent;
type PortalCreateEvent$CreateReason = typeof classes.PortalCreateEvent$CreateReason;
type PortalType = typeof classes.PortalType;
type Pose = typeof classes.Pose;
type Potion = typeof classes.Potion;
type PotionBrewer = typeof classes.PotionBrewer;
type PotionData = typeof classes.PotionData;
type PotionEffect = typeof classes.PotionEffect;
type PotionEffectType = typeof classes.PotionEffectType;
type PotionEffectTypeWrapper = typeof classes.PotionEffectTypeWrapper;
type PotionMeta = typeof classes.PotionMeta;
type PotionSplashEvent = typeof classes.PotionSplashEvent;
type PotionType = typeof classes.PotionType;
type Powerable = typeof classes.Powerable;
type PoweredMinecart = typeof classes.PoweredMinecart;
type PoweredRail = typeof classes.PoweredRail;
type PreCreatureSpawnEvent = typeof classes.PreCreatureSpawnEvent;
type PreFillProfileEvent = typeof classes.PreFillProfileEvent;
type PreLookupProfileEvent = typeof classes.PreLookupProfileEvent;
type PrepareAnvilEvent = typeof classes.PrepareAnvilEvent;
type PrepareGrindstoneEvent = typeof classes.PrepareGrindstoneEvent;
type PrepareItemCraftEvent = typeof classes.PrepareItemCraftEvent;
type PrepareItemEnchantEvent = typeof classes.PrepareItemEnchantEvent;
type PrepareResultEvent = typeof classes.PrepareResultEvent;
type PrepareSmithingEvent = typeof classes.PrepareSmithingEvent;
type PreSpawnerSpawnEvent = typeof classes.PreSpawnerSpawnEvent;
type PressurePlate = typeof classes.PressurePlate;
type PressureSensor = typeof classes.PressureSensor;
type ProfileProperty = typeof classes.ProfileProperty;
type ProfileWhitelistVerifyEvent = typeof classes.ProfileWhitelistVerifyEvent;
type Projectile = typeof classes.Projectile;
type ProjectileCollideEvent = typeof classes.ProjectileCollideEvent;
type ProjectileHitEvent = typeof classes.ProjectileHitEvent;
type ProjectileLaunchEvent = typeof classes.ProjectileLaunchEvent;
type ProjectileSource = typeof classes.ProjectileSource;
type Prompt = typeof classes.Prompt;
type ProxiedCommandSender = typeof classes.ProxiedCommandSender;
type PufferFish = typeof classes.PufferFish;
type Pumpkin = typeof classes.Pumpkin;
type Rabbit = typeof classes.Rabbit;
type Rabbit$Type = typeof classes.Rabbit$Type;
type Raid = typeof classes.Raid;
type Raid$RaidStatus = typeof classes.Raid$RaidStatus;
type Raider = typeof classes.Raider;
type RaidEvent = typeof classes.RaidEvent;
type RaidFinishEvent = typeof classes.RaidFinishEvent;
type RaidSpawnWaveEvent = typeof classes.RaidSpawnWaveEvent;
type RaidStopEvent = typeof classes.RaidStopEvent;
type RaidStopEvent$Reason = typeof classes.RaidStopEvent$Reason;
type RaidTriggerEvent = typeof classes.RaidTriggerEvent;
type Rail = typeof classes.Rail;
type Rail$Shape = typeof classes.Rail$Shape;
type Rails = typeof classes.Rails;
type RangedEntity = typeof classes.RangedEntity;
type Ravager = typeof classes.Ravager;
type RayTraceResult = typeof classes.RayTraceResult;
type Recipe = typeof classes.Recipe;
type RecipeChoice = typeof classes.RecipeChoice;
type RecipeChoice$ExactChoice = typeof classes.RecipeChoice$ExactChoice;
type RecipeChoice$MaterialChoice = typeof classes.RecipeChoice$MaterialChoice;
type Redstone = typeof classes.Redstone;
type RedstoneRail = typeof classes.RedstoneRail;
type RedstoneTorch = typeof classes.RedstoneTorch;
type RedstoneWallTorch = typeof classes.RedstoneWallTorch;
type RedstoneWire = typeof classes.RedstoneWire;
type RedstoneWire = typeof classes.RedstoneWire;
type RedstoneWire$Connection = typeof classes.RedstoneWire$Connection;
type RegexPrompt = typeof classes.RegexPrompt;
type RegisteredListener = typeof classes.RegisteredListener;
type RegisteredServiceProvider = typeof classes.RegisteredServiceProvider;
type Registry = typeof classes.Registry;
type Registry$SimpleRegistry = typeof classes.Registry$SimpleRegistry;
type ReloadCommand = typeof classes.ReloadCommand;
type RemoteConsoleCommandSender = typeof classes.RemoteConsoleCommandSender;
type RemoteServerCommandEvent = typeof classes.RemoteServerCommandEvent;
type RenderType = typeof classes.RenderType;
type Repairable = typeof classes.Repairable;
type Repeater = typeof classes.Repeater;
type Reputation = typeof classes.Reputation;
type ReputationType = typeof classes.ReputationType;
type ReservedChannelException = typeof classes.ReservedChannelException;
type RespawnAnchor = typeof classes.RespawnAnchor;
type RideableMinecart = typeof classes.RideableMinecart;
type Rotatable = typeof classes.Rotatable;
type Rotation = typeof classes.Rotation;
type SaddledHorseInventory = typeof classes.SaddledHorseInventory;
type SafeClassDefiner = typeof classes.SafeClassDefiner;
type Salmon = typeof classes.Salmon;
type Sandstone = typeof classes.Sandstone;
type SandstoneType = typeof classes.SandstoneType;
type Sapling = typeof classes.Sapling;
type Sapling = typeof classes.Sapling;
type Scaffolding = typeof classes.Scaffolding;
type Score = typeof classes.Score;
type Scoreboard = typeof classes.Scoreboard;
type ScoreboardManager = typeof classes.ScoreboardManager;
type SeaPickle = typeof classes.SeaPickle;
type SerializableAs = typeof classes.SerializableAs;
type Server = typeof classes.Server;
type Server$Spigot = typeof classes.Server$Spigot;
type ServerCommandEvent = typeof classes.ServerCommandEvent;
type ServerCommandException = typeof classes.ServerCommandException;
type ServerEvent = typeof classes.ServerEvent;
type ServerEventException = typeof classes.ServerEventException;
type ServerException = typeof classes.ServerException;
type ServerExceptionEvent = typeof classes.ServerExceptionEvent;
type ServerInternalException = typeof classes.ServerInternalException;
type ServerListPingEvent = typeof classes.ServerListPingEvent;
type ServerLoadEvent = typeof classes.ServerLoadEvent;
type ServerLoadEvent$LoadType = typeof classes.ServerLoadEvent$LoadType;
type ServerOperator = typeof classes.ServerOperator;
type ServerPluginEnableDisableException = typeof classes.ServerPluginEnableDisableException;
type ServerPluginException = typeof classes.ServerPluginException;
type ServerPluginMessageException = typeof classes.ServerPluginMessageException;
type ServerSchedulerException = typeof classes.ServerSchedulerException;
type ServerTabCompleteException = typeof classes.ServerTabCompleteException;
type ServerTickEndEvent = typeof classes.ServerTickEndEvent;
type ServerTickStartEvent = typeof classes.ServerTickStartEvent;
type ServiceEvent = typeof classes.ServiceEvent;
type ServicePriority = typeof classes.ServicePriority;
type ServiceRegisterEvent = typeof classes.ServiceRegisterEvent;
type ServicesManager = typeof classes.ServicesManager;
type ServiceUnregisterEvent = typeof classes.ServiceUnregisterEvent;
type ShapedRecipe = typeof classes.ShapedRecipe;
type ShapelessRecipe = typeof classes.ShapelessRecipe;
type Sheep = typeof classes.Sheep;
type SheepDyeWoolEvent = typeof classes.SheepDyeWoolEvent;
type SheepRegrowWoolEvent = typeof classes.SheepRegrowWoolEvent;
type Shulker = typeof classes.Shulker;
type ShulkerBox = typeof classes.ShulkerBox;
type ShulkerBullet = typeof classes.ShulkerBullet;
type Sign = typeof classes.Sign;
type Sign = typeof classes.Sign;
type Sign = typeof classes.Sign;
type SignChangeEvent = typeof classes.SignChangeEvent;
type Silverfish = typeof classes.Silverfish;
type SimpleAttachableMaterialData = typeof classes.SimpleAttachableMaterialData;
type SimpleCommandMap = typeof classes.SimpleCommandMap;
type SimplePluginManager = typeof classes.SimplePluginManager;
type SimpleServicesManager = typeof classes.SimpleServicesManager;
type SimplexNoiseGenerator = typeof classes.SimplexNoiseGenerator;
type SimplexOctaveGenerator = typeof classes.SimplexOctaveGenerator;
type Sittable = typeof classes.Sittable;
type SizedFireball = typeof classes.SizedFireball;
type Skeleton = typeof classes.Skeleton;
type Skeleton$SkeletonType = typeof classes.Skeleton$SkeletonType;
type SkeletonHorse = typeof classes.SkeletonHorse;
type SkeletonHorseTrapEvent = typeof classes.SkeletonHorseTrapEvent;
type SkinParts = typeof classes.SkinParts;
type Skull = typeof classes.Skull;
type Skull = typeof classes.Skull;
type SkullMeta = typeof classes.SkullMeta;
type SkullType = typeof classes.SkullType;
type Slab = typeof classes.Slab;
type Slab$Type = typeof classes.Slab$Type;
type Slime = typeof classes.Slime;
type SlimeChangeDirectionEvent = typeof classes.SlimeChangeDirectionEvent;
type SlimePathfindEvent = typeof classes.SlimePathfindEvent;
type SlimeSplitEvent = typeof classes.SlimeSplitEvent;
type SlimeSwimEvent = typeof classes.SlimeSwimEvent;
type SlimeTargetLivingEntityEvent = typeof classes.SlimeTargetLivingEntityEvent;
type SlimeWanderEvent = typeof classes.SlimeWanderEvent;
type SmallFireball = typeof classes.SmallFireball;
type SmithingInventory = typeof classes.SmithingInventory;
type SmithingRecipe = typeof classes.SmithingRecipe;
type Smoker = typeof classes.Smoker;
type SmokingRecipe = typeof classes.SmokingRecipe;
type SmoothBrick = typeof classes.SmoothBrick;
type SneakyThrow = typeof classes.SneakyThrow;
type Snow = typeof classes.Snow;
type Snowable = typeof classes.Snowable;
type Snowball = typeof classes.Snowball;
type Snowman = typeof classes.Snowman;
type Sound = typeof classes.Sound;
type SoundCategory = typeof classes.SoundCategory;
type SpawnChangeEvent = typeof classes.SpawnChangeEvent;
type SpawnEgg = typeof classes.SpawnEgg;
type SpawnEggMeta = typeof classes.SpawnEggMeta;
type SpawnerMinecart = typeof classes.SpawnerMinecart;
type SpawnerSpawnEvent = typeof classes.SpawnerSpawnEvent;
type SpectralArrow = typeof classes.SpectralArrow;
type Spellcaster = typeof classes.Spellcaster;
type Spellcaster$Spell = typeof classes.Spellcaster$Spell;
type Spider = typeof classes.Spider;
type SplashPotion = typeof classes.SplashPotion;
type SpongeAbsorbEvent = typeof classes.SpongeAbsorbEvent;
type Squid = typeof classes.Squid;
type Stairs = typeof classes.Stairs;
type Stairs = typeof classes.Stairs;
type Stairs$Shape = typeof classes.Stairs$Shape;
type StandardMessenger = typeof classes.StandardMessenger;
type StaticMethodHandleEventExecutor = typeof classes.StaticMethodHandleEventExecutor;
type Statistic = typeof classes.Statistic;
type Statistic$Type = typeof classes.Statistic$Type;
type StatusClient = typeof classes.StatusClient;
type Steerable = typeof classes.Steerable;
type Step = typeof classes.Step;
type StonecutterInventory = typeof classes.StonecutterInventory;
type StonecuttingRecipe = typeof classes.StonecuttingRecipe;
type StorageMinecart = typeof classes.StorageMinecart;
type Stray = typeof classes.Stray;
type Strider = typeof classes.Strider;
type StriderTemperatureChangeEvent = typeof classes.StriderTemperatureChangeEvent;
type StringPrompt = typeof classes.StringPrompt;
type StringUtil = typeof classes.StringUtil;
type Structure = typeof classes.Structure;
type StructureBlock = typeof classes.StructureBlock;
type StructureBlock$Mode = typeof classes.StructureBlock$Mode;
type StructureGrowEvent = typeof classes.StructureGrowEvent;
type StructureRotation = typeof classes.StructureRotation;
type StructureType = typeof classes.StructureType;
type SuspiciousStewMeta = typeof classes.SuspiciousStewMeta;
type Switch = typeof classes.Switch;
type Switch$Face = typeof classes.Switch$Face;
type TabCompleteEvent = typeof classes.TabCompleteEvent;
type TabCompleter = typeof classes.TabCompleter;
type TabExecutor = typeof classes.TabExecutor;
type Tag = typeof classes.Tag;
type Tameable = typeof classes.Tameable;
type TargetBlockInfo = typeof classes.TargetBlockInfo;
type TargetBlockInfo$FluidMode = typeof classes.TargetBlockInfo$FluidMode;
type TargetEntityInfo = typeof classes.TargetEntityInfo;
type Team = typeof classes.Team;
type Team$Option = typeof classes.Team$Option;
type Team$OptionStatus = typeof classes.Team$OptionStatus;
type TechnicalPiston = typeof classes.TechnicalPiston;
type TechnicalPiston$Type = typeof classes.TechnicalPiston$Type;
type TexturedMaterial = typeof classes.TexturedMaterial;
type ThrowableProjectile = typeof classes.ThrowableProjectile;
type ThrownEggHatchEvent = typeof classes.ThrownEggHatchEvent;
type ThrownExpBottle = typeof classes.ThrownExpBottle;
type ThrownPotion = typeof classes.ThrownPotion;
type ThunderChangeEvent = typeof classes.ThunderChangeEvent;
type TileState = typeof classes.TileState;
type TimedEventExecutor = typeof classes.TimedEventExecutor;
type TimedRegisteredListener = typeof classes.TimedRegisteredListener;
type TimeSkipEvent = typeof classes.TimeSkipEvent;
type TimeSkipEvent$SkipReason = typeof classes.TimeSkipEvent$SkipReason;
type Timing = typeof classes.Timing;
type TimingHistory = typeof classes.TimingHistory;
type Timings = typeof classes.Timings;
type TimingsCommand = typeof classes.TimingsCommand;
type TimingsManager = typeof classes.TimingsManager;
type TimingsReportListener = typeof classes.TimingsReportListener;
type TippedArrow = typeof classes.TippedArrow;
type Title = typeof classes.Title;
type Title$Builder = typeof classes.Title$Builder;
type TNT = typeof classes.TNT;
type TNTPrimed = typeof classes.TNTPrimed;
type TNTPrimeEvent = typeof classes.TNTPrimeEvent;
type TNTPrimeEvent$PrimeReason = typeof classes.TNTPrimeEvent$PrimeReason;
type Torch = typeof classes.Torch;
type TraderLlama = typeof classes.TraderLlama;
type TradeSelectEvent = typeof classes.TradeSelectEvent;
type TrapDoor = typeof classes.TrapDoor;
type TrapDoor = typeof classes.TrapDoor;
type Tree = typeof classes.Tree;
type TreeSpecies = typeof classes.TreeSpecies;
type TreeType = typeof classes.TreeType;
type Trident = typeof classes.Trident;
type Tripwire = typeof classes.Tripwire;
type Tripwire = typeof classes.Tripwire;
type TripwireHook = typeof classes.TripwireHook;
type TripwireHook = typeof classes.TripwireHook;
type TropicalFish = typeof classes.TropicalFish;
type TropicalFish$Pattern = typeof classes.TropicalFish$Pattern;
type TropicalFishBucketMeta = typeof classes.TropicalFishBucketMeta;
type Turtle = typeof classes.Turtle;
type TurtleEgg = typeof classes.TurtleEgg;
type TurtleGoHomeEvent = typeof classes.TurtleGoHomeEvent;
type TurtleLayEggEvent = typeof classes.TurtleLayEggEvent;
type TurtleStartDiggingEvent = typeof classes.TurtleStartDiggingEvent;
type UndefinedNullability = typeof classes.UndefinedNullability;
type UnknownCommandEvent = typeof classes.UnknownCommandEvent;
type UnknownDependencyException = typeof classes.UnknownDependencyException;
type UnsafeUtils = typeof classes.UnsafeUtils;
type UnsafeValues = typeof classes.UnsafeValues;
type UsageMode = typeof classes.UsageMode;
type Utility = typeof classes.Utility;
type ValidatingPrompt = typeof classes.ValidatingPrompt;
type VanillaGoal = typeof classes.VanillaGoal;
type Vector = typeof classes.Vector;
type Vehicle = typeof classes.Vehicle;
type VehicleBlockCollisionEvent = typeof classes.VehicleBlockCollisionEvent;
type VehicleCollisionEvent = typeof classes.VehicleCollisionEvent;
type VehicleCreateEvent = typeof classes.VehicleCreateEvent;
type VehicleDamageEvent = typeof classes.VehicleDamageEvent;
type VehicleDestroyEvent = typeof classes.VehicleDestroyEvent;
type VehicleEnterEvent = typeof classes.VehicleEnterEvent;
type VehicleEntityCollisionEvent = typeof classes.VehicleEntityCollisionEvent;
type VehicleEvent = typeof classes.VehicleEvent;
type VehicleExitEvent = typeof classes.VehicleExitEvent;
type VehicleMoveEvent = typeof classes.VehicleMoveEvent;
type VehicleUpdateEvent = typeof classes.VehicleUpdateEvent;
type VersionCommand = typeof classes.VersionCommand;
type VersionFetcher = typeof classes.VersionFetcher;
type VersionFetcher$DummyVersionFetcher = typeof classes.VersionFetcher$DummyVersionFetcher;
type Vex = typeof classes.Vex;
type Villager = typeof classes.Villager;
type Villager$Profession = typeof classes.Villager$Profession;
type Villager$Type = typeof classes.Villager$Type;
type VillagerAcquireTradeEvent = typeof classes.VillagerAcquireTradeEvent;
type VillagerCareerChangeEvent = typeof classes.VillagerCareerChangeEvent;
type VillagerCareerChangeEvent$ChangeReason = typeof classes.VillagerCareerChangeEvent$ChangeReason;
type VillagerReplenishTradeEvent = typeof classes.VillagerReplenishTradeEvent;
type Vindicator = typeof classes.Vindicator;
type Vine = typeof classes.Vine;
type Wall = typeof classes.Wall;
type Wall$Height = typeof classes.Wall$Height;
type WallSign = typeof classes.WallSign;
type WanderingTrader = typeof classes.WanderingTrader;
type Warning = typeof classes.Warning;
type Warning$WarningState = typeof classes.Warning$WarningState;
type Waterlogged = typeof classes.Waterlogged;
type WaterMob = typeof classes.WaterMob;
type WeatherChangeEvent = typeof classes.WeatherChangeEvent;
type WeatherEvent = typeof classes.WeatherEvent;
type WeatherType = typeof classes.WeatherType;
type WhitelistToggleEvent = typeof classes.WhitelistToggleEvent;
type Witch = typeof classes.Witch;
type WitchConsumePotionEvent = typeof classes.WitchConsumePotionEvent;
type WitchReadyPotionEvent = typeof classes.WitchReadyPotionEvent;
type WitchThrowPotionEvent = typeof classes.WitchThrowPotionEvent;
type Wither = typeof classes.Wither;
type WitherSkeleton = typeof classes.WitherSkeleton;
type WitherSkull = typeof classes.WitherSkull;
type Wolf = typeof classes.Wolf;
type Wood = typeof classes.Wood;
type WoodenStep = typeof classes.WoodenStep;
type Wool = typeof classes.Wool;
type World = typeof classes.World;
type World$ChunkLoadCallback = typeof classes.World$ChunkLoadCallback;
type World$Environment = typeof classes.World$Environment;
type World$Spigot = typeof classes.World$Spigot;
type WorldBorder = typeof classes.WorldBorder;
type WorldCreator = typeof classes.WorldCreator;
type WorldEvent = typeof classes.WorldEvent;
type WorldInitEvent = typeof classes.WorldInitEvent;
type WorldLoadEvent = typeof classes.WorldLoadEvent;
type WorldSaveEvent = typeof classes.WorldSaveEvent;
type WorldType = typeof classes.WorldType;
type WorldUnloadEvent = typeof classes.WorldUnloadEvent;
type YamlConfiguration = typeof classes.YamlConfiguration;
type YamlConfigurationOptions = typeof classes.YamlConfigurationOptions;
type YamlConstructor = typeof classes.YamlConstructor;
type YamlRepresenter = typeof classes.YamlRepresenter;
type Zoglin = typeof classes.Zoglin;
type Zombie = typeof classes.Zombie;
type ZombieHorse = typeof classes.ZombieHorse;
type ZombieVillager = typeof classes.ZombieVillager;

export class types {
   static type (name: 'org.bukkit.entity.AbstractArrow'): AbstractArrow;
   static type (name: 'org.bukkit.entity.AbstractArrow.PickupRule'): AbstractArrow$PickupRule;
   static type (name: 'org.bukkit.entity.AbstractArrow.PickupStatus'): AbstractArrow$PickupStatus;
   static type (name: 'org.bukkit.entity.AbstractHorse'): AbstractHorse;
   static type (name: 'org.bukkit.inventory.AbstractHorseInventory'): AbstractHorseInventory;
   static type (name: 'org.bukkit.entity.AbstractVillager'): AbstractVillager;
   static type (name: 'org.bukkit.event.block.Action'): Action;
   static type (name: 'org.bukkit.advancement.Advancement'): Advancement;
   static type (name: 'org.bukkit.advancement.AdvancementProgress'): AdvancementProgress;
   static type (name: 'org.bukkit.block.data.Ageable'): Ageable;
   static type (name: 'org.bukkit.entity.Ageable'): Ageable;
   static type (name: 'org.bukkit.entity.Ambient'): Ambient;
   static type (name: 'org.bukkit.block.data.AnaloguePowerable'): AnaloguePowerable;
   static type (name: 'org.bukkit.entity.Animals'): Animals;
   static type (name: 'org.bukkit.entity.AnimalTamer'): AnimalTamer;
   static type (name: 'com.destroystokyo.paper.event.block.AnvilDamagedEvent'): AnvilDamagedEvent;
   static type (
      name: 'com.destroystokyo.paper.event.block.AnvilDamagedEvent.DamageState'
   ): AnvilDamagedEvent$DamageState;
   static type (name: 'org.bukkit.inventory.AnvilInventory'): AnvilInventory;
   static type (name: 'org.bukkit.entity.AreaEffectCloud'): AreaEffectCloud;
   static type (name: 'org.bukkit.event.entity.AreaEffectCloudApplyEvent'): AreaEffectCloudApplyEvent;
   static type (name: 'org.bukkit.inventory.ArmoredHorseInventory'): ArmoredHorseInventory;
   static type (name: 'org.bukkit.entity.ArmorStand'): ArmorStand;
   static type (name: 'com.destroystokyo.paper.inventory.meta.ArmorStandMeta'): ArmorStandMeta;
   static type (name: 'org.bukkit.entity.Arrow'): Arrow;
   static type (name: 'org.bukkit.Art'): Art;
   static type (
      name: 'com.destroystokyo.paper.event.executor.asm.ASMEventExecutorGenerator'
   ): ASMEventExecutorGenerator;
   static type (name: 'org.bukkit.event.player.AsyncPlayerChatEvent'): AsyncPlayerChatEvent;
   static type (name: 'org.bukkit.event.player.AsyncPlayerPreLoginEvent'): AsyncPlayerPreLoginEvent;
   static type (name: 'org.bukkit.event.player.AsyncPlayerPreLoginEvent.Result'): AsyncPlayerPreLoginEvent$Result;
   static type (name: 'com.destroystokyo.paper.event.server.AsyncTabCompleteEvent'): AsyncTabCompleteEvent;
   static type (name: 'org.bukkit.block.data.Attachable'): Attachable;
   static type (name: 'org.bukkit.material.Attachable'): Attachable;
   static type (name: 'org.bukkit.attribute.Attributable'): Attributable;
   static type (name: 'org.bukkit.attribute.Attribute'): Attribute;
   static type (name: 'org.bukkit.attribute.AttributeInstance'): AttributeInstance;
   static type (name: 'org.bukkit.attribute.AttributeModifier'): AttributeModifier;
   static type (name: 'org.bukkit.attribute.AttributeModifier.Operation'): AttributeModifier$Operation;
   static type (name: 'org.bukkit.plugin.AuthorNagException'): AuthorNagException;
   static type (name: 'org.bukkit.Axis'): Axis;
   static type (name: 'org.bukkit.block.data.type.Bamboo'): Bamboo;
   static type (name: 'org.bukkit.block.data.type.Bamboo.Leaves'): Bamboo$Leaves;
   static type (name: 'org.bukkit.BanEntry'): BanEntry;
   static type (name: 'org.bukkit.BanList'): BanList;
   static type (name: 'org.bukkit.BanList.Type'): BanList$Type;
   static type (name: 'org.bukkit.block.Banner'): Banner;
   static type (name: 'org.bukkit.material.Banner'): Banner;
   static type (name: 'org.bukkit.inventory.meta.BannerMeta'): BannerMeta;
   static type (name: 'org.bukkit.boss.BarColor'): BarColor;
   static type (name: 'org.bukkit.boss.BarFlag'): BarFlag;
   static type (name: 'org.bukkit.block.Barrel'): Barrel;
   static type (name: 'org.bukkit.boss.BarStyle'): BarStyle;
   static type (name: 'org.bukkit.entity.Bat'): Bat;
   static type (name: 'org.bukkit.event.entity.BatToggleSleepEvent'): BatToggleSleepEvent;
   static type (name: 'org.bukkit.block.Beacon'): Beacon;
   static type (name: 'com.destroystokyo.paper.event.block.BeaconEffectEvent'): BeaconEffectEvent;
   static type (name: 'org.bukkit.inventory.BeaconInventory'): BeaconInventory;
   static type (name: 'org.bukkit.block.Bed'): Bed;
   static type (name: 'org.bukkit.block.data.type.Bed'): Bed;
   static type (name: 'org.bukkit.material.Bed'): Bed;
   static type (name: 'org.bukkit.block.data.type.Bed.Part'): Bed$Part;
   static type (name: 'org.bukkit.entity.Bee'): Bee;
   static type (name: 'org.bukkit.block.Beehive'): Beehive;
   static type (name: 'org.bukkit.block.data.type.Beehive'): Beehive;
   static type (name: 'org.bukkit.block.Bell'): Bell;
   static type (name: 'org.bukkit.block.data.type.Bell'): Bell;
   static type (name: 'org.bukkit.block.data.type.Bell.Attachment'): Bell$Attachment;
   static type (name: 'org.bukkit.block.Biome'): Biome;
   static type (name: 'org.bukkit.block.data.Bisected'): Bisected;
   static type (name: 'org.bukkit.block.data.Bisected.Half'): Bisected$Half;
   static type (name: 'org.bukkit.block.BlastFurnace'): BlastFurnace;
   static type (name: 'org.bukkit.inventory.BlastingRecipe'): BlastingRecipe;
   static type (name: 'org.bukkit.entity.Blaze'): Blaze;
   static type (name: 'org.bukkit.block.Block'): Block;
   static type (name: 'org.bukkit.event.block.BlockBreakEvent'): BlockBreakEvent;
   static type (name: 'org.bukkit.event.block.BlockBurnEvent'): BlockBurnEvent;
   static type (name: 'org.bukkit.event.block.BlockCanBuildEvent'): BlockCanBuildEvent;
   static type (name: 'org.bukkit.BlockChangeDelegate'): BlockChangeDelegate;
   static type (name: 'org.bukkit.command.BlockCommandSender'): BlockCommandSender;
   static type (name: 'org.bukkit.event.block.BlockCookEvent'): BlockCookEvent;
   static type (name: 'org.bukkit.event.block.BlockDamageEvent'): BlockDamageEvent;
   static type (name: 'org.bukkit.block.data.BlockData'): BlockData;
   static type (name: 'org.bukkit.inventory.meta.BlockDataMeta'): BlockDataMeta;
   static type (name: 'com.destroystokyo.paper.event.block.BlockDestroyEvent'): BlockDestroyEvent;
   static type (name: 'org.bukkit.event.block.BlockDispenseArmorEvent'): BlockDispenseArmorEvent;
   static type (name: 'org.bukkit.event.block.BlockDispenseEvent'): BlockDispenseEvent;
   static type (name: 'org.bukkit.event.block.BlockDropItemEvent'): BlockDropItemEvent;
   static type (name: 'org.bukkit.event.block.BlockEvent'): BlockEvent;
   static type (name: 'org.bukkit.event.block.BlockExpEvent'): BlockExpEvent;
   static type (name: 'org.bukkit.event.block.BlockExplodeEvent'): BlockExplodeEvent;
   static type (name: 'org.bukkit.block.BlockFace'): BlockFace;
   static type (name: 'org.bukkit.event.block.BlockFadeEvent'): BlockFadeEvent;
   static type (name: 'org.bukkit.event.block.BlockFertilizeEvent'): BlockFertilizeEvent;
   static type (name: 'org.bukkit.event.block.BlockFormEvent'): BlockFormEvent;
   static type (name: 'org.bukkit.event.block.BlockFromToEvent'): BlockFromToEvent;
   static type (name: 'org.bukkit.event.block.BlockGrowEvent'): BlockGrowEvent;
   static type (name: 'org.bukkit.event.block.BlockIgniteEvent'): BlockIgniteEvent;
   static type (name: 'org.bukkit.event.block.BlockIgniteEvent.IgniteCause'): BlockIgniteEvent$IgniteCause;
   static type (name: 'org.bukkit.inventory.BlockInventoryHolder'): BlockInventoryHolder;
   static type (name: 'org.bukkit.util.BlockIterator'): BlockIterator;
   static type (name: 'org.bukkit.event.block.BlockMultiPlaceEvent'): BlockMultiPlaceEvent;
   static type (name: 'org.bukkit.event.block.BlockPhysicsEvent'): BlockPhysicsEvent;
   static type (name: 'org.bukkit.event.block.BlockPistonEvent'): BlockPistonEvent;
   static type (name: 'org.bukkit.event.block.BlockPistonExtendEvent'): BlockPistonExtendEvent;
   static type (name: 'org.bukkit.event.block.BlockPistonRetractEvent'): BlockPistonRetractEvent;
   static type (name: 'org.bukkit.event.block.BlockPlaceEvent'): BlockPlaceEvent;
   static type (name: 'org.bukkit.generator.BlockPopulator'): BlockPopulator;
   static type (name: 'org.bukkit.projectiles.BlockProjectileSource'): BlockProjectileSource;
   static type (name: 'org.bukkit.event.block.BlockRedstoneEvent'): BlockRedstoneEvent;
   static type (name: 'org.bukkit.event.block.BlockShearEntityEvent'): BlockShearEntityEvent;
   static type (name: 'com.destroystokyo.paper.block.BlockSoundGroup'): BlockSoundGroup;
   static type (name: 'org.bukkit.event.block.BlockSpreadEvent'): BlockSpreadEvent;
   static type (name: 'org.bukkit.block.BlockState'): BlockState;
   static type (name: 'org.bukkit.inventory.meta.BlockStateMeta'): BlockStateMeta;
   static type (name: 'org.bukkit.util.BlockVector'): BlockVector;
   static type (name: 'org.bukkit.entity.Boat'): Boat;
   static type (name: 'org.bukkit.inventory.meta.BookMeta'): BookMeta;
   static type (name: 'org.bukkit.inventory.meta.BookMeta.Generation'): BookMeta$Generation;
   static type (name: 'org.bukkit.inventory.meta.BookMeta.Spigot'): BookMeta$Spigot;
   static type (name: 'org.bukkit.conversations.BooleanPrompt'): BooleanPrompt;
   static type (name: 'org.bukkit.entity.Boss'): Boss;
   static type (name: 'org.bukkit.boss.BossBar'): BossBar;
   static type (name: 'org.bukkit.util.BoundingBox'): BoundingBox;
   static type (name: 'org.bukkit.inventory.BrewerInventory'): BrewerInventory;
   static type (name: 'org.bukkit.event.inventory.BrewEvent'): BrewEvent;
   static type (name: 'org.bukkit.block.BrewingStand'): BrewingStand;
   static type (name: 'org.bukkit.block.data.type.BrewingStand'): BrewingStand;
   static type (name: 'org.bukkit.event.inventory.BrewingStandFuelEvent'): BrewingStandFuelEvent;
   static type (name: 'org.bukkit.event.server.BroadcastMessageEvent'): BroadcastMessageEvent;
   static type (name: 'org.bukkit.util.permissions.BroadcastPermissions'): BroadcastPermissions;
   static type (name: 'org.bukkit.block.data.type.BubbleColumn'): BubbleColumn;
   static type (name: 'org.bukkit.command.BufferedCommandSender'): BufferedCommandSender;
   static type (name: 'org.bukkit.Bukkit'): Bukkit;
   static type (name: 'org.bukkit.command.defaults.BukkitCommand'): BukkitCommand;
   static type (name: 'org.bukkit.util.io.BukkitObjectInputStream'): BukkitObjectInputStream;
   static type (name: 'org.bukkit.util.io.BukkitObjectOutputStream'): BukkitObjectOutputStream;
   static type (name: 'org.bukkit.scheduler.BukkitRunnable'): BukkitRunnable;
   static type (name: 'org.bukkit.scheduler.BukkitScheduler'): BukkitScheduler;
   static type (name: 'org.bukkit.scheduler.BukkitTask'): BukkitTask;
   static type (name: 'org.bukkit.scheduler.BukkitWorker'): BukkitWorker;
   static type (name: 'org.bukkit.material.Button'): Button;
   static type (name: 'org.bukkit.util.CachedServerIcon'): CachedServerIcon;
   static type (name: 'com.destroystokyo.paper.utils.CachedSizeConcurrentLinkedQueue'): CachedSizeConcurrentLinkedQueue;
   static type (name: 'org.bukkit.block.data.type.Cake'): Cake;
   static type (name: 'org.bukkit.material.Cake'): Cake;
   static type (name: 'org.bukkit.block.Campfire'): Campfire;
   static type (name: 'org.bukkit.block.data.type.Campfire'): Campfire;
   static type (name: 'org.bukkit.inventory.CampfireRecipe'): CampfireRecipe;
   static type (name: 'org.bukkit.event.Cancellable'): Cancellable;
   static type (name: 'org.bukkit.inventory.CartographyInventory'): CartographyInventory;
   static type (name: 'org.bukkit.entity.Cat'): Cat;
   static type (name: 'org.bukkit.entity.Cat.Type'): Cat$Type;
   static type (name: 'org.bukkit.material.Cauldron'): Cauldron;
   static type (name: 'org.bukkit.event.block.CauldronLevelChangeEvent'): CauldronLevelChangeEvent;
   static type (
      name: 'org.bukkit.event.block.CauldronLevelChangeEvent.ChangeReason'
   ): CauldronLevelChangeEvent$ChangeReason;
   static type (name: 'org.bukkit.entity.CaveSpider'): CaveSpider;
   static type (name: 'org.bukkit.plugin.messaging.ChannelNameTooLongException'): ChannelNameTooLongException;
   static type (name: 'org.bukkit.plugin.messaging.ChannelNotRegisteredException'): ChannelNotRegisteredException;
   static type (name: 'org.bukkit.ChatColor'): ChatColor;
   static type (name: 'org.bukkit.util.ChatPaginator'): ChatPaginator;
   static type (name: 'org.bukkit.util.ChatPaginator.ChatPage'): ChatPaginator$ChatPage;
   static type (name: 'org.bukkit.block.Chest'): Chest;
   static type (name: 'org.bukkit.block.data.type.Chest'): Chest;
   static type (name: 'org.bukkit.material.Chest'): Chest;
   static type (name: 'org.bukkit.block.data.type.Chest.Type'): Chest$Type;
   static type (name: 'org.bukkit.entity.ChestedHorse'): ChestedHorse;
   static type (name: 'org.bukkit.entity.Chicken'): Chicken;
   static type (name: 'org.bukkit.Chunk'): Chunk;
   static type (name: 'org.bukkit.event.world.ChunkEvent'): ChunkEvent;
   static type (name: 'org.bukkit.generator.ChunkGenerator'): ChunkGenerator;
   static type (name: 'org.bukkit.generator.ChunkGenerator.BiomeGrid'): ChunkGenerator$BiomeGrid;
   static type (name: 'org.bukkit.generator.ChunkGenerator.ChunkData'): ChunkGenerator$ChunkData;
   static type (name: 'org.bukkit.event.world.ChunkLoadEvent'): ChunkLoadEvent;
   static type (name: 'org.bukkit.event.world.ChunkPopulateEvent'): ChunkPopulateEvent;
   static type (name: 'org.bukkit.ChunkSnapshot'): ChunkSnapshot;
   static type (name: 'org.bukkit.event.world.ChunkUnloadEvent'): ChunkUnloadEvent;
   static type (name: 'com.destroystokyo.paper.event.executor.asm.ClassDefiner'): ClassDefiner;
   static type (name: 'org.bukkit.event.inventory.ClickType'): ClickType;
   static type (name: 'com.destroystokyo.paper.ClientOption'): ClientOption;
   static type (name: 'com.destroystokyo.paper.ClientOption.ChatVisibility'): ClientOption$ChatVisibility;
   static type (name: 'org.bukkit.material.Coal'): Coal;
   static type (name: 'org.bukkit.CoalType'): CoalType;
   static type (name: 'org.bukkit.block.data.type.Cocoa'): Cocoa;
   static type (name: 'org.bukkit.material.CocoaPlant'): CocoaPlant;
   static type (name: 'org.bukkit.material.CocoaPlant.CocoaPlantSize'): CocoaPlant$CocoaPlantSize;
   static type (name: 'org.bukkit.entity.Cod'): Cod;
   static type (name: 'org.bukkit.Color'): Color;
   static type (name: 'org.bukkit.material.Colorable'): Colorable;
   static type (name: 'org.bukkit.command.Command'): Command;
   static type (name: 'org.bukkit.material.Command'): Command;
   static type (name: 'org.bukkit.block.CommandBlock'): CommandBlock;
   static type (name: 'org.bukkit.block.data.type.CommandBlock'): CommandBlock;
   static type (name: 'org.bukkit.command.CommandException'): CommandException;
   static type (name: 'org.bukkit.command.CommandExecutor'): CommandExecutor;
   static type (name: 'org.bukkit.command.CommandMap'): CommandMap;
   static type (name: 'org.bukkit.entity.minecart.CommandMinecart'): CommandMinecart;
   static type (name: 'org.bukkit.util.permissions.CommandPermissions'): CommandPermissions;
   static type (name: 'org.bukkit.command.CommandSender'): CommandSender;
   static type (name: 'org.bukkit.command.CommandSender.Spigot'): CommandSender$Spigot;
   static type (name: 'org.bukkit.block.Comparator'): Comparator;
   static type (name: 'org.bukkit.block.data.type.Comparator'): Comparator;
   static type (name: 'org.bukkit.material.Comparator'): Comparator;
   static type (name: 'org.bukkit.block.data.type.Comparator.Mode'): Comparator$Mode;
   static type (name: 'org.bukkit.inventory.meta.CompassMeta'): CompassMeta;
   static type (name: 'org.bukkit.entity.ComplexEntityPart'): ComplexEntityPart;
   static type (name: 'org.bukkit.entity.ComplexLivingEntity'): ComplexLivingEntity;
   static type (name: 'org.bukkit.inventory.ComplexRecipe'): ComplexRecipe;
   static type (name: 'org.bukkit.block.Conduit'): Conduit;
   static type (name: 'org.bukkit.configuration.Configuration'): Configuration;
   static type (name: 'org.bukkit.configuration.ConfigurationOptions'): ConfigurationOptions;
   static type (name: 'org.bukkit.configuration.ConfigurationSection'): ConfigurationSection;
   static type (name: 'org.bukkit.configuration.serialization.ConfigurationSerializable'): ConfigurationSerializable;
   static type (name: 'org.bukkit.configuration.serialization.ConfigurationSerialization'): ConfigurationSerialization;
   static type (name: 'org.bukkit.command.ConsoleCommandSender'): ConsoleCommandSender;
   static type (name: 'org.bukkit.util.Consumer'): Consumer;
   static type (name: 'org.bukkit.block.Container'): Container;
   static type (name: 'org.bukkit.conversations.Conversable'): Conversable;
   static type (name: 'org.bukkit.conversations.Conversation'): Conversation;
   static type (name: 'org.bukkit.conversations.Conversation.ConversationState'): Conversation$ConversationState;
   static type (name: 'org.bukkit.conversations.ConversationAbandonedEvent'): ConversationAbandonedEvent;
   static type (name: 'org.bukkit.conversations.ConversationAbandonedListener'): ConversationAbandonedListener;
   static type (name: 'org.bukkit.conversations.ConversationCanceller'): ConversationCanceller;
   static type (name: 'org.bukkit.conversations.ConversationContext'): ConversationContext;
   static type (name: 'org.bukkit.conversations.ConversationFactory'): ConversationFactory;
   static type (name: 'org.bukkit.conversations.ConversationPrefix'): ConversationPrefix;
   static type (name: 'org.bukkit.inventory.CookingRecipe'): CookingRecipe;
   static type (name: 'org.bukkit.block.data.type.CoralWallFan'): CoralWallFan;
   static type (name: 'co.aikar.util.Counter'): Counter;
   static type (name: 'org.bukkit.entity.Cow'): Cow;
   static type (name: 'org.bukkit.inventory.CraftingInventory'): CraftingInventory;
   static type (name: 'org.bukkit.event.inventory.CraftItemEvent'): CraftItemEvent;
   static type (name: 'org.bukkit.entity.Creature'): Creature;
   static type (name: 'org.bukkit.block.CreatureSpawner'): CreatureSpawner;
   static type (name: 'org.bukkit.event.entity.CreatureSpawnEvent'): CreatureSpawnEvent;
   static type (name: 'org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason'): CreatureSpawnEvent$SpawnReason;
   static type (name: 'org.bukkit.entity.Creeper'): Creeper;
   static type (name: 'com.destroystokyo.paper.event.entity.CreeperIgniteEvent'): CreeperIgniteEvent;
   static type (name: 'org.bukkit.event.entity.CreeperPowerEvent'): CreeperPowerEvent;
   static type (name: 'org.bukkit.event.entity.CreeperPowerEvent.PowerCause'): CreeperPowerEvent$PowerCause;
   static type (name: 'org.bukkit.scoreboard.Criterias'): Criterias;
   static type (name: 'org.bukkit.material.Crops'): Crops;
   static type (name: 'org.bukkit.CropState'): CropState;
   static type (name: 'org.bukkit.inventory.meta.CrossbowMeta'): CrossbowMeta;
   static type (name: 'org.bukkit.inventory.meta.tags.CustomItemTagContainer'): CustomItemTagContainer;
   static type (name: 'org.spigotmc.CustomTimingsHandler'): CustomTimingsHandler;
   static type (name: 'org.bukkit.entity.Damageable'): Damageable;
   static type (name: 'org.bukkit.inventory.meta.Damageable'): Damageable;
   static type (name: 'org.bukkit.block.data.type.DaylightDetector'): DaylightDetector;
   static type (name: 'org.bukkit.block.DaylightDetector'): DaylightDetector;
   static type (name: 'org.bukkit.util.permissions.DefaultPermissions'): DefaultPermissions;
   static type (name: 'org.bukkit.configuration.serialization.DelegateDeserialization'): DelegateDeserialization;
   static type (name: 'org.bukkit.material.DetectorRail'): DetectorRail;
   static type (name: 'org.bukkit.Difficulty'): Difficulty;
   static type (name: 'org.bukkit.material.Diode'): Diode;
   static type (name: 'org.bukkit.block.data.Directional'): Directional;
   static type (name: 'org.bukkit.material.Directional'): Directional;
   static type (name: 'org.bukkit.material.DirectionalContainer'): DirectionalContainer;
   static type (name: 'org.bukkit.block.data.type.Dispenser'): Dispenser;
   static type (name: 'org.bukkit.block.Dispenser'): Dispenser;
   static type (name: 'org.bukkit.material.Dispenser'): Dispenser;
   static type (name: 'org.bukkit.scoreboard.DisplaySlot'): DisplaySlot;
   static type (name: 'org.bukkit.entity.Dolphin'): Dolphin;
   static type (name: 'org.bukkit.entity.Donkey'): Donkey;
   static type (name: 'org.bukkit.block.data.type.Door'): Door;
   static type (name: 'org.bukkit.material.Door'): Door;
   static type (name: 'org.bukkit.block.data.type.Door.Hinge'): Door$Hinge;
   static type (name: 'org.bukkit.block.DoubleChest'): DoubleChest;
   static type (name: 'org.bukkit.inventory.DoubleChestInventory'): DoubleChestInventory;
   static type (name: 'org.bukkit.boss.DragonBattle'): DragonBattle;
   static type (name: 'org.bukkit.boss.DragonBattle.RespawnPhase'): DragonBattle$RespawnPhase;
   static type (name: 'org.bukkit.entity.DragonFireball'): DragonFireball;
   static type (name: 'org.bukkit.event.inventory.DragType'): DragType;
   static type (name: 'org.bukkit.block.Dropper'): Dropper;
   static type (name: 'org.bukkit.entity.Drowned'): Drowned;
   static type (name: 'org.bukkit.material.Dye'): Dye;
   static type (name: 'org.bukkit.DyeColor'): DyeColor;
   static type (name: 'org.bukkit.Effect'): Effect;
   static type (name: 'org.bukkit.Effect.Type'): Effect$Type;
   static type (name: 'org.bukkit.entity.Egg'): Egg;
   static type (name: 'org.bukkit.entity.ElderGuardian'): ElderGuardian;
   static type (name: 'org.bukkit.inventory.EnchantingInventory'): EnchantingInventory;
   static type (name: 'org.bukkit.block.EnchantingTable'): EnchantingTable;
   static type (name: 'org.bukkit.event.enchantment.EnchantItemEvent'): EnchantItemEvent;
   static type (name: 'org.bukkit.enchantments.Enchantment'): Enchantment;
   static type (name: 'org.bukkit.enchantments.EnchantmentOffer'): EnchantmentOffer;
   static type (name: 'org.bukkit.inventory.meta.EnchantmentStorageMeta'): EnchantmentStorageMeta;
   static type (name: 'org.bukkit.enchantments.EnchantmentTarget'): EnchantmentTarget;
   static type (name: 'org.bukkit.enchantments.EnchantmentWrapper'): EnchantmentWrapper;
   static type (name: 'org.bukkit.block.data.type.EnderChest'): EnderChest;
   static type (name: 'org.bukkit.block.EnderChest'): EnderChest;
   static type (name: 'org.bukkit.material.EnderChest'): EnderChest;
   static type (name: 'org.bukkit.entity.EnderCrystal'): EnderCrystal;
   static type (name: 'org.bukkit.entity.EnderDragon'): EnderDragon;
   static type (name: 'org.bukkit.entity.EnderDragon.Phase'): EnderDragon$Phase;
   static type (name: 'org.bukkit.event.entity.EnderDragonChangePhaseEvent'): EnderDragonChangePhaseEvent;
   static type (name: 'com.destroystokyo.paper.event.entity.EnderDragonFireballHitEvent'): EnderDragonFireballHitEvent;
   static type (name: 'com.destroystokyo.paper.event.entity.EnderDragonFlameEvent'): EnderDragonFlameEvent;
   static type (name: 'org.bukkit.entity.EnderDragonPart'): EnderDragonPart;
   static type (
      name: 'com.destroystokyo.paper.event.entity.EnderDragonShootFireballEvent'
   ): EnderDragonShootFireballEvent;
   static type (name: 'org.bukkit.entity.Enderman'): Enderman;
   static type (name: 'com.destroystokyo.paper.event.entity.EndermanAttackPlayerEvent'): EndermanAttackPlayerEvent;
   static type (name: 'com.destroystokyo.paper.event.entity.EndermanEscapeEvent'): EndermanEscapeEvent;
   static type (name: 'com.destroystokyo.paper.event.entity.EndermanEscapeEvent.Reason'): EndermanEscapeEvent$Reason;
   static type (name: 'org.bukkit.entity.Endermite'): Endermite;
   static type (name: 'org.bukkit.entity.EnderPearl'): EnderPearl;
   static type (name: 'org.bukkit.entity.EnderSignal'): EnderSignal;
   static type (name: 'org.bukkit.block.EndGateway'): EndGateway;
   static type (name: 'org.bukkit.block.data.type.EndPortalFrame'): EndPortalFrame;
   static type (name: 'org.bukkit.entity.Entity'): Entity;
   static type (name: 'org.bukkit.entity.Entity.Spigot'): Entity$Spigot;
   static type (name: 'com.destroystokyo.paper.event.entity.EntityAddToWorldEvent'): EntityAddToWorldEvent;
   static type (name: 'org.bukkit.event.entity.EntityAirChangeEvent'): EntityAirChangeEvent;
   static type (name: 'org.bukkit.event.block.EntityBlockFormEvent'): EntityBlockFormEvent;
   static type (name: 'org.bukkit.block.EntityBlockStorage'): EntityBlockStorage;
   static type (name: 'org.bukkit.event.entity.EntityBreakDoorEvent'): EntityBreakDoorEvent;
   static type (name: 'org.bukkit.event.entity.EntityBreedEvent'): EntityBreedEvent;
   static type (name: 'org.bukkit.event.entity.EntityChangeBlockEvent'): EntityChangeBlockEvent;
   static type (name: 'org.bukkit.event.entity.EntityCombustByBlockEvent'): EntityCombustByBlockEvent;
   static type (name: 'org.bukkit.event.entity.EntityCombustByEntityEvent'): EntityCombustByEntityEvent;
   static type (name: 'org.bukkit.event.entity.EntityCombustEvent'): EntityCombustEvent;
   static type (name: 'org.bukkit.event.entity.EntityCreatePortalEvent'): EntityCreatePortalEvent;
   static type (name: 'org.bukkit.event.entity.EntityDamageByBlockEvent'): EntityDamageByBlockEvent;
   static type (name: 'org.bukkit.event.entity.EntityDamageByEntityEvent'): EntityDamageByEntityEvent;
   static type (name: 'org.bukkit.event.entity.EntityDamageEvent'): EntityDamageEvent;
   static type (name: 'org.bukkit.event.entity.EntityDamageEvent.DamageCause'): EntityDamageEvent$DamageCause;
   static type (name: 'org.bukkit.event.entity.EntityDamageEvent.DamageModifier'): EntityDamageEvent$DamageModifier;
   static type (name: 'org.bukkit.event.entity.EntityDeathEvent'): EntityDeathEvent;
   static type (name: 'org.spigotmc.event.entity.EntityDismountEvent'): EntityDismountEvent;
   static type (name: 'org.bukkit.event.entity.EntityDropItemEvent'): EntityDropItemEvent;
   static type (name: 'org.bukkit.EntityEffect'): EntityEffect;
   static type (name: 'org.bukkit.event.entity.EntityEnterBlockEvent'): EntityEnterBlockEvent;
   static type (name: 'org.bukkit.event.entity.EntityEnterLoveModeEvent'): EntityEnterLoveModeEvent;
   static type (name: 'org.bukkit.inventory.EntityEquipment'): EntityEquipment;
   static type (name: 'org.bukkit.event.entity.EntityEvent'): EntityEvent;
   static type (name: 'org.bukkit.event.entity.EntityExplodeEvent'): EntityExplodeEvent;
   static type (name: 'org.bukkit.event.entity.EntityInteractEvent'): EntityInteractEvent;
   static type (name: 'com.destroystokyo.paper.event.entity.EntityJumpEvent'): EntityJumpEvent;
   static type (
      name: 'com.destroystokyo.paper.event.entity.EntityKnockbackByEntityEvent'
   ): EntityKnockbackByEntityEvent;
   static type (name: 'org.spigotmc.event.entity.EntityMountEvent'): EntityMountEvent;
   static type (name: 'com.destroystokyo.paper.event.entity.EntityPathfindEvent'): EntityPathfindEvent;
   static type (name: 'org.bukkit.event.entity.EntityPickupItemEvent'): EntityPickupItemEvent;
   static type (name: 'org.bukkit.event.entity.EntityPlaceEvent'): EntityPlaceEvent;
   static type (name: 'org.bukkit.event.entity.EntityPortalEnterEvent'): EntityPortalEnterEvent;
   static type (name: 'org.bukkit.event.entity.EntityPortalEvent'): EntityPortalEvent;
   static type (name: 'org.bukkit.event.entity.EntityPortalExitEvent'): EntityPortalExitEvent;
   static type (name: 'org.bukkit.event.entity.EntityPoseChangeEvent'): EntityPoseChangeEvent;
   static type (name: 'org.bukkit.event.entity.EntityPotionEffectEvent'): EntityPotionEffectEvent;
   static type (name: 'org.bukkit.event.entity.EntityPotionEffectEvent.Action'): EntityPotionEffectEvent$Action;
   static type (name: 'org.bukkit.event.entity.EntityPotionEffectEvent.Cause'): EntityPotionEffectEvent$Cause;
   static type (name: 'org.bukkit.event.entity.EntityRegainHealthEvent'): EntityRegainHealthEvent;
   static type (
      name: 'org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason'
   ): EntityRegainHealthEvent$RegainReason;
   static type (name: 'com.destroystokyo.paper.event.entity.EntityRemoveFromWorldEvent'): EntityRemoveFromWorldEvent;
   static type (name: 'org.bukkit.event.entity.EntityResurrectEvent'): EntityResurrectEvent;
   static type (name: 'org.bukkit.event.entity.EntityShootBowEvent'): EntityShootBowEvent;
   static type (name: 'org.bukkit.event.entity.EntitySpawnEvent'): EntitySpawnEvent;
   static type (name: 'org.bukkit.event.entity.EntityTameEvent'): EntityTameEvent;
   static type (name: 'org.bukkit.event.entity.EntityTargetEvent'): EntityTargetEvent;
   static type (name: 'org.bukkit.event.entity.EntityTargetEvent.TargetReason'): EntityTargetEvent$TargetReason;
   static type (name: 'org.bukkit.event.entity.EntityTargetLivingEntityEvent'): EntityTargetLivingEntityEvent;
   static type (
      name: 'com.destroystokyo.paper.event.entity.EntityTeleportEndGatewayEvent'
   ): EntityTeleportEndGatewayEvent;
   static type (name: 'org.bukkit.event.entity.EntityTeleportEvent'): EntityTeleportEvent;
   static type (name: 'org.bukkit.event.entity.EntityToggleGlideEvent'): EntityToggleGlideEvent;
   static type (name: 'org.bukkit.event.entity.EntityToggleSwimEvent'): EntityToggleSwimEvent;
   static type (name: 'com.destroystokyo.paper.event.entity.EntityTransformedEvent'): EntityTransformedEvent;
   static type (
      name: 'com.destroystokyo.paper.event.entity.EntityTransformedEvent.TransformedReason'
   ): EntityTransformedEvent$TransformedReason;
   static type (name: 'org.bukkit.event.entity.EntityTransformEvent'): EntityTransformEvent;
   static type (
      name: 'org.bukkit.event.entity.EntityTransformEvent.TransformReason'
   ): EntityTransformEvent$TransformReason;
   static type (name: 'org.bukkit.entity.EntityType'): EntityType;
   static type (name: 'org.bukkit.event.entity.EntityUnleashEvent'): EntityUnleashEvent;
   static type (name: 'org.bukkit.event.entity.EntityUnleashEvent.UnleashReason'): EntityUnleashEvent$UnleashReason;
   static type (name: 'com.destroystokyo.paper.event.entity.EntityZapEvent'): EntityZapEvent;
   static type (name: 'org.bukkit.inventory.EquipmentSlot'): EquipmentSlot;
   static type (name: 'org.bukkit.util.EulerAngle'): EulerAngle;
   static type (name: 'org.bukkit.event.Event'): Event;
   static type (name: 'org.bukkit.event.Event.Result'): Event$Result;
   static type (name: 'org.bukkit.event.EventException'): EventException;
   static type (name: 'org.bukkit.plugin.EventExecutor'): EventExecutor;
   static type (name: 'org.bukkit.event.EventHandler'): EventHandler;
   static type (name: 'org.bukkit.event.EventPriority'): EventPriority;
   static type (name: 'org.bukkit.entity.Evoker'): Evoker;
   static type (name: 'org.bukkit.entity.Evoker.Spell'): Evoker$Spell;
   static type (name: 'org.bukkit.entity.EvokerFangs'): EvokerFangs;
   static type (name: 'org.bukkit.conversations.ExactMatchConversationCanceller'): ExactMatchConversationCanceller;
   static type (name: 'org.bukkit.event.entity.ExpBottleEvent'): ExpBottleEvent;
   static type (name: 'org.bukkit.entity.ExperienceOrb'): ExperienceOrb;
   static type (name: 'org.bukkit.entity.ExperienceOrb.SpawnReason'): ExperienceOrb$SpawnReason;
   static type (name: 'com.destroystokyo.paper.event.entity.ExperienceOrbMergeEvent'): ExperienceOrbMergeEvent;
   static type (name: 'org.bukkit.event.entity.ExplosionPrimeEvent'): ExplosionPrimeEvent;
   static type (name: 'org.bukkit.entity.Explosive'): Explosive;
   static type (name: 'org.bukkit.entity.minecart.ExplosiveMinecart'): ExplosiveMinecart;
   static type (name: 'org.bukkit.material.ExtendedRails'): ExtendedRails;
   static type (name: 'org.bukkit.block.data.FaceAttachable'): FaceAttachable;
   static type (name: 'org.bukkit.block.data.FaceAttachable.AttachedFace'): FaceAttachable$AttachedFace;
   static type (name: 'org.bukkit.entity.FallingBlock'): FallingBlock;
   static type (name: 'org.bukkit.block.data.type.Farmland'): Farmland;
   static type (name: 'org.bukkit.block.data.type.Fence'): Fence;
   static type (name: 'org.bukkit.configuration.file.FileConfiguration'): FileConfiguration;
   static type (name: 'org.bukkit.configuration.file.FileConfigurationOptions'): FileConfigurationOptions;
   static type (name: 'org.bukkit.util.FileUtil'): FileUtil;
   static type (name: 'com.destroystokyo.paper.event.profile.FillProfileEvent'): FillProfileEvent;
   static type (name: 'org.bukkit.block.data.type.Fire'): Fire;
   static type (name: 'org.bukkit.entity.Fireball'): Fireball;
   static type (name: 'org.bukkit.entity.Firework'): Firework;
   static type (name: 'org.bukkit.FireworkEffect'): FireworkEffect;
   static type (name: 'org.bukkit.FireworkEffect.Builder'): FireworkEffect$Builder;
   static type (name: 'org.bukkit.FireworkEffect.Type'): FireworkEffect$Type;
   static type (name: 'org.bukkit.inventory.meta.FireworkEffectMeta'): FireworkEffectMeta;
   static type (name: 'org.bukkit.event.entity.FireworkExplodeEvent'): FireworkExplodeEvent;
   static type (name: 'org.bukkit.inventory.meta.FireworkMeta'): FireworkMeta;
   static type (name: 'org.bukkit.entity.Fish'): Fish;
   static type (name: 'org.bukkit.entity.FishHook'): FishHook;
   static type (name: 'org.bukkit.metadata.FixedMetadataValue'): FixedMetadataValue;
   static type (name: 'org.bukkit.conversations.FixedSetPrompt'): FixedSetPrompt;
   static type (name: 'org.bukkit.material.FlowerPot'): FlowerPot;
   static type (name: 'org.bukkit.FluidCollisionMode'): FluidCollisionMode;
   static type (name: 'org.bukkit.event.block.FluidLevelChangeEvent'): FluidLevelChangeEvent;
   static type (name: 'org.bukkit.entity.Flying'): Flying;
   static type (name: 'org.bukkit.event.entity.FoodLevelChangeEvent'): FoodLevelChangeEvent;
   static type (name: 'org.bukkit.command.FormattedCommandAlias'): FormattedCommandAlias;
   static type (name: 'org.bukkit.entity.Fox'): Fox;
   static type (name: 'org.bukkit.entity.Fox.Type'): Fox$Type;
   static type (name: 'co.aikar.timings.FullServerTickHandler'): FullServerTickHandler;
   static type (name: 'org.bukkit.block.data.type.Furnace'): Furnace;
   static type (name: 'org.bukkit.block.Furnace'): Furnace;
   static type (name: 'org.bukkit.material.Furnace'): Furnace;
   static type (name: 'org.bukkit.material.FurnaceAndDispenser'): FurnaceAndDispenser;
   static type (name: 'org.bukkit.event.inventory.FurnaceBurnEvent'): FurnaceBurnEvent;
   static type (name: 'org.bukkit.event.inventory.FurnaceExtractEvent'): FurnaceExtractEvent;
   static type (name: 'org.bukkit.inventory.FurnaceInventory'): FurnaceInventory;
   static type (name: 'org.bukkit.inventory.FurnaceRecipe'): FurnaceRecipe;
   static type (name: 'org.bukkit.event.inventory.FurnaceSmeltEvent'): FurnaceSmeltEvent;
   static type (name: 'org.bukkit.GameMode'): GameMode;
   static type (name: 'org.bukkit.GameRule'): GameRule;
   static type (name: 'org.bukkit.block.data.type.Gate'): Gate;
   static type (name: 'org.bukkit.material.Gate'): Gate;
   static type (name: 'org.bukkit.help.GenericCommandHelpTopic'): GenericCommandHelpTopic;
   static type (name: 'org.bukkit.entity.Ghast'): Ghast;
   static type (name: 'org.bukkit.entity.Giant'): Giant;
   static type (name: 'org.bukkit.block.data.type.GlassPane'): GlassPane;
   static type (name: 'com.destroystokyo.paper.entity.ai.Goal'): Goal;
   static type (name: 'com.destroystokyo.paper.entity.ai.GoalKey'): GoalKey;
   static type (name: 'com.destroystokyo.paper.entity.ai.GoalType'): GoalType;
   static type (name: 'org.bukkit.entity.Golem'): Golem;
   static type (name: 'org.bukkit.GrassSpecies'): GrassSpecies;
   static type (name: 'org.bukkit.block.data.type.Grindstone'): Grindstone;
   static type (name: 'org.bukkit.inventory.GrindstoneInventory'): GrindstoneInventory;
   static type (name: 'com.destroystokyo.paper.event.server.GS4QueryEvent'): GS4QueryEvent;
   static type (name: 'com.destroystokyo.paper.event.server.GS4QueryEvent.QueryResponse'): GS4QueryEvent$QueryResponse;
   static type (
      name: 'com.destroystokyo.paper.event.server.GS4QueryEvent.QueryResponse.Builder'
   ): GS4QueryEvent$QueryResponse$Builder;
   static type (
      name: 'com.destroystokyo.paper.event.server.GS4QueryEvent.QueryResponse.PluginInformation'
   ): GS4QueryEvent$QueryResponse$PluginInformation;
   static type (name: 'com.destroystokyo.paper.event.server.GS4QueryEvent.QueryType'): GS4QueryEvent$QueryType;
   static type (name: 'org.bukkit.entity.Guardian'): Guardian;
   static type (name: 'org.bukkit.event.HandlerList'): HandlerList;
   static type (name: 'org.bukkit.entity.Hanging'): Hanging;
   static type (name: 'org.bukkit.event.hanging.HangingBreakByEntityEvent'): HangingBreakByEntityEvent;
   static type (name: 'org.bukkit.event.hanging.HangingBreakEvent'): HangingBreakEvent;
   static type (name: 'org.bukkit.event.hanging.HangingBreakEvent.RemoveCause'): HangingBreakEvent$RemoveCause;
   static type (name: 'org.bukkit.event.hanging.HangingEvent'): HangingEvent;
   static type (name: 'org.bukkit.event.hanging.HangingPlaceEvent'): HangingPlaceEvent;
   static type (name: 'org.bukkit.HeightMap'): HeightMap;
   static type (name: 'com.destroystokyo.paper.HeightmapType'): HeightmapType;
   static type (name: 'org.bukkit.command.defaults.HelpCommand'): HelpCommand;
   static type (name: 'org.bukkit.help.HelpMap'): HelpMap;
   static type (name: 'org.bukkit.help.HelpTopic'): HelpTopic;
   static type (name: 'org.bukkit.help.HelpTopicComparator'): HelpTopicComparator;
   static type (
      name: 'org.bukkit.help.HelpTopicComparator.TopicNameComparator'
   ): HelpTopicComparator$TopicNameComparator;
   static type (name: 'org.bukkit.help.HelpTopicFactory'): HelpTopicFactory;
   static type (name: 'org.bukkit.entity.Hoglin'): Hoglin;
   static type (name: 'org.bukkit.block.data.type.Hopper'): Hopper;
   static type (name: 'org.bukkit.block.Hopper'): Hopper;
   static type (name: 'org.bukkit.material.Hopper'): Hopper;
   static type (name: 'org.bukkit.entity.minecart.HopperMinecart'): HopperMinecart;
   static type (name: 'org.bukkit.entity.Horse'): Horse;
   static type (name: 'org.bukkit.entity.Horse.Color'): Horse$Color;
   static type (name: 'org.bukkit.entity.Horse.Style'): Horse$Style;
   static type (name: 'org.bukkit.entity.Horse.Variant'): Horse$Variant;
   static type (name: 'org.bukkit.inventory.HorseInventory'): HorseInventory;
   static type (name: 'org.bukkit.event.entity.HorseJumpEvent'): HorseJumpEvent;
   static type (name: 'org.bukkit.entity.HumanEntity'): HumanEntity;
   static type (name: 'org.bukkit.entity.Husk'): Husk;
   static type (name: 'org.bukkit.entity.Illager'): Illager;
   static type (name: 'com.destroystokyo.paper.event.player.IllegalPacketEvent'): IllegalPacketEvent;
   static type (name: 'org.bukkit.plugin.IllegalPluginAccessException'): IllegalPluginAccessException;
   static type (name: 'org.bukkit.entity.Illusioner'): Illusioner;
   static type (name: 'org.bukkit.conversations.InactivityConversationCanceller'): InactivityConversationCanceller;
   static type (name: 'org.bukkit.help.IndexHelpTopic'): IndexHelpTopic;
   static type (name: 'org.bukkit.Instrument'): Instrument;
   static type (name: 'org.bukkit.configuration.InvalidConfigurationException'): InvalidConfigurationException;
   static type (name: 'org.bukkit.plugin.InvalidDescriptionException'): InvalidDescriptionException;
   static type (name: 'org.bukkit.plugin.InvalidPluginException'): InvalidPluginException;
   static type (name: 'org.bukkit.inventory.Inventory'): Inventory;
   static type (name: 'org.bukkit.event.inventory.InventoryAction'): InventoryAction;
   static type (name: 'org.bukkit.event.inventory.InventoryClickEvent'): InventoryClickEvent;
   static type (name: 'org.bukkit.event.inventory.InventoryCloseEvent'): InventoryCloseEvent;
   static type (name: 'org.bukkit.event.inventory.InventoryCloseEvent.Reason'): InventoryCloseEvent$Reason;
   static type (name: 'org.bukkit.event.inventory.InventoryCreativeEvent'): InventoryCreativeEvent;
   static type (name: 'org.bukkit.event.inventory.InventoryDragEvent'): InventoryDragEvent;
   static type (name: 'org.bukkit.event.inventory.InventoryEvent'): InventoryEvent;
   static type (name: 'org.bukkit.inventory.InventoryHolder'): InventoryHolder;
   static type (name: 'org.bukkit.event.inventory.InventoryInteractEvent'): InventoryInteractEvent;
   static type (name: 'org.bukkit.event.inventory.InventoryMoveItemEvent'): InventoryMoveItemEvent;
   static type (name: 'org.bukkit.event.inventory.InventoryOpenEvent'): InventoryOpenEvent;
   static type (name: 'org.bukkit.event.inventory.InventoryPickupItemEvent'): InventoryPickupItemEvent;
   static type (name: 'org.bukkit.event.inventory.InventoryType'): InventoryType;
   static type (name: 'org.bukkit.event.inventory.InventoryType.SlotType'): InventoryType$SlotType;
   static type (name: 'org.bukkit.inventory.InventoryView'): InventoryView;
   static type (name: 'org.bukkit.inventory.InventoryView.Property'): InventoryView$Property;
   static type (name: 'org.bukkit.entity.IronGolem'): IronGolem;
   static type (name: 'org.bukkit.entity.Item'): Item;
   static type (name: 'org.bukkit.event.entity.ItemDespawnEvent'): ItemDespawnEvent;
   static type (name: 'org.bukkit.inventory.ItemFactory'): ItemFactory;
   static type (name: 'org.bukkit.inventory.ItemFlag'): ItemFlag;
   static type (name: 'org.bukkit.entity.ItemFrame'): ItemFrame;
   static type (name: 'org.bukkit.event.entity.ItemMergeEvent'): ItemMergeEvent;
   static type (name: 'org.bukkit.inventory.meta.ItemMeta'): ItemMeta;
   static type (name: 'org.bukkit.event.entity.ItemSpawnEvent'): ItemSpawnEvent;
   static type (name: 'org.bukkit.inventory.ItemStack'): ItemStack;
   static type (name: 'com.destroystokyo.paper.inventory.ItemStackRecipeChoice'): ItemStackRecipeChoice;
   static type (name: 'org.bukkit.inventory.meta.tags.ItemTagAdapterContext'): ItemTagAdapterContext;
   static type (name: 'org.bukkit.inventory.meta.tags.ItemTagType'): ItemTagType;
   static type (name: 'org.bukkit.inventory.meta.tags.ItemTagType.PrimitiveTagType'): ItemTagType$PrimitiveTagType;
   static type (name: 'org.bukkit.plugin.java.JavaPlugin'): JavaPlugin;
   static type (name: 'org.bukkit.plugin.java.JavaPluginLoader'): JavaPluginLoader;
   static type (name: 'org.bukkit.block.data.type.Jigsaw'): Jigsaw;
   static type (name: 'org.bukkit.block.Jigsaw'): Jigsaw;
   static type (name: 'org.bukkit.block.data.type.Jigsaw.Orientation'): Jigsaw$Orientation;
   static type (name: 'co.aikar.util.JSONUtil'): JSONUtil;
   static type (name: 'co.aikar.util.JSONUtil.JSONPair'): JSONUtil$JSONPair;
   static type (name: 'org.bukkit.block.data.type.Jukebox'): Jukebox;
   static type (name: 'org.bukkit.block.Jukebox'): Jukebox;
   static type (name: 'org.bukkit.Keyed'): Keyed;
   static type (name: 'org.bukkit.boss.KeyedBossBar'): KeyedBossBar;
   static type (name: 'org.bukkit.inventory.meta.KnowledgeBookMeta'): KnowledgeBookMeta;
   static type (name: 'org.bukkit.block.data.type.Ladder'): Ladder;
   static type (name: 'org.bukkit.material.Ladder'): Ladder;
   static type (name: 'org.bukkit.block.data.type.Lantern'): Lantern;
   static type (name: 'org.bukkit.entity.LargeFireball'): LargeFireball;
   static type (name: 'org.bukkit.metadata.LazyMetadataValue'): LazyMetadataValue;
   static type (name: 'org.bukkit.metadata.LazyMetadataValue.CacheStrategy'): LazyMetadataValue$CacheStrategy;
   static type (name: 'org.bukkit.entity.LeashHitch'): LeashHitch;
   static type (name: 'org.bukkit.inventory.meta.LeatherArmorMeta'): LeatherArmorMeta;
   static type (name: 'org.bukkit.block.data.type.Leaves'): Leaves;
   static type (name: 'org.bukkit.material.Leaves'): Leaves;
   static type (name: 'org.bukkit.event.block.LeavesDecayEvent'): LeavesDecayEvent;
   static type (name: 'org.bukkit.block.data.type.Lectern'): Lectern;
   static type (name: 'org.bukkit.block.Lectern'): Lectern;
   static type (name: 'org.bukkit.inventory.LecternInventory'): LecternInventory;
   static type (name: 'org.bukkit.block.data.Levelled'): Levelled;
   static type (name: 'org.bukkit.material.Lever'): Lever;
   static type (name: 'org.bukkit.block.Lidded'): Lidded;
   static type (name: 'org.bukkit.block.data.Lightable'): Lightable;
   static type (name: 'org.bukkit.entity.LightningStrike'): LightningStrike;
   static type (name: 'org.bukkit.entity.LightningStrike.Spigot'): LightningStrike$Spigot;
   static type (name: 'org.bukkit.event.weather.LightningStrikeEvent'): LightningStrikeEvent;
   static type (name: 'org.bukkit.event.weather.LightningStrikeEvent.Cause'): LightningStrikeEvent$Cause;
   static type (name: 'org.bukkit.entity.LingeringPotion'): LingeringPotion;
   static type (name: 'org.bukkit.event.entity.LingeringPotionSplashEvent'): LingeringPotionSplashEvent;
   static type (name: 'org.bukkit.event.Listener'): Listener;
   static type (name: 'org.bukkit.entity.LivingEntity'): LivingEntity;
   static type (name: 'org.bukkit.entity.Llama'): Llama;
   static type (name: 'org.bukkit.entity.Llama.Color'): Llama$Color;
   static type (name: 'org.bukkit.inventory.LlamaInventory'): LlamaInventory;
   static type (name: 'org.bukkit.entity.LlamaSpit'): LlamaSpit;
   static type (name: 'co.aikar.util.LoadingIntMap'): LoadingIntMap;
   static type (name: 'co.aikar.util.LoadingIntMap.Feeder'): LoadingIntMap$Feeder;
   static type (name: 'co.aikar.util.LoadingMap'): LoadingMap;
   static type (name: 'co.aikar.util.LoadingMap.Feeder'): LoadingMap$Feeder;
   static type (name: 'org.bukkit.Location'): Location;
   static type (name: 'org.bukkit.block.Lockable'): Lockable;
   static type (name: 'org.bukkit.material.LongGrass'): LongGrass;
   static type (name: 'com.destroystokyo.paper.event.profile.LookupProfileEvent'): LookupProfileEvent;
   static type (name: 'org.bukkit.inventory.LoomInventory'): LoomInventory;
   static type (name: 'org.bukkit.loot.Lootable'): Lootable;
   static type (name: 'com.destroystokyo.paper.loottable.LootableBlockInventory'): LootableBlockInventory;
   static type (name: 'com.destroystokyo.paper.loottable.LootableEntityInventory'): LootableEntityInventory;
   static type (name: 'com.destroystokyo.paper.loottable.LootableInventory'): LootableInventory;
   static type (
      name: 'com.destroystokyo.paper.loottable.LootableInventoryReplenishEvent'
   ): LootableInventoryReplenishEvent;
   static type (name: 'org.bukkit.loot.LootContext'): LootContext;
   static type (name: 'org.bukkit.loot.LootContext.Builder'): LootContext$Builder;
   static type (name: 'org.bukkit.event.world.LootGenerateEvent'): LootGenerateEvent;
   static type (name: 'org.bukkit.loot.LootTable'): LootTable;
   static type (name: 'org.bukkit.loot.LootTables'): LootTables;
   static type (name: 'org.bukkit.entity.MagmaCube'): MagmaCube;
   static type (name: 'org.bukkit.inventory.MainHand'): MainHand;
   static type (
      name: 'org.bukkit.conversations.ManuallyAbandonedConversationCanceller'
   ): ManuallyAbandonedConversationCanceller;
   static type (name: 'org.bukkit.map.MapCanvas'): MapCanvas;
   static type (name: 'org.bukkit.map.MapCursor'): MapCursor;
   static type (name: 'org.bukkit.map.MapCursor.Type'): MapCursor$Type;
   static type (name: 'org.bukkit.map.MapCursorCollection'): MapCursorCollection;
   static type (name: 'org.bukkit.map.MapFont'): MapFont;
   static type (name: 'org.bukkit.map.MapFont.CharacterSprite'): MapFont$CharacterSprite;
   static type (name: 'org.bukkit.event.server.MapInitializeEvent'): MapInitializeEvent;
   static type (name: 'org.bukkit.inventory.meta.MapMeta'): MapMeta;
   static type (name: 'org.bukkit.map.MapPalette'): MapPalette;
   static type (name: 'org.bukkit.map.MapRenderer'): MapRenderer;
   static type (name: 'org.bukkit.map.MapView'): MapView;
   static type (name: 'org.bukkit.map.MapView.Scale'): MapView$Scale;
   static type (name: 'org.bukkit.Material'): Material;
   static type (name: 'org.bukkit.material.MaterialData'): MaterialData;
   static type (name: 'com.destroystokyo.paper.MaterialSetTag'): MaterialSetTag;
   static type (name: 'com.destroystokyo.paper.MaterialTags'): MaterialTags;
   static type (name: 'org.bukkit.configuration.MemoryConfiguration'): MemoryConfiguration;
   static type (name: 'org.bukkit.configuration.MemoryConfigurationOptions'): MemoryConfigurationOptions;
   static type (name: 'org.bukkit.entity.memory.MemoryKey'): MemoryKey;
   static type (name: 'org.bukkit.configuration.MemorySection'): MemorySection;
   static type (name: 'org.bukkit.inventory.Merchant'): Merchant;
   static type (name: 'org.bukkit.inventory.MerchantInventory'): MerchantInventory;
   static type (name: 'org.bukkit.inventory.MerchantRecipe'): MerchantRecipe;
   static type (name: 'org.bukkit.command.MessageCommandSender'): MessageCommandSender;
   static type (name: 'org.bukkit.conversations.MessagePrompt'): MessagePrompt;
   static type (name: 'org.bukkit.plugin.messaging.MessageTooLargeException'): MessageTooLargeException;
   static type (name: 'org.bukkit.plugin.messaging.Messenger'): Messenger;
   static type (name: 'org.bukkit.metadata.Metadatable'): Metadatable;
   static type (name: 'org.bukkit.metadata.MetadataConversionException'): MetadataConversionException;
   static type (name: 'org.bukkit.metadata.MetadataEvaluationException'): MetadataEvaluationException;
   static type (name: 'org.bukkit.metadata.MetadataStore'): MetadataStore;
   static type (name: 'org.bukkit.metadata.MetadataStoreBase'): MetadataStoreBase;
   static type (name: 'org.bukkit.metadata.MetadataValue'): MetadataValue;
   static type (name: 'org.bukkit.metadata.MetadataValueAdapter'): MetadataValueAdapter;
   static type (name: 'com.destroystokyo.paper.event.executor.MethodHandleEventExecutor'): MethodHandleEventExecutor;
   static type (name: 'org.bukkit.entity.Minecart'): Minecart;
   static type (name: 'org.bukkit.map.MinecraftFont'): MinecraftFont;
   static type (name: 'org.bukkit.block.structure.Mirror'): Mirror;
   static type (name: 'org.bukkit.entity.Mob'): Mob;
   static type (name: 'com.destroystokyo.paper.entity.ai.MobGoals'): MobGoals;
   static type (name: 'org.bukkit.event.block.MoistureChangeEvent'): MoistureChangeEvent;
   static type (name: 'org.bukkit.entity.Monster'): Monster;
   static type (name: 'org.bukkit.material.MonsterEggs'): MonsterEggs;
   static type (name: 'co.aikar.util.MRUMapCache'): MRUMapCache;
   static type (name: 'org.bukkit.entity.Mule'): Mule;
   static type (name: 'org.bukkit.command.MultipleCommandAlias'): MultipleCommandAlias;
   static type (name: 'org.bukkit.block.data.MultipleFacing'): MultipleFacing;
   static type (name: 'org.bukkit.material.Mushroom'): Mushroom;
   static type (name: 'org.bukkit.material.types.MushroomBlockTexture'): MushroomBlockTexture;
   static type (name: 'org.bukkit.entity.MushroomCow'): MushroomCow;
   static type (name: 'org.bukkit.entity.MushroomCow.Variant'): MushroomCow$Variant;
   static type (name: 'org.bukkit.Nameable'): Nameable;
   static type (name: 'com.destroystokyo.paper.Namespaced'): Namespaced;
   static type (name: 'org.bukkit.NamespacedKey'): NamespacedKey;
   static type (name: 'com.destroystokyo.paper.NamespacedTag'): NamespacedTag;
   static type (name: 'org.bukkit.scoreboard.NameTagVisibility'): NameTagVisibility;
   static type (name: 'org.bukkit.material.NetherWarts'): NetherWarts;
   static type (name: 'org.bukkit.NetherWartsState'): NetherWartsState;
   static type (name: 'com.destroystokyo.paper.network.NetworkClient'): NetworkClient;
   static type (name: 'org.bukkit.util.noise.NoiseGenerator'): NoiseGenerator;
   static type (name: 'org.bukkit.Note'): Note;
   static type (name: 'org.bukkit.Note.Tone'): Note$Tone;
   static type (name: 'org.bukkit.block.data.type.NoteBlock'): NoteBlock;
   static type (name: 'org.bukkit.event.block.NotePlayEvent'): NotePlayEvent;
   static type (name: 'org.bukkit.entity.NPC'): NPC;
   static type (name: 'org.bukkit.conversations.NullConversationPrefix'): NullConversationPrefix;
   static type (name: 'co.aikar.timings.NullTimingHandler'): NullTimingHandler;
   static type (name: 'org.bukkit.util.NumberConversions'): NumberConversions;
   static type (name: 'org.bukkit.conversations.NumericPrompt'): NumericPrompt;
   static type (name: 'org.bukkit.scoreboard.Objective'): Objective;
   static type (name: 'org.bukkit.block.data.type.Observer'): Observer;
   static type (name: 'org.bukkit.material.Observer'): Observer;
   static type (name: 'org.bukkit.entity.Ocelot'): Ocelot;
   static type (name: 'org.bukkit.entity.Ocelot.Type'): Ocelot$Type;
   static type (name: 'org.bukkit.util.noise.OctaveGenerator'): OctaveGenerator;
   static type (name: 'org.bukkit.OfflinePlayer'): OfflinePlayer;
   static type (name: 'org.bukkit.block.data.Openable'): Openable;
   static type (name: 'org.bukkit.material.Openable'): Openable;
   static type (name: 'org.bukkit.block.data.Orientable'): Orientable;
   static type (name: 'org.bukkit.entity.Painting'): Painting;
   static type (name: 'org.bukkit.entity.Panda'): Panda;
   static type (name: 'org.bukkit.entity.Panda.Gene'): Panda$Gene;
   static type (name: 'com.destroystokyo.paper.utils.PaperPluginLogger'): PaperPluginLogger;
   static type (name: 'com.destroystokyo.paper.event.server.PaperServerListPingEvent'): PaperServerListPingEvent;
   static type (name: 'org.bukkit.entity.Parrot'): Parrot;
   static type (name: 'org.bukkit.entity.Parrot.Variant'): Parrot$Variant;
   static type (name: 'org.bukkit.Particle'): Particle;
   static type (name: 'org.bukkit.Particle.DustOptions'): Particle$DustOptions;
   static type (name: 'com.destroystokyo.paper.ParticleBuilder'): ParticleBuilder;
   static type (name: 'com.destroystokyo.paper.entity.Pathfinder'): Pathfinder;
   static type (name: 'com.destroystokyo.paper.entity.Pathfinder.PathResult'): Pathfinder$PathResult;
   static type (name: 'org.bukkit.block.banner.Pattern'): Pattern;
   static type (name: 'org.bukkit.block.banner.PatternType'): PatternType;
   static type (name: 'org.bukkit.util.noise.PerlinNoiseGenerator'): PerlinNoiseGenerator;
   static type (name: 'org.bukkit.util.noise.PerlinOctaveGenerator'): PerlinOctaveGenerator;
   static type (name: 'org.bukkit.permissions.Permissible'): Permissible;
   static type (name: 'org.bukkit.permissions.PermissibleBase'): PermissibleBase;
   static type (name: 'org.bukkit.permissions.Permission'): Permission;
   static type (name: 'org.bukkit.permissions.PermissionAttachment'): PermissionAttachment;
   static type (name: 'org.bukkit.permissions.PermissionAttachmentInfo'): PermissionAttachmentInfo;
   static type (name: 'org.bukkit.permissions.PermissionDefault'): PermissionDefault;
   static type (name: 'org.bukkit.permissions.PermissionRemovedExecutor'): PermissionRemovedExecutor;
   static type (name: 'org.bukkit.persistence.PersistentDataAdapterContext'): PersistentDataAdapterContext;
   static type (name: 'org.bukkit.persistence.PersistentDataContainer'): PersistentDataContainer;
   static type (name: 'org.bukkit.persistence.PersistentDataHolder'): PersistentDataHolder;
   static type (name: 'org.bukkit.persistence.PersistentDataType'): PersistentDataType;
   static type (
      name: 'org.bukkit.persistence.PersistentDataType.PrimitivePersistentDataType'
   ): PersistentDataType$PrimitivePersistentDataType;
   static type (name: 'org.bukkit.entity.Phantom'): Phantom;
   static type (name: 'com.destroystokyo.paper.event.entity.PhantomPreSpawnEvent'): PhantomPreSpawnEvent;
   static type (name: 'org.bukkit.entity.Pig'): Pig;
   static type (name: 'org.bukkit.entity.Piglin'): Piglin;
   static type (name: 'org.bukkit.event.entity.PigZapEvent'): PigZapEvent;
   static type (name: 'org.bukkit.entity.PigZombie'): PigZombie;
   static type (name: 'org.bukkit.event.entity.PigZombieAngerEvent'): PigZombieAngerEvent;
   static type (name: 'org.bukkit.entity.Pillager'): Pillager;
   static type (name: 'org.bukkit.block.data.type.Piston'): Piston;
   static type (name: 'org.bukkit.material.PistonBaseMaterial'): PistonBaseMaterial;
   static type (name: 'org.bukkit.material.PistonExtensionMaterial'): PistonExtensionMaterial;
   static type (name: 'org.bukkit.block.data.type.PistonHead'): PistonHead;
   static type (name: 'org.bukkit.block.PistonMoveReaction'): PistonMoveReaction;
   static type (name: 'org.bukkit.entity.Player'): Player;
   static type (name: 'org.bukkit.entity.Player.Spigot'): Player$Spigot;
   static type (
      name: 'com.destroystokyo.paper.event.player.PlayerAdvancementCriterionGrantEvent'
   ): PlayerAdvancementCriterionGrantEvent;
   static type (name: 'org.bukkit.event.player.PlayerAdvancementDoneEvent'): PlayerAdvancementDoneEvent;
   static type (name: 'org.bukkit.event.player.PlayerAnimationEvent'): PlayerAnimationEvent;
   static type (name: 'org.bukkit.event.player.PlayerAnimationType'): PlayerAnimationType;
   static type (name: 'com.destroystokyo.paper.event.player.PlayerArmorChangeEvent'): PlayerArmorChangeEvent;
   static type (
      name: 'com.destroystokyo.paper.event.player.PlayerArmorChangeEvent.SlotType'
   ): PlayerArmorChangeEvent$SlotType;
   static type (name: 'org.bukkit.event.player.PlayerArmorStandManipulateEvent'): PlayerArmorStandManipulateEvent;
   static type (
      name: 'com.destroystokyo.paper.event.player.PlayerAttackEntityCooldownResetEvent'
   ): PlayerAttackEntityCooldownResetEvent;
   static type (name: 'org.bukkit.event.player.PlayerAttemptPickupItemEvent'): PlayerAttemptPickupItemEvent;
   static type (name: 'org.bukkit.event.player.PlayerBedEnterEvent'): PlayerBedEnterEvent;
   static type (name: 'org.bukkit.event.player.PlayerBedEnterEvent.BedEnterResult'): PlayerBedEnterEvent$BedEnterResult;
   static type (name: 'org.bukkit.event.player.PlayerBedLeaveEvent'): PlayerBedLeaveEvent;
   static type (name: 'org.bukkit.event.player.PlayerBucketEmptyEvent'): PlayerBucketEmptyEvent;
   static type (name: 'org.bukkit.event.player.PlayerBucketEvent'): PlayerBucketEvent;
   static type (name: 'org.bukkit.event.player.PlayerBucketFillEvent'): PlayerBucketFillEvent;
   static type (name: 'org.bukkit.event.player.PlayerChangedMainHandEvent'): PlayerChangedMainHandEvent;
   static type (name: 'org.bukkit.event.player.PlayerChangedWorldEvent'): PlayerChangedWorldEvent;
   static type (name: 'org.bukkit.event.player.PlayerChannelEvent'): PlayerChannelEvent;
   static type (name: 'org.bukkit.event.player.PlayerChatEvent'): PlayerChatEvent;
   static type (name: 'org.bukkit.event.player.PlayerChatTabCompleteEvent'): PlayerChatTabCompleteEvent;
   static type (
      name: 'com.destroystokyo.paper.event.player.PlayerClientOptionsChangeEvent'
   ): PlayerClientOptionsChangeEvent;
   static type (name: 'org.bukkit.event.player.PlayerCommandPreprocessEvent'): PlayerCommandPreprocessEvent;
   static type (name: 'org.bukkit.event.player.PlayerCommandSendEvent'): PlayerCommandSendEvent;
   static type (name: 'com.destroystokyo.paper.event.player.PlayerConnectionCloseEvent'): PlayerConnectionCloseEvent;
   static type (name: 'org.bukkit.event.entity.PlayerDeathEvent'): PlayerDeathEvent;
   static type (name: 'org.bukkit.event.player.PlayerDropItemEvent'): PlayerDropItemEvent;
   static type (name: 'org.bukkit.event.player.PlayerEditBookEvent'): PlayerEditBookEvent;
   static type (name: 'org.bukkit.event.player.PlayerEggThrowEvent'): PlayerEggThrowEvent;
   static type (name: 'com.destroystokyo.paper.event.player.PlayerElytraBoostEvent'): PlayerElytraBoostEvent;
   static type (name: 'org.bukkit.event.player.PlayerEvent'): PlayerEvent;
   static type (name: 'org.bukkit.event.player.PlayerExpChangeEvent'): PlayerExpChangeEvent;
   static type (name: 'org.bukkit.event.player.PlayerFishEvent'): PlayerFishEvent;
   static type (name: 'org.bukkit.event.player.PlayerFishEvent.State'): PlayerFishEvent$State;
   static type (name: 'org.bukkit.event.player.PlayerGameModeChangeEvent'): PlayerGameModeChangeEvent;
   static type (name: 'com.destroystokyo.paper.event.player.PlayerHandshakeEvent'): PlayerHandshakeEvent;
   static type (name: 'org.bukkit.event.player.PlayerHarvestBlockEvent'): PlayerHarvestBlockEvent;
   static type (name: 'com.destroystokyo.paper.event.player.PlayerInitialSpawnEvent'): PlayerInitialSpawnEvent;
   static type (name: 'org.bukkit.event.player.PlayerInteractAtEntityEvent'): PlayerInteractAtEntityEvent;
   static type (name: 'org.bukkit.event.player.PlayerInteractEntityEvent'): PlayerInteractEntityEvent;
   static type (name: 'org.bukkit.event.player.PlayerInteractEvent'): PlayerInteractEvent;
   static type (name: 'org.bukkit.inventory.PlayerInventory'): PlayerInventory;
   static type (name: 'org.bukkit.event.player.PlayerItemBreakEvent'): PlayerItemBreakEvent;
   static type (name: 'org.bukkit.event.player.PlayerItemConsumeEvent'): PlayerItemConsumeEvent;
   static type (name: 'org.bukkit.event.player.PlayerItemDamageEvent'): PlayerItemDamageEvent;
   static type (name: 'org.bukkit.event.player.PlayerItemHeldEvent'): PlayerItemHeldEvent;
   static type (name: 'org.bukkit.event.player.PlayerItemMendEvent'): PlayerItemMendEvent;
   static type (name: 'org.bukkit.event.player.PlayerJoinEvent'): PlayerJoinEvent;
   static type (name: 'com.destroystokyo.paper.event.player.PlayerJumpEvent'): PlayerJumpEvent;
   static type (name: 'org.bukkit.event.player.PlayerKickEvent'): PlayerKickEvent;
   static type (name: 'com.destroystokyo.paper.event.player.PlayerLaunchProjectileEvent'): PlayerLaunchProjectileEvent;
   static type (name: 'org.bukkit.event.entity.PlayerLeashEntityEvent'): PlayerLeashEntityEvent;
   static type (name: 'org.bukkit.event.player.PlayerLevelChangeEvent'): PlayerLevelChangeEvent;
   static type (name: 'com.destroystokyo.paper.event.player.PlayerLocaleChangeEvent'): PlayerLocaleChangeEvent;
   static type (name: 'org.bukkit.event.player.PlayerLocaleChangeEvent'): PlayerLocaleChangeEvent;
   static type (name: 'org.bukkit.event.player.PlayerLoginEvent'): PlayerLoginEvent;
   static type (name: 'org.bukkit.event.player.PlayerLoginEvent.Result'): PlayerLoginEvent$Result;
   static type (name: 'org.bukkit.event.player.PlayerMoveEvent'): PlayerMoveEvent;
   static type (name: 'org.bukkit.conversations.PlayerNamePrompt'): PlayerNamePrompt;
   static type (
      name: 'com.destroystokyo.paper.event.entity.PlayerNaturallySpawnCreaturesEvent'
   ): PlayerNaturallySpawnCreaturesEvent;
   static type (name: 'org.bukkit.event.player.PlayerPickupArrowEvent'): PlayerPickupArrowEvent;
   static type (name: 'com.destroystokyo.paper.event.player.PlayerPickupExperienceEvent'): PlayerPickupExperienceEvent;
   static type (name: 'org.bukkit.event.player.PlayerPickupItemEvent'): PlayerPickupItemEvent;
   static type (name: 'org.bukkit.event.player.PlayerPortalEvent'): PlayerPortalEvent;
   static type (name: 'com.destroystokyo.paper.event.player.PlayerPostRespawnEvent'): PlayerPostRespawnEvent;
   static type (name: 'org.bukkit.event.player.PlayerPreLoginEvent'): PlayerPreLoginEvent;
   static type (name: 'org.bukkit.event.player.PlayerPreLoginEvent.Result'): PlayerPreLoginEvent$Result;
   static type (name: 'com.destroystokyo.paper.profile.PlayerProfile'): PlayerProfile;
   static type (name: 'org.bukkit.event.player.PlayerQuitEvent'): PlayerQuitEvent;
   static type (name: 'com.destroystokyo.paper.event.player.PlayerReadyArrowEvent'): PlayerReadyArrowEvent;
   static type (name: 'com.destroystokyo.paper.event.player.PlayerRecipeBookClickEvent'): PlayerRecipeBookClickEvent;
   static type (name: 'org.bukkit.event.player.PlayerRecipeDiscoverEvent'): PlayerRecipeDiscoverEvent;
   static type (name: 'org.bukkit.event.player.PlayerRegisterChannelEvent'): PlayerRegisterChannelEvent;
   static type (name: 'org.bukkit.event.player.PlayerResourcePackStatusEvent'): PlayerResourcePackStatusEvent;
   static type (
      name: 'org.bukkit.event.player.PlayerResourcePackStatusEvent.Status'
   ): PlayerResourcePackStatusEvent$Status;
   static type (name: 'org.bukkit.event.player.PlayerRespawnEvent'): PlayerRespawnEvent;
   static type (name: 'org.bukkit.event.player.PlayerRiptideEvent'): PlayerRiptideEvent;
   static type (name: 'org.bukkit.event.player.PlayerShearEntityEvent'): PlayerShearEntityEvent;
   static type (name: 'org.spigotmc.event.player.PlayerSpawnLocationEvent'): PlayerSpawnLocationEvent;
   static type (
      name: 'com.destroystokyo.paper.event.player.PlayerStartSpectatingEntityEvent'
   ): PlayerStartSpectatingEntityEvent;
   static type (name: 'org.bukkit.event.player.PlayerStatisticIncrementEvent'): PlayerStatisticIncrementEvent;
   static type (
      name: 'com.destroystokyo.paper.event.player.PlayerStopSpectatingEntityEvent'
   ): PlayerStopSpectatingEntityEvent;
   static type (name: 'org.bukkit.event.player.PlayerSwapHandItemsEvent'): PlayerSwapHandItemsEvent;
   static type (name: 'org.bukkit.event.player.PlayerTakeLecternBookEvent'): PlayerTakeLecternBookEvent;
   static type (
      name: 'com.destroystokyo.paper.event.player.PlayerTeleportEndGatewayEvent'
   ): PlayerTeleportEndGatewayEvent;
   static type (name: 'org.bukkit.event.player.PlayerTeleportEvent'): PlayerTeleportEvent;
   static type (name: 'org.bukkit.event.player.PlayerTeleportEvent.TeleportCause'): PlayerTeleportEvent$TeleportCause;
   static type (name: 'org.bukkit.event.player.PlayerToggleFlightEvent'): PlayerToggleFlightEvent;
   static type (name: 'org.bukkit.event.player.PlayerToggleSneakEvent'): PlayerToggleSneakEvent;
   static type (name: 'org.bukkit.event.player.PlayerToggleSprintEvent'): PlayerToggleSprintEvent;
   static type (name: 'org.bukkit.event.player.PlayerUnleashEntityEvent'): PlayerUnleashEntityEvent;
   static type (name: 'org.bukkit.event.player.PlayerUnregisterChannelEvent'): PlayerUnregisterChannelEvent;
   static type (name: 'com.destroystokyo.paper.event.player.PlayerUseUnknownEntityEvent'): PlayerUseUnknownEntityEvent;
   static type (name: 'org.bukkit.event.player.PlayerVelocityEvent'): PlayerVelocityEvent;
   static type (name: 'org.bukkit.plugin.Plugin'): Plugin;
   static type (name: 'org.bukkit.plugin.PluginAwareness'): PluginAwareness;
   static type (name: 'org.bukkit.plugin.PluginAwareness.Flags'): PluginAwareness$Flags;
   static type (name: 'org.bukkit.plugin.PluginBase'): PluginBase;
   static type (name: 'org.bukkit.plugin.messaging.PluginChannelDirection'): PluginChannelDirection;
   static type (name: 'org.bukkit.plugin.java.PluginClassLoader'): PluginClassLoader;
   static type (name: 'org.bukkit.command.PluginCommand'): PluginCommand;
   static type (name: 'org.bukkit.command.PluginCommandYamlParser'): PluginCommandYamlParser;
   static type (name: 'org.bukkit.plugin.PluginDescriptionFile'): PluginDescriptionFile;
   static type (name: 'org.bukkit.event.server.PluginDisableEvent'): PluginDisableEvent;
   static type (name: 'org.bukkit.event.server.PluginEnableEvent'): PluginEnableEvent;
   static type (name: 'org.bukkit.event.server.PluginEvent'): PluginEvent;
   static type (name: 'org.bukkit.command.PluginIdentifiableCommand'): PluginIdentifiableCommand;
   static type (name: 'org.bukkit.plugin.PluginLoader'): PluginLoader;
   static type (name: 'org.bukkit.plugin.PluginLoadOrder'): PluginLoadOrder;
   static type (name: 'org.bukkit.plugin.PluginLogger'): PluginLogger;
   static type (name: 'org.bukkit.plugin.PluginManager'): PluginManager;
   static type (name: 'org.bukkit.plugin.messaging.PluginMessageListener'): PluginMessageListener;
   static type (
      name: 'org.bukkit.plugin.messaging.PluginMessageListenerRegistration'
   ): PluginMessageListenerRegistration;
   static type (name: 'org.bukkit.plugin.messaging.PluginMessageRecipient'): PluginMessageRecipient;
   static type (name: 'org.bukkit.conversations.PluginNameConversationPrefix'): PluginNameConversationPrefix;
   static type (name: 'org.bukkit.command.defaults.PluginsCommand'): PluginsCommand;
   static type (name: 'org.bukkit.entity.PolarBear'): PolarBear;
   static type (name: 'org.bukkit.event.world.PortalCreateEvent'): PortalCreateEvent;
   static type (name: 'org.bukkit.event.world.PortalCreateEvent.CreateReason'): PortalCreateEvent$CreateReason;
   static type (name: 'org.bukkit.PortalType'): PortalType;
   static type (name: 'org.bukkit.entity.Pose'): Pose;
   static type (name: 'org.bukkit.potion.Potion'): Potion;
   static type (name: 'org.bukkit.potion.PotionBrewer'): PotionBrewer;
   static type (name: 'org.bukkit.potion.PotionData'): PotionData;
   static type (name: 'org.bukkit.potion.PotionEffect'): PotionEffect;
   static type (name: 'org.bukkit.potion.PotionEffectType'): PotionEffectType;
   static type (name: 'org.bukkit.potion.PotionEffectTypeWrapper'): PotionEffectTypeWrapper;
   static type (name: 'org.bukkit.inventory.meta.PotionMeta'): PotionMeta;
   static type (name: 'org.bukkit.event.entity.PotionSplashEvent'): PotionSplashEvent;
   static type (name: 'org.bukkit.potion.PotionType'): PotionType;
   static type (name: 'org.bukkit.block.data.Powerable'): Powerable;
   static type (name: 'org.bukkit.entity.minecart.PoweredMinecart'): PoweredMinecart;
   static type (name: 'org.bukkit.material.PoweredRail'): PoweredRail;
   static type (name: 'com.destroystokyo.paper.event.entity.PreCreatureSpawnEvent'): PreCreatureSpawnEvent;
   static type (name: 'com.destroystokyo.paper.event.profile.PreFillProfileEvent'): PreFillProfileEvent;
   static type (name: 'com.destroystokyo.paper.event.profile.PreLookupProfileEvent'): PreLookupProfileEvent;
   static type (name: 'org.bukkit.event.inventory.PrepareAnvilEvent'): PrepareAnvilEvent;
   static type (name: 'com.destroystokyo.paper.event.inventory.PrepareGrindstoneEvent'): PrepareGrindstoneEvent;
   static type (name: 'org.bukkit.event.inventory.PrepareItemCraftEvent'): PrepareItemCraftEvent;
   static type (name: 'org.bukkit.event.enchantment.PrepareItemEnchantEvent'): PrepareItemEnchantEvent;
   static type (name: 'com.destroystokyo.paper.event.inventory.PrepareResultEvent'): PrepareResultEvent;
   static type (name: 'org.bukkit.event.inventory.PrepareSmithingEvent'): PrepareSmithingEvent;
   static type (name: 'com.destroystokyo.paper.event.entity.PreSpawnerSpawnEvent'): PreSpawnerSpawnEvent;
   static type (name: 'org.bukkit.material.PressurePlate'): PressurePlate;
   static type (name: 'org.bukkit.material.PressureSensor'): PressureSensor;
   static type (name: 'com.destroystokyo.paper.profile.ProfileProperty'): ProfileProperty;
   static type (name: 'com.destroystokyo.paper.event.profile.ProfileWhitelistVerifyEvent'): ProfileWhitelistVerifyEvent;
   static type (name: 'org.bukkit.entity.Projectile'): Projectile;
   static type (name: 'com.destroystokyo.paper.event.entity.ProjectileCollideEvent'): ProjectileCollideEvent;
   static type (name: 'org.bukkit.event.entity.ProjectileHitEvent'): ProjectileHitEvent;
   static type (name: 'org.bukkit.event.entity.ProjectileLaunchEvent'): ProjectileLaunchEvent;
   static type (name: 'org.bukkit.projectiles.ProjectileSource'): ProjectileSource;
   static type (name: 'org.bukkit.conversations.Prompt'): Prompt;
   static type (name: 'org.bukkit.command.ProxiedCommandSender'): ProxiedCommandSender;
   static type (name: 'org.bukkit.entity.PufferFish'): PufferFish;
   static type (name: 'org.bukkit.material.Pumpkin'): Pumpkin;
   static type (name: 'org.bukkit.entity.Rabbit'): Rabbit;
   static type (name: 'org.bukkit.entity.Rabbit.Type'): Rabbit$Type;
   static type (name: 'org.bukkit.Raid'): Raid;
   static type (name: 'org.bukkit.Raid.RaidStatus'): Raid$RaidStatus;
   static type (name: 'org.bukkit.entity.Raider'): Raider;
   static type (name: 'org.bukkit.event.raid.RaidEvent'): RaidEvent;
   static type (name: 'org.bukkit.event.raid.RaidFinishEvent'): RaidFinishEvent;
   static type (name: 'org.bukkit.event.raid.RaidSpawnWaveEvent'): RaidSpawnWaveEvent;
   static type (name: 'org.bukkit.event.raid.RaidStopEvent'): RaidStopEvent;
   static type (name: 'org.bukkit.event.raid.RaidStopEvent.Reason'): RaidStopEvent$Reason;
   static type (name: 'org.bukkit.event.raid.RaidTriggerEvent'): RaidTriggerEvent;
   static type (name: 'org.bukkit.block.data.Rail'): Rail;
   static type (name: 'org.bukkit.block.data.Rail.Shape'): Rail$Shape;
   static type (name: 'org.bukkit.material.Rails'): Rails;
   static type (name: 'com.destroystokyo.paper.entity.RangedEntity'): RangedEntity;
   static type (name: 'org.bukkit.entity.Ravager'): Ravager;
   static type (name: 'org.bukkit.util.RayTraceResult'): RayTraceResult;
   static type (name: 'org.bukkit.inventory.Recipe'): Recipe;
   static type (name: 'org.bukkit.inventory.RecipeChoice'): RecipeChoice;
   static type (name: 'org.bukkit.inventory.RecipeChoice.ExactChoice'): RecipeChoice$ExactChoice;
   static type (name: 'org.bukkit.inventory.RecipeChoice.MaterialChoice'): RecipeChoice$MaterialChoice;
   static type (name: 'org.bukkit.material.Redstone'): Redstone;
   static type (name: 'org.bukkit.block.data.type.RedstoneRail'): RedstoneRail;
   static type (name: 'org.bukkit.material.RedstoneTorch'): RedstoneTorch;
   static type (name: 'org.bukkit.block.data.type.RedstoneWallTorch'): RedstoneWallTorch;
   static type (name: 'org.bukkit.block.data.type.RedstoneWire'): RedstoneWire;
   static type (name: 'org.bukkit.material.RedstoneWire'): RedstoneWire;
   static type (name: 'org.bukkit.block.data.type.RedstoneWire.Connection'): RedstoneWire$Connection;
   static type (name: 'org.bukkit.conversations.RegexPrompt'): RegexPrompt;
   static type (name: 'org.bukkit.plugin.RegisteredListener'): RegisteredListener;
   static type (name: 'org.bukkit.plugin.RegisteredServiceProvider'): RegisteredServiceProvider;
   static type (name: 'org.bukkit.Registry'): Registry;
   static type (name: 'org.bukkit.Registry.SimpleRegistry'): Registry$SimpleRegistry;
   static type (name: 'org.bukkit.command.defaults.ReloadCommand'): ReloadCommand;
   static type (name: 'org.bukkit.command.RemoteConsoleCommandSender'): RemoteConsoleCommandSender;
   static type (name: 'org.bukkit.event.server.RemoteServerCommandEvent'): RemoteServerCommandEvent;
   static type (name: 'org.bukkit.scoreboard.RenderType'): RenderType;
   static type (name: 'org.bukkit.inventory.meta.Repairable'): Repairable;
   static type (name: 'org.bukkit.block.data.type.Repeater'): Repeater;
   static type (name: 'com.destroystokyo.paper.entity.villager.Reputation'): Reputation;
   static type (name: 'com.destroystokyo.paper.entity.villager.ReputationType'): ReputationType;
   static type (name: 'org.bukkit.plugin.messaging.ReservedChannelException'): ReservedChannelException;
   static type (name: 'org.bukkit.block.data.type.RespawnAnchor'): RespawnAnchor;
   static type (name: 'org.bukkit.entity.minecart.RideableMinecart'): RideableMinecart;
   static type (name: 'org.bukkit.block.data.Rotatable'): Rotatable;
   static type (name: 'org.bukkit.Rotation'): Rotation;
   static type (name: 'org.bukkit.inventory.SaddledHorseInventory'): SaddledHorseInventory;
   static type (name: 'com.destroystokyo.paper.event.executor.asm.SafeClassDefiner'): SafeClassDefiner;
   static type (name: 'org.bukkit.entity.Salmon'): Salmon;
   static type (name: 'org.bukkit.material.Sandstone'): Sandstone;
   static type (name: 'org.bukkit.SandstoneType'): SandstoneType;
   static type (name: 'org.bukkit.block.data.type.Sapling'): Sapling;
   static type (name: 'org.bukkit.material.Sapling'): Sapling;
   static type (name: 'org.bukkit.block.data.type.Scaffolding'): Scaffolding;
   static type (name: 'org.bukkit.scoreboard.Score'): Score;
   static type (name: 'org.bukkit.scoreboard.Scoreboard'): Scoreboard;
   static type (name: 'org.bukkit.scoreboard.ScoreboardManager'): ScoreboardManager;
   static type (name: 'org.bukkit.block.data.type.SeaPickle'): SeaPickle;
   static type (name: 'org.bukkit.configuration.serialization.SerializableAs'): SerializableAs;
   static type (name: 'org.bukkit.Server'): Server;
   static type (name: 'org.bukkit.Server.Spigot'): Server$Spigot;
   static type (name: 'org.bukkit.event.server.ServerCommandEvent'): ServerCommandEvent;
   static type (name: 'com.destroystokyo.paper.exception.ServerCommandException'): ServerCommandException;
   static type (name: 'org.bukkit.event.server.ServerEvent'): ServerEvent;
   static type (name: 'com.destroystokyo.paper.exception.ServerEventException'): ServerEventException;
   static type (name: 'com.destroystokyo.paper.exception.ServerException'): ServerException;
   static type (name: 'com.destroystokyo.paper.event.server.ServerExceptionEvent'): ServerExceptionEvent;
   static type (name: 'com.destroystokyo.paper.exception.ServerInternalException'): ServerInternalException;
   static type (name: 'org.bukkit.event.server.ServerListPingEvent'): ServerListPingEvent;
   static type (name: 'org.bukkit.event.server.ServerLoadEvent'): ServerLoadEvent;
   static type (name: 'org.bukkit.event.server.ServerLoadEvent.LoadType'): ServerLoadEvent$LoadType;
   static type (name: 'org.bukkit.permissions.ServerOperator'): ServerOperator;
   static type (
      name: 'com.destroystokyo.paper.exception.ServerPluginEnableDisableException'
   ): ServerPluginEnableDisableException;
   static type (name: 'com.destroystokyo.paper.exception.ServerPluginException'): ServerPluginException;
   static type (name: 'com.destroystokyo.paper.exception.ServerPluginMessageException'): ServerPluginMessageException;
   static type (name: 'com.destroystokyo.paper.exception.ServerSchedulerException'): ServerSchedulerException;
   static type (name: 'com.destroystokyo.paper.exception.ServerTabCompleteException'): ServerTabCompleteException;
   static type (name: 'com.destroystokyo.paper.event.server.ServerTickEndEvent'): ServerTickEndEvent;
   static type (name: 'com.destroystokyo.paper.event.server.ServerTickStartEvent'): ServerTickStartEvent;
   static type (name: 'org.bukkit.event.server.ServiceEvent'): ServiceEvent;
   static type (name: 'org.bukkit.plugin.ServicePriority'): ServicePriority;
   static type (name: 'org.bukkit.event.server.ServiceRegisterEvent'): ServiceRegisterEvent;
   static type (name: 'org.bukkit.plugin.ServicesManager'): ServicesManager;
   static type (name: 'org.bukkit.event.server.ServiceUnregisterEvent'): ServiceUnregisterEvent;
   static type (name: 'org.bukkit.inventory.ShapedRecipe'): ShapedRecipe;
   static type (name: 'org.bukkit.inventory.ShapelessRecipe'): ShapelessRecipe;
   static type (name: 'org.bukkit.entity.Sheep'): Sheep;
   static type (name: 'org.bukkit.event.entity.SheepDyeWoolEvent'): SheepDyeWoolEvent;
   static type (name: 'org.bukkit.event.entity.SheepRegrowWoolEvent'): SheepRegrowWoolEvent;
   static type (name: 'org.bukkit.entity.Shulker'): Shulker;
   static type (name: 'org.bukkit.block.ShulkerBox'): ShulkerBox;
   static type (name: 'org.bukkit.entity.ShulkerBullet'): ShulkerBullet;
   static type (name: 'org.bukkit.block.data.type.Sign'): Sign;
   static type (name: 'org.bukkit.block.Sign'): Sign;
   static type (name: 'org.bukkit.material.Sign'): Sign;
   static type (name: 'org.bukkit.event.block.SignChangeEvent'): SignChangeEvent;
   static type (name: 'org.bukkit.entity.Silverfish'): Silverfish;
   static type (name: 'org.bukkit.material.SimpleAttachableMaterialData'): SimpleAttachableMaterialData;
   static type (name: 'org.bukkit.command.SimpleCommandMap'): SimpleCommandMap;
   static type (name: 'org.bukkit.plugin.SimplePluginManager'): SimplePluginManager;
   static type (name: 'org.bukkit.plugin.SimpleServicesManager'): SimpleServicesManager;
   static type (name: 'org.bukkit.util.noise.SimplexNoiseGenerator'): SimplexNoiseGenerator;
   static type (name: 'org.bukkit.util.noise.SimplexOctaveGenerator'): SimplexOctaveGenerator;
   static type (name: 'org.bukkit.entity.Sittable'): Sittable;
   static type (name: 'org.bukkit.entity.SizedFireball'): SizedFireball;
   static type (name: 'org.bukkit.entity.Skeleton'): Skeleton;
   static type (name: 'org.bukkit.entity.Skeleton.SkeletonType'): Skeleton$SkeletonType;
   static type (name: 'org.bukkit.entity.SkeletonHorse'): SkeletonHorse;
   static type (name: 'com.destroystokyo.paper.event.entity.SkeletonHorseTrapEvent'): SkeletonHorseTrapEvent;
   static type (name: 'com.destroystokyo.paper.SkinParts'): SkinParts;
   static type (name: 'org.bukkit.block.Skull'): Skull;
   static type (name: 'org.bukkit.material.Skull'): Skull;
   static type (name: 'org.bukkit.inventory.meta.SkullMeta'): SkullMeta;
   static type (name: 'org.bukkit.SkullType'): SkullType;
   static type (name: 'org.bukkit.block.data.type.Slab'): Slab;
   static type (name: 'org.bukkit.block.data.type.Slab.Type'): Slab$Type;
   static type (name: 'org.bukkit.entity.Slime'): Slime;
   static type (name: 'com.destroystokyo.paper.event.entity.SlimeChangeDirectionEvent'): SlimeChangeDirectionEvent;
   static type (name: 'com.destroystokyo.paper.event.entity.SlimePathfindEvent'): SlimePathfindEvent;
   static type (name: 'org.bukkit.event.entity.SlimeSplitEvent'): SlimeSplitEvent;
   static type (name: 'com.destroystokyo.paper.event.entity.SlimeSwimEvent'): SlimeSwimEvent;
   static type (
      name: 'com.destroystokyo.paper.event.entity.SlimeTargetLivingEntityEvent'
   ): SlimeTargetLivingEntityEvent;
   static type (name: 'com.destroystokyo.paper.event.entity.SlimeWanderEvent'): SlimeWanderEvent;
   static type (name: 'org.bukkit.entity.SmallFireball'): SmallFireball;
   static type (name: 'org.bukkit.inventory.SmithingInventory'): SmithingInventory;
   static type (name: 'org.bukkit.inventory.SmithingRecipe'): SmithingRecipe;
   static type (name: 'org.bukkit.block.Smoker'): Smoker;
   static type (name: 'org.bukkit.inventory.SmokingRecipe'): SmokingRecipe;
   static type (name: 'org.bukkit.material.SmoothBrick'): SmoothBrick;
   static type (name: 'com.destroystokyo.paper.util.SneakyThrow'): SneakyThrow;
   static type (name: 'org.bukkit.block.data.type.Snow'): Snow;
   static type (name: 'org.bukkit.block.data.Snowable'): Snowable;
   static type (name: 'org.bukkit.entity.Snowball'): Snowball;
   static type (name: 'org.bukkit.entity.Snowman'): Snowman;
   static type (name: 'org.bukkit.Sound'): Sound;
   static type (name: 'org.bukkit.SoundCategory'): SoundCategory;
   static type (name: 'org.bukkit.event.world.SpawnChangeEvent'): SpawnChangeEvent;
   static type (name: 'org.bukkit.material.SpawnEgg'): SpawnEgg;
   static type (name: 'org.bukkit.inventory.meta.SpawnEggMeta'): SpawnEggMeta;
   static type (name: 'org.bukkit.entity.minecart.SpawnerMinecart'): SpawnerMinecart;
   static type (name: 'org.bukkit.event.entity.SpawnerSpawnEvent'): SpawnerSpawnEvent;
   static type (name: 'org.bukkit.entity.SpectralArrow'): SpectralArrow;
   static type (name: 'org.bukkit.entity.Spellcaster'): Spellcaster;
   static type (name: 'org.bukkit.entity.Spellcaster.Spell'): Spellcaster$Spell;
   static type (name: 'org.bukkit.entity.Spider'): Spider;
   static type (name: 'org.bukkit.entity.SplashPotion'): SplashPotion;
   static type (name: 'org.bukkit.event.block.SpongeAbsorbEvent'): SpongeAbsorbEvent;
   static type (name: 'org.bukkit.entity.Squid'): Squid;
   static type (name: 'org.bukkit.block.data.type.Stairs'): Stairs;
   static type (name: 'org.bukkit.material.Stairs'): Stairs;
   static type (name: 'org.bukkit.block.data.type.Stairs.Shape'): Stairs$Shape;
   static type (name: 'org.bukkit.plugin.messaging.StandardMessenger'): StandardMessenger;
   static type (
      name: 'com.destroystokyo.paper.event.executor.StaticMethodHandleEventExecutor'
   ): StaticMethodHandleEventExecutor;
   static type (name: 'org.bukkit.Statistic'): Statistic;
   static type (name: 'org.bukkit.Statistic.Type'): Statistic$Type;
   static type (name: 'com.destroystokyo.paper.network.StatusClient'): StatusClient;
   static type (name: 'org.bukkit.entity.Steerable'): Steerable;
   static type (name: 'org.bukkit.material.Step'): Step;
   static type (name: 'org.bukkit.inventory.StonecutterInventory'): StonecutterInventory;
   static type (name: 'org.bukkit.inventory.StonecuttingRecipe'): StonecuttingRecipe;
   static type (name: 'org.bukkit.entity.minecart.StorageMinecart'): StorageMinecart;
   static type (name: 'org.bukkit.entity.Stray'): Stray;
   static type (name: 'org.bukkit.entity.Strider'): Strider;
   static type (name: 'org.bukkit.event.entity.StriderTemperatureChangeEvent'): StriderTemperatureChangeEvent;
   static type (name: 'org.bukkit.conversations.StringPrompt'): StringPrompt;
   static type (name: 'org.bukkit.util.StringUtil'): StringUtil;
   static type (name: 'org.bukkit.block.Structure'): Structure;
   static type (name: 'org.bukkit.block.data.type.StructureBlock'): StructureBlock;
   static type (name: 'org.bukkit.block.data.type.StructureBlock.Mode'): StructureBlock$Mode;
   static type (name: 'org.bukkit.event.world.StructureGrowEvent'): StructureGrowEvent;
   static type (name: 'org.bukkit.block.structure.StructureRotation'): StructureRotation;
   static type (name: 'org.bukkit.StructureType'): StructureType;
   static type (name: 'org.bukkit.inventory.meta.SuspiciousStewMeta'): SuspiciousStewMeta;
   static type (name: 'org.bukkit.block.data.type.Switch'): Switch;
   static type (name: 'org.bukkit.block.data.type.Switch.Face'): Switch$Face;
   static type (name: 'org.bukkit.event.server.TabCompleteEvent'): TabCompleteEvent;
   static type (name: 'org.bukkit.command.TabCompleter'): TabCompleter;
   static type (name: 'org.bukkit.command.TabExecutor'): TabExecutor;
   static type (name: 'org.bukkit.Tag'): Tag;
   static type (name: 'org.bukkit.entity.Tameable'): Tameable;
   static type (name: 'com.destroystokyo.paper.block.TargetBlockInfo'): TargetBlockInfo;
   static type (name: 'com.destroystokyo.paper.block.TargetBlockInfo.FluidMode'): TargetBlockInfo$FluidMode;
   static type (name: 'com.destroystokyo.paper.entity.TargetEntityInfo'): TargetEntityInfo;
   static type (name: 'org.bukkit.scoreboard.Team'): Team;
   static type (name: 'org.bukkit.scoreboard.Team.Option'): Team$Option;
   static type (name: 'org.bukkit.scoreboard.Team.OptionStatus'): Team$OptionStatus;
   static type (name: 'org.bukkit.block.data.type.TechnicalPiston'): TechnicalPiston;
   static type (name: 'org.bukkit.block.data.type.TechnicalPiston.Type'): TechnicalPiston$Type;
   static type (name: 'org.bukkit.material.TexturedMaterial'): TexturedMaterial;
   static type (name: 'org.bukkit.entity.ThrowableProjectile'): ThrowableProjectile;
   static type (name: 'com.destroystokyo.paper.event.entity.ThrownEggHatchEvent'): ThrownEggHatchEvent;
   static type (name: 'org.bukkit.entity.ThrownExpBottle'): ThrownExpBottle;
   static type (name: 'org.bukkit.entity.ThrownPotion'): ThrownPotion;
   static type (name: 'org.bukkit.event.weather.ThunderChangeEvent'): ThunderChangeEvent;
   static type (name: 'org.bukkit.block.TileState'): TileState;
   static type (name: 'co.aikar.timings.TimedEventExecutor'): TimedEventExecutor;
   static type (name: 'org.bukkit.plugin.TimedRegisteredListener'): TimedRegisteredListener;
   static type (name: 'org.bukkit.event.world.TimeSkipEvent'): TimeSkipEvent;
   static type (name: 'org.bukkit.event.world.TimeSkipEvent.SkipReason'): TimeSkipEvent$SkipReason;
   static type (name: 'co.aikar.timings.Timing'): Timing;
   static type (name: 'co.aikar.timings.TimingHistory'): TimingHistory;
   static type (name: 'co.aikar.timings.Timings'): Timings;
   static type (name: 'co.aikar.timings.TimingsCommand'): TimingsCommand;
   static type (name: 'co.aikar.timings.TimingsManager'): TimingsManager;
   static type (name: 'co.aikar.timings.TimingsReportListener'): TimingsReportListener;
   static type (name: 'org.bukkit.entity.TippedArrow'): TippedArrow;
   static type (name: 'com.destroystokyo.paper.Title'): Title;
   static type (name: 'com.destroystokyo.paper.Title.Builder'): Title$Builder;
   static type (name: 'org.bukkit.block.data.type.TNT'): TNT;
   static type (name: 'org.bukkit.entity.TNTPrimed'): TNTPrimed;
   static type (name: 'com.destroystokyo.paper.event.block.TNTPrimeEvent'): TNTPrimeEvent;
   static type (name: 'com.destroystokyo.paper.event.block.TNTPrimeEvent.PrimeReason'): TNTPrimeEvent$PrimeReason;
   static type (name: 'org.bukkit.material.Torch'): Torch;
   static type (name: 'org.bukkit.entity.TraderLlama'): TraderLlama;
   static type (name: 'org.bukkit.event.inventory.TradeSelectEvent'): TradeSelectEvent;
   static type (name: 'org.bukkit.block.data.type.TrapDoor'): TrapDoor;
   static type (name: 'org.bukkit.material.TrapDoor'): TrapDoor;
   static type (name: 'org.bukkit.material.Tree'): Tree;
   static type (name: 'org.bukkit.TreeSpecies'): TreeSpecies;
   static type (name: 'org.bukkit.TreeType'): TreeType;
   static type (name: 'org.bukkit.entity.Trident'): Trident;
   static type (name: 'org.bukkit.block.data.type.Tripwire'): Tripwire;
   static type (name: 'org.bukkit.material.Tripwire'): Tripwire;
   static type (name: 'org.bukkit.block.data.type.TripwireHook'): TripwireHook;
   static type (name: 'org.bukkit.material.TripwireHook'): TripwireHook;
   static type (name: 'org.bukkit.entity.TropicalFish'): TropicalFish;
   static type (name: 'org.bukkit.entity.TropicalFish.Pattern'): TropicalFish$Pattern;
   static type (name: 'org.bukkit.inventory.meta.TropicalFishBucketMeta'): TropicalFishBucketMeta;
   static type (name: 'org.bukkit.entity.Turtle'): Turtle;
   static type (name: 'org.bukkit.block.data.type.TurtleEgg'): TurtleEgg;
   static type (name: 'com.destroystokyo.paper.event.entity.TurtleGoHomeEvent'): TurtleGoHomeEvent;
   static type (name: 'com.destroystokyo.paper.event.entity.TurtleLayEggEvent'): TurtleLayEggEvent;
   static type (name: 'com.destroystokyo.paper.event.entity.TurtleStartDiggingEvent'): TurtleStartDiggingEvent;
   static type (name: 'org.bukkit.UndefinedNullability'): UndefinedNullability;
   static type (name: 'org.bukkit.event.command.UnknownCommandEvent'): UnknownCommandEvent;
   static type (name: 'org.bukkit.plugin.UnknownDependencyException'): UnknownDependencyException;
   static type (name: 'com.destroystokyo.paper.utils.UnsafeUtils'): UnsafeUtils;
   static type (name: 'org.bukkit.UnsafeValues'): UnsafeValues;
   static type (name: 'org.bukkit.block.structure.UsageMode'): UsageMode;
   static type (name: 'org.bukkit.Utility'): Utility;
   static type (name: 'org.bukkit.conversations.ValidatingPrompt'): ValidatingPrompt;
   static type (name: 'com.destroystokyo.paper.entity.ai.VanillaGoal'): VanillaGoal;
   static type (name: 'org.bukkit.util.Vector'): Vector;
   static type (name: 'org.bukkit.entity.Vehicle'): Vehicle;
   static type (name: 'org.bukkit.event.vehicle.VehicleBlockCollisionEvent'): VehicleBlockCollisionEvent;
   static type (name: 'org.bukkit.event.vehicle.VehicleCollisionEvent'): VehicleCollisionEvent;
   static type (name: 'org.bukkit.event.vehicle.VehicleCreateEvent'): VehicleCreateEvent;
   static type (name: 'org.bukkit.event.vehicle.VehicleDamageEvent'): VehicleDamageEvent;
   static type (name: 'org.bukkit.event.vehicle.VehicleDestroyEvent'): VehicleDestroyEvent;
   static type (name: 'org.bukkit.event.vehicle.VehicleEnterEvent'): VehicleEnterEvent;
   static type (name: 'org.bukkit.event.vehicle.VehicleEntityCollisionEvent'): VehicleEntityCollisionEvent;
   static type (name: 'org.bukkit.event.vehicle.VehicleEvent'): VehicleEvent;
   static type (name: 'org.bukkit.event.vehicle.VehicleExitEvent'): VehicleExitEvent;
   static type (name: 'org.bukkit.event.vehicle.VehicleMoveEvent'): VehicleMoveEvent;
   static type (name: 'org.bukkit.event.vehicle.VehicleUpdateEvent'): VehicleUpdateEvent;
   static type (name: 'org.bukkit.command.defaults.VersionCommand'): VersionCommand;
   static type (name: 'com.destroystokyo.paper.util.VersionFetcher'): VersionFetcher;
   static type (
      name: 'com.destroystokyo.paper.util.VersionFetcher.DummyVersionFetcher'
   ): VersionFetcher$DummyVersionFetcher;
   static type (name: 'org.bukkit.entity.Vex'): Vex;
   static type (name: 'org.bukkit.entity.Villager'): Villager;
   static type (name: 'org.bukkit.entity.Villager.Profession'): Villager$Profession;
   static type (name: 'org.bukkit.entity.Villager.Type'): Villager$Type;
   static type (name: 'org.bukkit.event.entity.VillagerAcquireTradeEvent'): VillagerAcquireTradeEvent;
   static type (name: 'org.bukkit.event.entity.VillagerCareerChangeEvent'): VillagerCareerChangeEvent;
   static type (
      name: 'org.bukkit.event.entity.VillagerCareerChangeEvent.ChangeReason'
   ): VillagerCareerChangeEvent$ChangeReason;
   static type (name: 'org.bukkit.event.entity.VillagerReplenishTradeEvent'): VillagerReplenishTradeEvent;
   static type (name: 'org.bukkit.entity.Vindicator'): Vindicator;
   static type (name: 'org.bukkit.material.Vine'): Vine;
   static type (name: 'org.bukkit.block.data.type.Wall'): Wall;
   static type (name: 'org.bukkit.block.data.type.Wall.Height'): Wall$Height;
   static type (name: 'org.bukkit.block.data.type.WallSign'): WallSign;
   static type (name: 'org.bukkit.entity.WanderingTrader'): WanderingTrader;
   static type (name: 'org.bukkit.Warning'): Warning;
   static type (name: 'org.bukkit.Warning.WarningState'): Warning$WarningState;
   static type (name: 'org.bukkit.block.data.Waterlogged'): Waterlogged;
   static type (name: 'org.bukkit.entity.WaterMob'): WaterMob;
   static type (name: 'org.bukkit.event.weather.WeatherChangeEvent'): WeatherChangeEvent;
   static type (name: 'org.bukkit.event.weather.WeatherEvent'): WeatherEvent;
   static type (name: 'org.bukkit.WeatherType'): WeatherType;
   static type (name: 'com.destroystokyo.paper.event.server.WhitelistToggleEvent'): WhitelistToggleEvent;
   static type (name: 'org.bukkit.entity.Witch'): Witch;
   static type (name: 'com.destroystokyo.paper.event.entity.WitchConsumePotionEvent'): WitchConsumePotionEvent;
   static type (name: 'com.destroystokyo.paper.event.entity.WitchReadyPotionEvent'): WitchReadyPotionEvent;
   static type (name: 'com.destroystokyo.paper.event.entity.WitchThrowPotionEvent'): WitchThrowPotionEvent;
   static type (name: 'org.bukkit.entity.Wither'): Wither;
   static type (name: 'org.bukkit.entity.WitherSkeleton'): WitherSkeleton;
   static type (name: 'org.bukkit.entity.WitherSkull'): WitherSkull;
   static type (name: 'org.bukkit.entity.Wolf'): Wolf;
   static type (name: 'org.bukkit.material.Wood'): Wood;
   static type (name: 'org.bukkit.material.WoodenStep'): WoodenStep;
   static type (name: 'org.bukkit.material.Wool'): Wool;
   static type (name: 'org.bukkit.World'): World;
   static type (name: 'org.bukkit.World.ChunkLoadCallback'): World$ChunkLoadCallback;
   static type (name: 'org.bukkit.World.Environment'): World$Environment;
   static type (name: 'org.bukkit.World.Spigot'): World$Spigot;
   static type (name: 'org.bukkit.WorldBorder'): WorldBorder;
   static type (name: 'org.bukkit.WorldCreator'): WorldCreator;
   static type (name: 'org.bukkit.event.world.WorldEvent'): WorldEvent;
   static type (name: 'org.bukkit.event.world.WorldInitEvent'): WorldInitEvent;
   static type (name: 'org.bukkit.event.world.WorldLoadEvent'): WorldLoadEvent;
   static type (name: 'org.bukkit.event.world.WorldSaveEvent'): WorldSaveEvent;
   static type (name: 'org.bukkit.WorldType'): WorldType;
   static type (name: 'org.bukkit.event.world.WorldUnloadEvent'): WorldUnloadEvent;
   static type (name: 'org.bukkit.configuration.file.YamlConfiguration'): YamlConfiguration;
   static type (name: 'org.bukkit.configuration.file.YamlConfigurationOptions'): YamlConfigurationOptions;
   static type (name: 'org.bukkit.configuration.file.YamlConstructor'): YamlConstructor;
   static type (name: 'org.bukkit.configuration.file.YamlRepresenter'): YamlRepresenter;
   static type (name: 'org.bukkit.entity.Zoglin'): Zoglin;
   static type (name: 'org.bukkit.entity.Zombie'): Zombie;
   static type (name: 'org.bukkit.entity.ZombieHorse'): ZombieHorse;
   static type (name: 'org.bukkit.entity.ZombieVillager'): ZombieVillager;
}
