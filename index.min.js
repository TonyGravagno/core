const µ=µ=>Polyglot.eval("js",µ);!function(){const URL=Java.type("java.net.URL"),Path=Java.type("java.nio.file.Path"),Files=Java.type("java.nio.file.Files"),Bukkit=Java.type("org.bukkit.Bukkit"),Source=Java.type("org.graalvm.polyglot.Source"),Command=Java.extend(Java.type("org.bukkit.command.Command")),Scanner=Java.type("java.util.Scanner"),Listener=Java.extend(Java.type("org.bukkit.event.Listener"),{}),FileReader=Java.type("java.io.FileReader"),FileWriter=Java.type("java.io.FileWriter"),PrintWriter=Java.type("java.io.PrintWriter"),BufferedReader=Java.type("java.io.BufferedReader"),ZipInputStream=Java.type("java.util.zip.ZipInputStream"),FileOutputStream=Java.type("java.io.FileOutputStream"),StandardCopyOption=Java.type("java.nio.file.StandardCopyOption");let ChatMessageType,EventPriority,TextComponent;const global=globalThis,server=Bukkit.getServer(),commandMap=server.getClass().getDeclaredField("commandMap");commandMap.setAccessible(!0);const registry=commandMap.get(server),core={circular:function(){},clear:io=>{io.isDirectory()&&[...io.listFiles()].forEach(core.clear),io.delete()},command:options=>{const name=options.name,input=Object.assign({prefix:"grakkit",usage:`/${name} <...args>`,description:"{ description }",execute:()=>{},tabComplete:()=>[]},options),namekey=`${input.prefix}:${name}`;core.session.commands[namekey]={execute:input.execute,tabComplete:input.tabComplete};const prefix=`(player,args)=>core.session.commands[${JSON.stringify(namekey)}]`,suffix="(player,...args.split(' '))",command=new Command(name,{execute:(player,label,args)=>{try{return eval(`${prefix}.execute${suffix}`)(player,[...args].join(" ")),!0}catch(error){return console.error(error.stack),!1}},tabComplete:(player,label,args)=>{try{return eval(`${prefix}.tabComplete${suffix}`)(player,[...args].join(" "))}catch(error){return console.error(error.stack),[]}}});command.setUsage(input.usage),command.setDescription(input.description),registry.register(input.prefix,command)},data:(path,standby)=>{const store=core.session.data,file=core.file(core.root,`data/${path}.json`);return store[path]||(store[path]=Object.assign(standby||{},JSON.parse(file.read()||"{}")))},error:error=>{let type="Error",message=`${error}`;if(error.stack)switch(type=error.stack.split("\n")[0].split(" ")[0].slice(0,-1),message=error.message,type){case"TypeError":try{if(message.startsWith("invokeMember")||message.startsWith("execute on foreign object")){const reason=message.split("failed due to: ")[1];if(reason.startsWith("no applicable overload found")){const sets=reason.split("overloads:")[1].split("]],")[0].split(")]").map(set=>`(${set.split("(").slice(1).join("(")})`);message=["Invalid arguments! Expected:§4",...sets].join("\n -> ").slice(0,-1)}else message=reason.startsWith("Arity error")?`Insufficient arguments! Expected: ${reason.split("-")[1].split(" ")[2]}`:reason.startsWith("UnsupportedTypeException")?"Invalid arguments!":reason.startsWith("Unknown identifier")?`That method (${reason.split(": ")[1]}) is not a member of its parent!`:reason.startsWith("Message not supported")?`That method (${message.slice(14).split(")")[0]}) is not a member of its parent!`:message.split("\n")[0]}}catch(error){message=message.split("\n")[0]}break;case"SyntaxError":message=message.split(" ").slice(1).join(" ").split("\n")[0]}else type=(error=`${error}`).split(" ")[0].slice(0,-1),message=error.split(" ").slice(1).join(" ");return`${type}: ${message}`},eval:(player,...args)=>{const self=global.hasOwnProperty("self");try{let output;self||(global.self=player);const result=µ(args.join(" "));if(self||delete global.self,[null,void 0].includes(result)||"string"!=typeof result[""])switch(toString.apply(result)){case"[object Object]":const names=Object.getOwnPropertyNames(result);output=`{ ${names.map(name=>`${name}: ${core.output(result[name])}`).join(", ")} }`;break;case"[object Function]":output=`${result}`.replace(/\r/g,"");break;case"[foreign HostFunction]":let input=args.slice(-1)[0].split(".").slice(-1)[0];input.endsWith("]")&&(input=eval(input.replace(/.*\[/,"").slice(0,-1))),output=`hostFunction ${input.split(/[|;]/g)[0]}() { [native code] }`;break;default:output=core.output(result)}else output=result[""];return output}catch(error){throw self||delete global.self,core.error(error)}},get export(){return core.session.exporters.slice(-1)[0]},event:(name,listener)=>{const store=core.session.events[name]||(core.session.events[name]=[]);if(1===store.push(listener)){const manager=server.getPluginManager();core.support.ancient?manager.registerEvent(eval(name),new Listener,(info,event)=>store.forEach(listener=>listener(event)),EventPriority.Highest,core.plugin):manager.registerEvent(Java.type(name).class,new Listener,EventPriority.HIGHEST,(info,event)=>store.forEach(listener=>listener(event)),core.plugin)}},file:(...nodes)=>{const io=Path.of(...nodes).toFile();let parent=io=>{let context=io.getParentFile();if(!context.exists()){const contexts=[];for(;context&&!context.exists();)contexts.push(context),context=context.getParentFile();contexts.reverse().forEach(folder=>folder.mkdir())}};return{add:()=>(parent(io),io.exists()||Files.createFile(io.toPath()),io),dir:()=>(parent(io),io.exists()||io.mkdir(),io),get exists(){return io.exists()},get extension(){return io.getPath().replace(/[\\]/g,"/").split("/").slice(-1)[0].split(".")[1]||null},get io(){return io},get parent(){return core.file(io.getParentFile().getPath())},get path(){return io.getPath().replace(/[\\]/g,"/")},read:()=>{try{const output=[],reader=new BufferedReader(new FileReader(io));return reader.lines().forEach(line=>output.push(line)),reader.close(),output.join("\n")}catch(error){return null}},remove:()=>{io.exists()&&core.clear(io);let context=io.getParentFile();if(context&&context.exists())for(;context&&!context.listFiles()[0];)context.delete(),context=context.getParentFile();return io},write:data=>{try{const writer=new PrintWriter(new FileWriter(io));return writer.print(data),writer.close(),!0}catch(error){return!1}}}},fetch:(location,callback)=>{const conn=new URL(location).openConnection();conn.setDoOutput(!0),conn.setRequestMethod("GET"),conn.setInstanceFollowRedirects(!0),200===conn.getResponseCode()?callback({stream:()=>conn.getInputStream(),text:()=>new Scanner(conn.getInputStream()).useDelimiter("\\A").next(),json:()=>{try{return JSON.parse(new Scanner(conn.getInputStream()).useDelimiter("\\A").next())}catch(error){return null}}}):callback(null,conn.getResponseCode())},from:(query,array)=>[...array].sort().filter(value=>value.includes(query)),generate:()=>{const modules=Object.keys(core.modules),imports=modules.map((name,index)=>`import*as i${index} from'./modules/${name}/module';type t${index}=typeof i${index}.Main`),exports=modules.map((name,index)=>`import(name:'${name}'):t${index}`),dictionary=core.file(core.root,"modules.d.ts");dictionary.add(),dictionary.write(`${imports.join(";")};class core{${exports.join(";")}}`)},import:source=>{if(core.session.cache[source])return core.session.cache[source];{const file=core.file(core.root,`modules/${source}/package.json`);let info;try{info=file.exists?JSON.parse(file.read()):{main:"index"}}catch(error){throw`ImportError: "${file.path}" is not a valid JSON file!`}if(!info.main)throw`ImportError: "${file.path}" is not a valid package file!`;{info.main.endsWith(".js")||(info.main+=".js");const index=core.file(`${file.parent.path}/${info.main}`);if(!index.exists)throw`ImportError: "${index.path}" does not exist!`;try{return core.session.cache[source]=core.parse(index)}catch(error){throw console.error(error.stack||error),`ImportError: "${index.path}" threw an error during evaluation!`}}}},install:(source,callback)=>{core.fetch(`https://api.github.com/repos/${source}/releases`,(response,error)=>{let json=response.json();response&&json?json.message?(console.error(`API - ${json.message}`),callback(null,"An API error occured!")):(json=json.filter(re=>!1===re.draft),"main"===core.options.channel&&(json=json.filter(re=>!1===re.prerelease)),json[0]?core.modules[source]===json[0].id?callback(null,"That module is already up to date!"):core.fetch(json[0].zipball_url,response=>{try{const stream=new ZipInputStream(response.stream()),downloads=core.file(core.root,"downloads");let entry,output;for(downloads.dir();entry=stream.getNextEntry();){const file=core.file(downloads.path,entry.getName());if(entry.isDirectory())file.dir(),output||(output=file);else{const target=new FileOutputStream(file.add());stream.transferTo(target),target.close()}stream.closeEntry()}stream.close();const destination=core.file(core.root,"modules",source).dir();[...destination.listFiles()].forEach(core.clear),Files.move(output.io.toPath(),destination.toPath(),StandardCopyOption.REPLACE_EXISTING),output.remove(),core.modules[source]=json[0].id,callback(!0)}catch(error){console.error(`File - ${error}`),callback(null,"A file error occured!")}}):callback(null,"Your current release channel has no available downloads!")):(console.error(`HTTP - ${error}`),callback(null,"An HTTP error occured!"))})},get modules(){return core.data("grakkit/modules")},get options(){return core.data("grakkit/options")},output:object=>{if(object&&object.constructor===core.circular)return"Circular";{const type=toString.apply(object);switch(type){case"[object Object]":case"[object Function]":case"[foreign HostFunction]":return type.split(" ")[1].slice(0,-1);case"[object Array]":return`[ ${core.serialize(object).map(core.output).join(", ")} ]`;case"[foreign HostObject]":const output=`${object}`;return!output||output.startsWith("class ")?object.getCanonicalName?object.getCanonicalName():object.class?object.class.getCanonicalName():object:output;default:switch(typeof object){case"function":return"Function";case"string":return`"${object}"`;case"symbol":return`@@${`${object}`.slice(7,-1)}`;default:return`${object}`}}}},parse:file=>{let output;const builder=Source.newBuilder("js",file.io).cached(!1);try{return core.session.exporters.push(value=>output=value),Context.eval(builder.mimeType("application/javascript+module").build()),core.session.exporters.pop(),output}catch(error){throw core.session.exporters.pop(),core.error(error)}},get plugin(){return server.getPluginManager().getPlugin("grakkit")},get root(){return core.plugin.getDataFolder().getPath().replace(/[\\]/g,"/")},send:(player,message,action)=>{const limit=action?128:2048;message.length>limit&&(message=`${message.slice(0,limit-3)}...`),action?player.sendMessage(ChatMessageType.ACTION_BAR,new TextComponent(message)):player.sendMessage(message)},serialize:(object,nullify,nodes)=>{if("object"==typeof object){if(null===object)return null;{nodes||(nodes=[object]);let output="function"==typeof object[Symbol.iterator]?[]:{};return Object.keys(object).map(key=>{const value=object[key];nodes.includes(value)?output[key]=nullify?null:new core.circular:output[key]=core.serialize(value,nullify,[...nodes,object])}),output}}return object},session:{cache:{},commands:{},exporters:[],data:{},events:{},modules:[]},support:{ancient:!1,legacy:!1},unload:event=>{event.getPlugin()===core.plugin&&("automatic"===core.options.mode&&core.file(core.root,"index.js").remove(),Object.keys(core.session.data).forEach(path=>{const file=core.file(core.root,`data/${path}.json`);file.add(),file.write(JSON.stringify(core.serialize(core.session.data[path],!0)))}))}},Context=core.plugin.getClass().static.context;try{TextComponent=Java.type("net.md_5.bungee.api.chat.TextComponent"),ChatMessageType=Java.type("net.md_5.bungee.api.ChatMessageType")}catch(error){core.support.legacy=!0}try{EventPriority=Java.type("org.bukkit.event.EventPriority")}catch(error){EventPriority=Java.type("org.bukkit.event.Event$Priority"),core.support.ancient=!0}Object.assign(global,{core:core,global:global,server:server,net:Packages.net}),core.command({name:"js",execute:(player,...args)=>{try{core.send(player,`§7${core.eval(player,...args)}`)}catch(error){core.send(player,`§c${error}`)}},tabComplete:(player,...args)=>{if(!1===core.support.legacy&&"enabled"===core.options.eval)try{core.send(player,`§f${core.eval(player,...args)}`,!0)}catch(error){core.send(player,ChatMessageType.ACTION_BAR,new TextComponent(`§4${error}`))}const input=args.slice(-1)[0],filter=/.*(\!|\^|\&|\*|\(|\-|\+|\=|\{|\||\;|\:|\,|\?|\/)/;let index=0,string=null,nodes=input;for(;index<input.length;){const char=input[index];char===string?string=null:["'",'"',"`"].includes(char)?string=char:!string&&filter.test(char)&&(nodes=nodes.slice(index+1)),++index}index=0,nodes=nodes.replace(/(\[)|(\]\.)/g,".").split(".");let context=global;for(;index<nodes.length-1;){let node=nodes[index++];["'",'"',"`"].includes(node[0])&&(node=node.slice(1,-1)),node.length&&node[0].match(/[0-9]/g)&&(node=Number(node)),context[node]?context=context[node]:context===global&&"self"===node?context=player:index=1/0}if(index===nodes.length-1){const base=(input.match(filter)||[""])[0]+input.replace(filter,"");let segment=nodes.slice(-1)[0];["'",'"',"`"].includes(segment[0])&&(segment=segment.slice(1,-1));const properties=Object.getOwnPropertyNames(context);return"number"==typeof context.length&&["object","function"].includes(typeof context[0])&&properties.push(...Array(context.length).join(" ").split(" ").map((value,index)=>`${index}`)),properties.filter(key=>key.toLowerCase().includes(segment.toLowerCase())).map(key=>{let property="";property=key.length&&key[0].match(/[0-9]/g)?`[${key}]`:key.match(/[^0-9A-Za-z|\_|\$]/g)?`[\`${key.split("`").join("\\`")}\`]`:`.${key}`;const path=base.split(property[0]),name=property.slice(1);return base&&base.match(/[\.\[]/g)?name.includes(path.slice(-1)[0])?path.slice(0,-1).join(property[0])+property:void 0:base.replace(base.replace(filter,""),"")+name}).filter(property=>property)}return[]}}),core.command({name:"module",execute:(player,option,value)=>{if(option&&(option=option.toLowerCase()),value&&(value=value.toLowerCase()),option){const keys=Object.keys(core.modules);switch(option){case"add":case"remove":case"update":if("*"===value)if("add"===option)core.send(player,"§7One sec, just need to download the entire GitHub database...");else if(keys[0])switch(option){case"remove":core.send(player,"§7Deleting..."),keys.forEach(value=>{delete core.modules[value],core.file(core.root,`modules/${value}`).remove(),core.send(player,`§7Module deleted. (${value})`)}),core.send(player,"§7Modules deleted.");break;case"update":core.send(player,"§7Updating...");let update=index=>{const value=keys[index];core.install(value,(data,reason)=>{data?core.send(player,`§7Module updated. (${value})`):core.send(player,`§c${reason} §7(${value})`),++index<keys.length?update(index):core.send(player,"§7Modules updated.")})};update(0)}else core.send(player,`§cThere are no modules to ${option}!`);else if(value)if(value.split("/")[1]&&2===value.split("/").length)switch(option){case"add":core.modules[value]?core.send(player,"§cThat module is already installed!"):(core.send(player,"§7Installing..."),core.install(value,(data,reason)=>{data?(core.generate(),core.send(player,"§7Module installed.")):core.send(player,`§c${reason}`)}));break;case"remove":core.modules[value]?(core.send(player,"§7Deleting..."),delete core.modules[value],core.file(core.root,`modules/${value}`).remove(),core.generate(),core.send(player,"§7Module deleted.")):core.send(player,"§cThat module has not been installed!");break;case"update":core.modules[value]?(core.send(player,"§7Updating..."),core.install(value,(data,reason)=>{data?core.send(player,"§7Module updated."):core.send(player,`§c${reason}`)})):core.send(player,"§cThat module has not been installed!")}else core.send(player,"§cThat repository is invalid!");else core.send(player,"§cYou must specify a repository!");break;case"channel":value?["main","dev"].includes(value)?(core.options.channel=value,core.send(player,"§7Release channel updated.")):core.send(player,"§cThat is not a valid release channel!"):core.send(player,"§cYou must specify a release channel!");break;case"list":core.send(player,`§7Installed modules: ${core.output(keys)}`);break;default:core.send(player,"§cThat option does not exist!")}}else core.send(player,"§cYou must specify an option!")},tabComplete:(player,option,value,appendix)=>{if(option&&(option=option.toLowerCase()),value&&(value=value.toLowerCase()),void 0!==appendix)return[];if(void 0===value)return void 0!==option?core.from(option,["add","channel","list","remove","update"]):[];switch(option){case"add":return core.from(value,core.session.modules);case"channel":return core.from(value,["main","dev"]);case"remove":case"update":return core.from(value,["*",...Object.keys(core.modules)]);default:return[]}}}),core.command({name:"grakkit",execute:(player,option,value)=>{if(option&&(option=option.toLowerCase()),value&&(value=value.toLowerCase()),option)switch(option){case"eval":value?["enabled","disabled"].includes(value)?(core.options.eval=value,core.send(player,`§7Live evaluation ${value}.`)):core.send(player,"§cThat is not a valid state!"):core.send(player,"§cYou must specify a state!");break;case"mode":value?["manual","automatic"].includes(value)?(core.options.mode=value,core.send(player,"§7Update mode updated.")):core.send(player,"§cThat is not a valid update mode!"):core.send(player,"§cYou must specify an update mode!");break;case"refresh":server.getPluginManager().disablePlugin(core.plugin),server.getPluginManager().enablePlugin(core.plugin),core.send(player,"§7Refresh complete.");break;case"script":if(value)if(value.includes("/"))core.send(player,"§cThat file name is invalid!");else{const source=core.file(core.root,core.options.script||"user.js"),target=core.file(core.root,value);Files.move(source.io.toPath(),target.io.toPath(),StandardCopyOption.REPLACE_EXISTING),core.options.script=value,core.send(player,"§7Script location updated.")}else core.send(player,"§cYou must specify a file name!");break;case"update":core.file(core.root,"index.js").remove(),server.reload(),core.send(player,"§7Update complete.");break;default:core.send(player,"§cThat option does not exist!")}else core.send(player,"§cYou must specify an option!")},tabComplete:(player,option,value,appendix)=>{if(option&&(option=option.toLowerCase()),value&&(value=value.toLowerCase()),void 0!==appendix)return[];if(void 0===value)return void 0!==option?core.from(option,["eval","mode","refresh","script","update"]):[];switch(option){case"mode":return core.from(value,["automatic","manual"]);case"eval":return core.from(value,["disabled","enabled"]);case"script":return core.from(value,[core.options.script||"user.js"]);default:return[]}}}),core.support.ancient?core.event("org.bukkit.event.Event$Type.PLUGIN_DISABLE",core.unload):core.event("org.bukkit.event.server.PluginDisableEvent",core.unload);const script=core.file(core.root,core.options.script||"user.js");script.exists||(script.add(),script.write("/** @type{import('./modules').core} */ const core = global.core;\n")),core.parse(script),core.fetch("https://raw.githubusercontent.com/grakkit/core/master/modules.json",response=>{const json=response&&response.json();json&&(core.session.modules=json)})}();